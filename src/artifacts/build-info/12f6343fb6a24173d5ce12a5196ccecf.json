{"id":"12f6343fb6a24173d5ce12a5196ccecf","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/interfaces/IERC1271.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1271.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC1271 standard signature validation method for\n * contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\n */\ninterface IERC1271 {\n    /**\n     * @dev Should return whether the signature provided is valid for the provided data\n     * @param hash      Hash of the data to be signed\n     * @param signature Signature byte array associated with _data\n     */\n    function isValidSignature(bytes32 hash, bytes memory signature) external view returns (bytes4 magicValue);\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Create2.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Create2.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n * `CREATE2` can be used to compute in advance the address where a smart\n * contract will be deployed, which allows for interesting new mechanisms known\n * as 'counterfactual interactions'.\n *\n * See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n * information.\n */\nlibrary Create2 {\n    /**\n     * @dev Not enough balance for performing a CREATE2 deploy.\n     */\n    error Create2InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev There's no code to deploy.\n     */\n    error Create2EmptyBytecode();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error Create2FailedDeployment();\n\n    /**\n     * @dev Deploys a contract using `CREATE2`. The address where the contract\n     * will be deployed can be known in advance via {computeAddress}.\n     *\n     * The bytecode for a contract can be obtained from Solidity with\n     * `type(contractName).creationCode`.\n     *\n     * Requirements:\n     *\n     * - `bytecode` must not be empty.\n     * - `salt` must have not been used for `bytecode` already.\n     * - the factory must have a balance of at least `amount`.\n     * - if `amount` is non-zero, `bytecode` must have a `payable` constructor.\n     */\n    function deploy(uint256 amount, bytes32 salt, bytes memory bytecode) internal returns (address addr) {\n        if (address(this).balance < amount) {\n            revert Create2InsufficientBalance(address(this).balance, amount);\n        }\n        if (bytecode.length == 0) {\n            revert Create2EmptyBytecode();\n        }\n        /// @solidity memory-safe-assembly\n        assembly {\n            addr := create2(amount, add(bytecode, 0x20), mload(bytecode), salt)\n        }\n        if (addr == address(0)) {\n            revert Create2FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n     * `bytecodeHash` or `salt` will result in a new destination address.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash) internal view returns (address) {\n        return computeAddress(salt, bytecodeHash, address(this));\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n     * `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash, address deployer) internal pure returns (address addr) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40) // Get free memory pointer\n\n            // |                   | ↓ ptr ...  ↓ ptr + 0x0B (start) ...  ↓ ptr + 0x20 ...  ↓ ptr + 0x40 ...   |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | bytecodeHash      |                                                        CCCCCCCCCCCCC...CC |\n            // | salt              |                                      BBBBBBBBBBBBB...BB                   |\n            // | deployer          | 000000...0000AAAAAAAAAAAAAAAAAAA...AA                                     |\n            // | 0xFF              |            FF                                                             |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | memory            | 000000...00FFAAAAAAAAAAAAAAAAAAA...AABBBBBBBBBBBBB...BBCCCCCCCCCCCCC...CC |\n            // | keccak(start, 85) |            ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ |\n\n            mstore(add(ptr, 0x40), bytecodeHash)\n            mstore(add(ptr, 0x20), salt)\n            mstore(ptr, deployer) // Right-aligned with 12 preceding garbage bytes\n            let start := add(ptr, 0x0b) // The hashed data starts at the final garbage byte which we will set to 0xff\n            mstore8(start, 0xff)\n            addr := keccak256(start, 85)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/SignatureChecker.sol)\n\npragma solidity ^0.8.20;\n\nimport {ECDSA} from \"./ECDSA.sol\";\nimport {IERC1271} from \"../../interfaces/IERC1271.sol\";\n\n/**\n * @dev Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA\n * signatures from externally owned accounts (EOAs) as well as ERC1271 signatures from smart contract wallets like\n * Argent and Safe Wallet (previously Gnosis Safe).\n */\nlibrary SignatureChecker {\n    /**\n     * @dev Checks if a signature is valid for a given signer and data hash. If the signer is a smart contract, the\n     * signature is validated against that smart contract using ERC1271, otherwise it's validated using `ECDSA.recover`.\n     *\n     * NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\n     * change through time. It could return true at block N and false at block N+1 (or the opposite).\n     */\n    function isValidSignatureNow(address signer, bytes32 hash, bytes memory signature) internal view returns (bool) {\n        (address recovered, ECDSA.RecoverError error, ) = ECDSA.tryRecover(hash, signature);\n        return\n            (error == ECDSA.RecoverError.NoError && recovered == signer) ||\n            isValidERC1271SignatureNow(signer, hash, signature);\n    }\n\n    /**\n     * @dev Checks if a signature is valid for a given signer and data hash. The signature is validated\n     * against the signer smart contract using ERC1271.\n     *\n     * NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\n     * change through time. It could return true at block N and false at block N+1 (or the opposite).\n     */\n    function isValidERC1271SignatureNow(\n        address signer,\n        bytes32 hash,\n        bytes memory signature\n    ) internal view returns (bool) {\n        (bool success, bytes memory result) = signer.staticcall(\n            abi.encodeCall(IERC1271.isValidSignature, (hash, signature))\n        );\n        return (success &&\n            result.length >= 32 &&\n            abi.decode(result, (bytes32)) == bytes32(IERC1271.isValidSignature.selector));\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"contracts/TokenBoundAccount.sol":{"content":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\r\nimport \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/interfaces/IERC1271.sol\";\r\nimport \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\";\r\nimport \"../interfaces/IERC6551Account.sol\";\r\nimport \"../lib/ERC6551AccountLib.sol\";\r\n\r\ncontract TokenBoundAccount is IERC165, IERC1271, IERC6551Account {\r\n    uint256 public nonce;\r\n    receive() external payable {}\r\n\r\n    function executeCall(\r\n        address to,\r\n        uint256 value,\r\n        bytes calldata data\r\n    ) external payable returns (bytes memory result) {\r\n        require(msg.sender == owner(), \"Not token owner\");\r\n\r\n        ++nonce;\r\n\r\n        emit TransactionExecuted(to, value, data);\r\n        bool success;\r\n        (success, result) = to.call{value: value}(data);\r\n\r\n        if (!success) {\r\n            assembly {\r\n                revert(add(result, 32), mload(result))\r\n            }\r\n        }\r\n    }\r\n\r\n    function token() external view returns (uint256, address, uint256) {\r\n        return ERC6551AccountLib.token();\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        (uint256 chainId, address tokenContract, uint256 tokenId) = this.token();\r\n        if (chainId != block.chainid) return address(0);\r\n\r\n        return IERC721(tokenContract).ownerOf(tokenId);\r\n    }\r\n\r\n    function supportsInterface(bytes4 interfaceId) public pure returns (bool) {\r\n        return(interfaceId == type(IERC165).interfaceId || interfaceId == type(IERC6551Account).interfaceId);\r\n    }\r\n\r\n    function balance() public view returns(uint256) {\r\n        return address(this).balance;\r\n    }\r\n\r\n    function isValidSignature(bytes32 hash, bytes memory signature) external view returns (bytes4 magicValue) {\r\n        bool isValid = SignatureChecker.isValidSignatureNow(owner(), hash, signature);\r\n\r\n        if (isValid) {\r\n            return IERC1271.isValidSignature.selector;\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n}\r\n"},"interfaces/IERC6551Account.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC6551AccountProxy {\r\n    function implementation() external view returns (address);\r\n}\r\n\r\n/// @dev the ERC-165 identifier for this interface is `0xeff4d378`\r\ninterface IERC6551Account {\r\n    event TransactionExecuted(address indexed target, uint256 indexed value, bytes data);\r\n\r\n    receive() external payable;\r\n\r\n    function executeCall(\r\n        address to,\r\n        uint256 value,\r\n        bytes calldata data\r\n    ) external payable returns (bytes memory);\r\n\r\n    function token()\r\n        external\r\n        view\r\n        returns (\r\n            uint256 chainId,\r\n            address tokenContract,\r\n            uint256 tokenId\r\n        );\r\n\r\n    function owner() external view returns (address);\r\n\r\n    function nonce() external view returns (uint256);\r\n}"},"lib/ERC6551AccountLib.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/utils/Create2.sol\";\r\n\r\nlibrary ERC6551AccountLib {\r\n    function computeAddress(\r\n        address registry,\r\n        address implementation,\r\n        uint256 chainId,\r\n        address tokenContract,\r\n        uint256 tokenId,\r\n        uint256 _salt\r\n    ) internal pure returns (address) {\r\n        bytes32 bytecodeHash = keccak256(\r\n            _creationCode(\r\n                implementation,\r\n                chainId,\r\n                tokenContract,\r\n                tokenId,\r\n                _salt\r\n            )\r\n        );\r\n\r\n        return Create2.computeAddress(bytes32(_salt), bytecodeHash, registry);\r\n    }\r\n\r\n    function _creationCode(\r\n            address implementation_,\r\n            uint256 chainId_,\r\n            address tokenContract_,\r\n            uint256 tokenId_,\r\n            uint256 salt_\r\n        ) internal pure returns (bytes memory) {\r\n            return\r\n                abi.encodePacked(\r\n                    hex\"3d60ad80600a3d3981f3363d3d373d3d3d363d73\",\r\n                    implementation_,\r\n                    hex\"5af43d82803e903d91602b57fd5bf3\",\r\n                    abi.encode(salt_, chainId_, tokenContract_, tokenId_)\r\n                );\r\n        }\r\n\r\n    function token()\r\n        internal\r\n        view\r\n        returns (\r\n            uint256,\r\n            address,\r\n            uint256\r\n        )\r\n    {\r\n        bytes memory footer = new bytes(0x60);\r\n\r\n        assembly {\r\n            // copy 0x60 bytes from end of footer\r\n            extcodecopy(address(), add(footer, 0x20), 0x4d, 0xad)\r\n        }\r\n\r\n        return abi.decode(footer, (uint256, address, uint256));\r\n    }\r\n\r\n    function salt() internal view returns (uint256) {\r\n        bytes memory footer = new bytes(0x20);\r\n\r\n        assembly {\r\n            // copy 0x20 bytes from beginning of footer\r\n            extcodecopy(address(), add(footer, 0x20), 0x2d, 0x4d)\r\n        }\r\n\r\n        return abi.decode(footer, (uint256));\r\n    }\r\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/interfaces/IERC1271.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1271.sol","exportedSymbols":{"IERC1271":[13]},"id":14,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1271","contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"133:159:0","text":" @dev Interface of the ERC1271 standard signature validation method for\n contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271]."},"fullyImplemented":false,"id":13,"linearizedBaseContracts":[13],"name":"IERC1271","nameLocation":"303:8:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"318:220:0","text":" @dev Should return whether the signature provided is valid for the provided data\n @param hash      Hash of the data to be signed\n @param signature Signature byte array associated with _data"},"functionSelector":"1626ba7e","id":12,"implemented":false,"kind":"function","modifiers":[],"name":"isValidSignature","nameLocation":"552:16:0","nodeType":"FunctionDefinition","parameters":{"id":8,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"mutability":"mutable","name":"hash","nameLocation":"577:4:0","nodeType":"VariableDeclaration","scope":12,"src":"569:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4,"name":"bytes32","nodeType":"ElementaryTypeName","src":"569:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7,"mutability":"mutable","name":"signature","nameLocation":"596:9:0","nodeType":"VariableDeclaration","scope":12,"src":"583:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6,"name":"bytes","nodeType":"ElementaryTypeName","src":"583:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"568:38:0"},"returnParameters":{"id":11,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10,"mutability":"mutable","name":"magicValue","nameLocation":"637:10:0","nodeType":"VariableDeclaration","scope":12,"src":"630:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":9,"name":"bytes4","nodeType":"ElementaryTypeName","src":"630:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"629:19:0"},"scope":13,"src":"543:106:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":14,"src":"293:358:0","usedErrors":[],"usedEvents":[]}],"src":"107:545:0"},"id":0},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","exportedSymbols":{"IERC1155Receiver":[55],"IERC165":[814]},"id":56,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":15,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:1"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":17,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":56,"sourceUnit":815,"src":"144:62:1","symbolAliases":[{"foreign":{"id":16,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"152:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":19,"name":"IERC165","nameLocations":["357:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":814,"src":"357:7:1"},"id":20,"nodeType":"InheritanceSpecifier","src":"357:7:1"}],"canonicalName":"IERC1155Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":18,"nodeType":"StructuredDocumentation","src":"208:118:1","text":" @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."},"fullyImplemented":false,"id":55,"linearizedBaseContracts":[55,814],"name":"IERC1155Receiver","nameLocation":"337:16:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":21,"nodeType":"StructuredDocumentation","src":"371:826:1","text":" @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"},"functionSelector":"f23a6e61","id":36,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"1211:17:1","nodeType":"FunctionDefinition","parameters":{"id":32,"nodeType":"ParameterList","parameters":[{"constant":false,"id":23,"mutability":"mutable","name":"operator","nameLocation":"1246:8:1","nodeType":"VariableDeclaration","scope":36,"src":"1238:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":22,"name":"address","nodeType":"ElementaryTypeName","src":"1238:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":25,"mutability":"mutable","name":"from","nameLocation":"1272:4:1","nodeType":"VariableDeclaration","scope":36,"src":"1264:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":24,"name":"address","nodeType":"ElementaryTypeName","src":"1264:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":27,"mutability":"mutable","name":"id","nameLocation":"1294:2:1","nodeType":"VariableDeclaration","scope":36,"src":"1286:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26,"name":"uint256","nodeType":"ElementaryTypeName","src":"1286:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29,"mutability":"mutable","name":"value","nameLocation":"1314:5:1","nodeType":"VariableDeclaration","scope":36,"src":"1306:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":28,"name":"uint256","nodeType":"ElementaryTypeName","src":"1306:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":31,"mutability":"mutable","name":"data","nameLocation":"1344:4:1","nodeType":"VariableDeclaration","scope":36,"src":"1329:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":30,"name":"bytes","nodeType":"ElementaryTypeName","src":"1329:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1228:126:1"},"returnParameters":{"id":35,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":36,"src":"1373:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":33,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1373:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1372:8:1"},"scope":55,"src":"1202:179:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":37,"nodeType":"StructuredDocumentation","src":"1387:994:1","text":" @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"},"functionSelector":"bc197c81","id":54,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"2395:22:1","nodeType":"FunctionDefinition","parameters":{"id":50,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39,"mutability":"mutable","name":"operator","nameLocation":"2435:8:1","nodeType":"VariableDeclaration","scope":54,"src":"2427:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"2427:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41,"mutability":"mutable","name":"from","nameLocation":"2461:4:1","nodeType":"VariableDeclaration","scope":54,"src":"2453:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":40,"name":"address","nodeType":"ElementaryTypeName","src":"2453:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":44,"mutability":"mutable","name":"ids","nameLocation":"2494:3:1","nodeType":"VariableDeclaration","scope":54,"src":"2475:22:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":42,"name":"uint256","nodeType":"ElementaryTypeName","src":"2475:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":43,"nodeType":"ArrayTypeName","src":"2475:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":47,"mutability":"mutable","name":"values","nameLocation":"2526:6:1","nodeType":"VariableDeclaration","scope":54,"src":"2507:25:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":45,"name":"uint256","nodeType":"ElementaryTypeName","src":"2507:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":46,"nodeType":"ArrayTypeName","src":"2507:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":49,"mutability":"mutable","name":"data","nameLocation":"2557:4:1","nodeType":"VariableDeclaration","scope":54,"src":"2542:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":48,"name":"bytes","nodeType":"ElementaryTypeName","src":"2542:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2417:150:1"},"returnParameters":{"id":53,"nodeType":"ParameterList","parameters":[{"constant":false,"id":52,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":54,"src":"2586:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":51,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2586:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2585:8:1"},"scope":55,"src":"2386:208:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":56,"src":"327:2269:1","usedErrors":[],"usedEvents":[]}],"src":"118:2479:1"},"id":1},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[133]},"id":134,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":57,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":58,"nodeType":"StructuredDocumentation","src":"132:70:2","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":133,"linearizedBaseContracts":[133],"name":"IERC20","nameLocation":"213:6:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"226:158:2","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":67,"name":"Transfer","nameLocation":"395:8:2","nodeType":"EventDefinition","parameters":{"id":66,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:2","nodeType":"VariableDeclaration","scope":67,"src":"404:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":63,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:2","nodeType":"VariableDeclaration","scope":67,"src":"426:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":65,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:2","nodeType":"VariableDeclaration","scope":67,"src":"446:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":64,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:2"},"src":"389:72:2"},{"anonymous":false,"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"467:148:2","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":76,"name":"Approval","nameLocation":"626:8:2","nodeType":"EventDefinition","parameters":{"id":75,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:2","nodeType":"VariableDeclaration","scope":76,"src":"635:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":72,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:2","nodeType":"VariableDeclaration","scope":76,"src":"658:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":71,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":74,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:2","nodeType":"VariableDeclaration","scope":76,"src":"683:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":73,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:2"},"src":"620:78:2"},{"documentation":{"id":77,"nodeType":"StructuredDocumentation","src":"704:65:2","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":82,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:2","nodeType":"FunctionDefinition","parameters":{"id":78,"nodeType":"ParameterList","parameters":[],"src":"794:2:2"},"returnParameters":{"id":81,"nodeType":"ParameterList","parameters":[{"constant":false,"id":80,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":82,"src":"820:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":79,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:2"},"scope":133,"src":"774:55:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":83,"nodeType":"StructuredDocumentation","src":"835:71:2","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":90,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:2","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[{"constant":false,"id":85,"mutability":"mutable","name":"account","nameLocation":"938:7:2","nodeType":"VariableDeclaration","scope":90,"src":"930:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":84,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:2"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[{"constant":false,"id":88,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":90,"src":"970:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":87,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:2"},"scope":133,"src":"911:68:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":91,"nodeType":"StructuredDocumentation","src":"985:213:2","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":100,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:2","nodeType":"FunctionDefinition","parameters":{"id":96,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"to","nameLocation":"1229:2:2","nodeType":"VariableDeclaration","scope":100,"src":"1221:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":95,"mutability":"mutable","name":"value","nameLocation":"1241:5:2","nodeType":"VariableDeclaration","scope":100,"src":"1233:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":94,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:2"},"returnParameters":{"id":99,"nodeType":"ParameterList","parameters":[{"constant":false,"id":98,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":100,"src":"1266:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":97,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:2"},"scope":133,"src":"1203:69:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":101,"nodeType":"StructuredDocumentation","src":"1278:264:2","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":110,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:2","nodeType":"FunctionDefinition","parameters":{"id":106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103,"mutability":"mutable","name":"owner","nameLocation":"1574:5:2","nodeType":"VariableDeclaration","scope":110,"src":"1566:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":102,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":105,"mutability":"mutable","name":"spender","nameLocation":"1589:7:2","nodeType":"VariableDeclaration","scope":110,"src":"1581:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":104,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:2"},"returnParameters":{"id":109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":110,"src":"1621:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":107,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:2"},"scope":133,"src":"1547:83:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":111,"nodeType":"StructuredDocumentation","src":"1636:667:2","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":120,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:2","nodeType":"FunctionDefinition","parameters":{"id":116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":113,"mutability":"mutable","name":"spender","nameLocation":"2333:7:2","nodeType":"VariableDeclaration","scope":120,"src":"2325:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":112,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":115,"mutability":"mutable","name":"value","nameLocation":"2350:5:2","nodeType":"VariableDeclaration","scope":120,"src":"2342:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":114,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:2"},"returnParameters":{"id":119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":120,"src":"2375:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":117,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:2"},"scope":133,"src":"2308:73:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":121,"nodeType":"StructuredDocumentation","src":"2387:297:2","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":132,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:2","nodeType":"FunctionDefinition","parameters":{"id":128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":123,"mutability":"mutable","name":"from","nameLocation":"2719:4:2","nodeType":"VariableDeclaration","scope":132,"src":"2711:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":122,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":125,"mutability":"mutable","name":"to","nameLocation":"2733:2:2","nodeType":"VariableDeclaration","scope":132,"src":"2725:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":124,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":127,"mutability":"mutable","name":"value","nameLocation":"2745:5:2","nodeType":"VariableDeclaration","scope":132,"src":"2737:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":126,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:2"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":130,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":132,"src":"2770:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":129,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:2"},"scope":133,"src":"2689:87:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":134,"src":"203:2575:2","usedErrors":[],"usedEvents":[67,76]}],"src":"106:2673:2"},"id":2},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[814],"IERC721":[250]},"id":251,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":135,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:3"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":137,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":251,"sourceUnit":815,"src":"134:62:3","symbolAliases":[{"foreign":{"id":136,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"142:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":139,"name":"IERC165","nameLocations":["287:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":814,"src":"287:7:3"},"id":140,"nodeType":"InheritanceSpecifier","src":"287:7:3"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":138,"nodeType":"StructuredDocumentation","src":"198:67:3","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":250,"linearizedBaseContracts":[250,814],"name":"IERC721","nameLocation":"276:7:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":141,"nodeType":"StructuredDocumentation","src":"301:88:3","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":149,"name":"Transfer","nameLocation":"400:8:3","nodeType":"EventDefinition","parameters":{"id":148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":143,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"425:4:3","nodeType":"VariableDeclaration","scope":149,"src":"409:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":142,"name":"address","nodeType":"ElementaryTypeName","src":"409:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":145,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"447:2:3","nodeType":"VariableDeclaration","scope":149,"src":"431:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":144,"name":"address","nodeType":"ElementaryTypeName","src":"431:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":147,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"467:7:3","nodeType":"VariableDeclaration","scope":149,"src":"451:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":146,"name":"uint256","nodeType":"ElementaryTypeName","src":"451:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"408:67:3"},"src":"394:82:3"},{"anonymous":false,"documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"482:94:3","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":158,"name":"Approval","nameLocation":"587:8:3","nodeType":"EventDefinition","parameters":{"id":157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":152,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"612:5:3","nodeType":"VariableDeclaration","scope":158,"src":"596:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"596:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":154,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"635:8:3","nodeType":"VariableDeclaration","scope":158,"src":"619:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":153,"name":"address","nodeType":"ElementaryTypeName","src":"619:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":156,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"661:7:3","nodeType":"VariableDeclaration","scope":158,"src":"645:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":155,"name":"uint256","nodeType":"ElementaryTypeName","src":"645:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"595:74:3"},"src":"581:89:3"},{"anonymous":false,"documentation":{"id":159,"nodeType":"StructuredDocumentation","src":"676:117:3","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":167,"name":"ApprovalForAll","nameLocation":"804:14:3","nodeType":"EventDefinition","parameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":161,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"835:5:3","nodeType":"VariableDeclaration","scope":167,"src":"819:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":160,"name":"address","nodeType":"ElementaryTypeName","src":"819:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":163,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"858:8:3","nodeType":"VariableDeclaration","scope":167,"src":"842:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":162,"name":"address","nodeType":"ElementaryTypeName","src":"842:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":165,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"873:8:3","nodeType":"VariableDeclaration","scope":167,"src":"868:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":164,"name":"bool","nodeType":"ElementaryTypeName","src":"868:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"818:64:3"},"src":"798:85:3"},{"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"889:76:3","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":175,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"979:9:3","nodeType":"FunctionDefinition","parameters":{"id":171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"mutability":"mutable","name":"owner","nameLocation":"997:5:3","nodeType":"VariableDeclaration","scope":175,"src":"989:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":169,"name":"address","nodeType":"ElementaryTypeName","src":"989:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"988:15:3"},"returnParameters":{"id":174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":173,"mutability":"mutable","name":"balance","nameLocation":"1035:7:3","nodeType":"VariableDeclaration","scope":175,"src":"1027:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":172,"name":"uint256","nodeType":"ElementaryTypeName","src":"1027:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1026:17:3"},"scope":250,"src":"970:74:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":176,"nodeType":"StructuredDocumentation","src":"1050:131:3","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":183,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1195:7:3","nodeType":"FunctionDefinition","parameters":{"id":179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"tokenId","nameLocation":"1211:7:3","nodeType":"VariableDeclaration","scope":183,"src":"1203:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":177,"name":"uint256","nodeType":"ElementaryTypeName","src":"1203:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1202:17:3"},"returnParameters":{"id":182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":181,"mutability":"mutable","name":"owner","nameLocation":"1251:5:3","nodeType":"VariableDeclaration","scope":183,"src":"1243:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":180,"name":"address","nodeType":"ElementaryTypeName","src":"1243:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1242:15:3"},"scope":250,"src":"1186:72:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":184,"nodeType":"StructuredDocumentation","src":"1264:565:3","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":195,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1843:16:3","nodeType":"FunctionDefinition","parameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":186,"mutability":"mutable","name":"from","nameLocation":"1868:4:3","nodeType":"VariableDeclaration","scope":195,"src":"1860:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":185,"name":"address","nodeType":"ElementaryTypeName","src":"1860:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":188,"mutability":"mutable","name":"to","nameLocation":"1882:2:3","nodeType":"VariableDeclaration","scope":195,"src":"1874:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":187,"name":"address","nodeType":"ElementaryTypeName","src":"1874:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":190,"mutability":"mutable","name":"tokenId","nameLocation":"1894:7:3","nodeType":"VariableDeclaration","scope":195,"src":"1886:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":189,"name":"uint256","nodeType":"ElementaryTypeName","src":"1886:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":192,"mutability":"mutable","name":"data","nameLocation":"1918:4:3","nodeType":"VariableDeclaration","scope":195,"src":"1903:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":191,"name":"bytes","nodeType":"ElementaryTypeName","src":"1903:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1859:64:3"},"returnParameters":{"id":194,"nodeType":"ParameterList","parameters":[],"src":"1932:0:3"},"scope":250,"src":"1834:99:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":196,"nodeType":"StructuredDocumentation","src":"1939:705:3","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":205,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2658:16:3","nodeType":"FunctionDefinition","parameters":{"id":203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"from","nameLocation":"2683:4:3","nodeType":"VariableDeclaration","scope":205,"src":"2675:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":197,"name":"address","nodeType":"ElementaryTypeName","src":"2675:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":200,"mutability":"mutable","name":"to","nameLocation":"2697:2:3","nodeType":"VariableDeclaration","scope":205,"src":"2689:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":199,"name":"address","nodeType":"ElementaryTypeName","src":"2689:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":202,"mutability":"mutable","name":"tokenId","nameLocation":"2709:7:3","nodeType":"VariableDeclaration","scope":205,"src":"2701:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":201,"name":"uint256","nodeType":"ElementaryTypeName","src":"2701:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2674:43:3"},"returnParameters":{"id":204,"nodeType":"ParameterList","parameters":[],"src":"2726:0:3"},"scope":250,"src":"2649:78:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":206,"nodeType":"StructuredDocumentation","src":"2733:732:3","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":215,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3479:12:3","nodeType":"FunctionDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":208,"mutability":"mutable","name":"from","nameLocation":"3500:4:3","nodeType":"VariableDeclaration","scope":215,"src":"3492:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":207,"name":"address","nodeType":"ElementaryTypeName","src":"3492:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":210,"mutability":"mutable","name":"to","nameLocation":"3514:2:3","nodeType":"VariableDeclaration","scope":215,"src":"3506:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":209,"name":"address","nodeType":"ElementaryTypeName","src":"3506:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":212,"mutability":"mutable","name":"tokenId","nameLocation":"3526:7:3","nodeType":"VariableDeclaration","scope":215,"src":"3518:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":211,"name":"uint256","nodeType":"ElementaryTypeName","src":"3518:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:43:3"},"returnParameters":{"id":214,"nodeType":"ParameterList","parameters":[],"src":"3543:0:3"},"scope":250,"src":"3470:74:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":216,"nodeType":"StructuredDocumentation","src":"3550:452:3","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":223,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4016:7:3","nodeType":"FunctionDefinition","parameters":{"id":221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":218,"mutability":"mutable","name":"to","nameLocation":"4032:2:3","nodeType":"VariableDeclaration","scope":223,"src":"4024:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":217,"name":"address","nodeType":"ElementaryTypeName","src":"4024:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":220,"mutability":"mutable","name":"tokenId","nameLocation":"4044:7:3","nodeType":"VariableDeclaration","scope":223,"src":"4036:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":219,"name":"uint256","nodeType":"ElementaryTypeName","src":"4036:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4023:29:3"},"returnParameters":{"id":222,"nodeType":"ParameterList","parameters":[],"src":"4061:0:3"},"scope":250,"src":"4007:55:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":224,"nodeType":"StructuredDocumentation","src":"4068:315:3","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":231,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4397:17:3","nodeType":"FunctionDefinition","parameters":{"id":229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"operator","nameLocation":"4423:8:3","nodeType":"VariableDeclaration","scope":231,"src":"4415:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":225,"name":"address","nodeType":"ElementaryTypeName","src":"4415:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":228,"mutability":"mutable","name":"approved","nameLocation":"4438:8:3","nodeType":"VariableDeclaration","scope":231,"src":"4433:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":227,"name":"bool","nodeType":"ElementaryTypeName","src":"4433:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4414:33:3"},"returnParameters":{"id":230,"nodeType":"ParameterList","parameters":[],"src":"4456:0:3"},"scope":250,"src":"4388:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":232,"nodeType":"StructuredDocumentation","src":"4463:139:3","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":239,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4616:11:3","nodeType":"FunctionDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"tokenId","nameLocation":"4636:7:3","nodeType":"VariableDeclaration","scope":239,"src":"4628:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":233,"name":"uint256","nodeType":"ElementaryTypeName","src":"4628:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4627:17:3"},"returnParameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":237,"mutability":"mutable","name":"operator","nameLocation":"4676:8:3","nodeType":"VariableDeclaration","scope":239,"src":"4668:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":236,"name":"address","nodeType":"ElementaryTypeName","src":"4668:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4667:18:3"},"scope":250,"src":"4607:79:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"4692:138:3","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":249,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4844:16:3","nodeType":"FunctionDefinition","parameters":{"id":245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":242,"mutability":"mutable","name":"owner","nameLocation":"4869:5:3","nodeType":"VariableDeclaration","scope":249,"src":"4861:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":241,"name":"address","nodeType":"ElementaryTypeName","src":"4861:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":244,"mutability":"mutable","name":"operator","nameLocation":"4884:8:3","nodeType":"VariableDeclaration","scope":249,"src":"4876:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":243,"name":"address","nodeType":"ElementaryTypeName","src":"4876:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4860:33:3"},"returnParameters":{"id":248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":247,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":249,"src":"4917:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":246,"name":"bool","nodeType":"ElementaryTypeName","src":"4917:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4916:6:3"},"scope":250,"src":"4835:88:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":251,"src":"266:4659:3","usedErrors":[],"usedEvents":[149,158,167]}],"src":"108:4818:3"},"id":3},"@openzeppelin/contracts/utils/Create2.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Create2.sol","exportedSymbols":{"Create2":[353]},"id":354,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":252,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"Create2","contractDependencies":[],"contractKind":"library","documentation":{"id":253,"nodeType":"StructuredDocumentation","src":"127:367:4","text":" @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n `CREATE2` can be used to compute in advance the address where a smart\n contract will be deployed, which allows for interesting new mechanisms known\n as 'counterfactual interactions'.\n See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n information."},"fullyImplemented":true,"id":353,"linearizedBaseContracts":[353],"name":"Create2","nameLocation":"503:7:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":254,"nodeType":"StructuredDocumentation","src":"517:75:4","text":" @dev Not enough balance for performing a CREATE2 deploy."},"errorSelector":"e4bbecac","id":260,"name":"Create2InsufficientBalance","nameLocation":"603:26:4","nodeType":"ErrorDefinition","parameters":{"id":259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":256,"mutability":"mutable","name":"balance","nameLocation":"638:7:4","nodeType":"VariableDeclaration","scope":260,"src":"630:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":255,"name":"uint256","nodeType":"ElementaryTypeName","src":"630:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":258,"mutability":"mutable","name":"needed","nameLocation":"655:6:4","nodeType":"VariableDeclaration","scope":260,"src":"647:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":257,"name":"uint256","nodeType":"ElementaryTypeName","src":"647:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"629:33:4"},"src":"597:66:4"},{"documentation":{"id":261,"nodeType":"StructuredDocumentation","src":"669:50:4","text":" @dev There's no code to deploy."},"errorSelector":"4ca249dc","id":263,"name":"Create2EmptyBytecode","nameLocation":"730:20:4","nodeType":"ErrorDefinition","parameters":{"id":262,"nodeType":"ParameterList","parameters":[],"src":"750:2:4"},"src":"724:29:4"},{"documentation":{"id":264,"nodeType":"StructuredDocumentation","src":"759:46:4","text":" @dev The deployment failed."},"errorSelector":"741752c2","id":266,"name":"Create2FailedDeployment","nameLocation":"816:23:4","nodeType":"ErrorDefinition","parameters":{"id":265,"nodeType":"ParameterList","parameters":[],"src":"839:2:4"},"src":"810:32:4"},{"body":{"id":317,"nodeType":"Block","src":"1514:472:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":280,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1536:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_Create2_$353","typeString":"library Create2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Create2_$353","typeString":"library Create2"}],"id":279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1528:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":278,"name":"address","nodeType":"ElementaryTypeName","src":"1528:7:4","typeDescriptions":{}}},"id":281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1528:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1542:7:4","memberName":"balance","nodeType":"MemberAccess","src":"1528:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":283,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"1552:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1528:30:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":295,"nodeType":"IfStatement","src":"1524:125:4","trueBody":{"id":294,"nodeType":"Block","src":"1560:89:4","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":288,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1616:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_Create2_$353","typeString":"library Create2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Create2_$353","typeString":"library Create2"}],"id":287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1608:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":286,"name":"address","nodeType":"ElementaryTypeName","src":"1608:7:4","typeDescriptions":{}}},"id":289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1608:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1622:7:4","memberName":"balance","nodeType":"MemberAccess","src":"1608:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":291,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"1631:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":285,"name":"Create2InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"1581:26:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1581:57:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":293,"nodeType":"RevertStatement","src":"1574:64:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":296,"name":"bytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"1662:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1671:6:4","memberName":"length","nodeType":"MemberAccess","src":"1662:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1681:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1662:20:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":304,"nodeType":"IfStatement","src":"1658:80:4","trueBody":{"id":303,"nodeType":"Block","src":"1684:54:4","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":300,"name":"Create2EmptyBytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"1705:20:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1705:22:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":302,"nodeType":"RevertStatement","src":"1698:29:4"}]}},{"AST":{"nodeType":"YulBlock","src":"1799:91:4","statements":[{"nodeType":"YulAssignment","src":"1813:67:4","value":{"arguments":[{"name":"amount","nodeType":"YulIdentifier","src":"1829:6:4"},{"arguments":[{"name":"bytecode","nodeType":"YulIdentifier","src":"1841:8:4"},{"kind":"number","nodeType":"YulLiteral","src":"1851:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1837:3:4"},"nodeType":"YulFunctionCall","src":"1837:19:4"},{"arguments":[{"name":"bytecode","nodeType":"YulIdentifier","src":"1864:8:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1858:5:4"},"nodeType":"YulFunctionCall","src":"1858:15:4"},{"name":"salt","nodeType":"YulIdentifier","src":"1875:4:4"}],"functionName":{"name":"create2","nodeType":"YulIdentifier","src":"1821:7:4"},"nodeType":"YulFunctionCall","src":"1821:59:4"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"1813:4:4"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":276,"isOffset":false,"isSlot":false,"src":"1813:4:4","valueSize":1},{"declaration":269,"isOffset":false,"isSlot":false,"src":"1829:6:4","valueSize":1},{"declaration":273,"isOffset":false,"isSlot":false,"src":"1841:8:4","valueSize":1},{"declaration":273,"isOffset":false,"isSlot":false,"src":"1864:8:4","valueSize":1},{"declaration":271,"isOffset":false,"isSlot":false,"src":"1875:4:4","valueSize":1}],"id":305,"nodeType":"InlineAssembly","src":"1790:100:4"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":306,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"1903:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1919:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1911:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":307,"name":"address","nodeType":"ElementaryTypeName","src":"1911:7:4","typeDescriptions":{}}},"id":310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1911:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1903:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":316,"nodeType":"IfStatement","src":"1899:81:4","trueBody":{"id":315,"nodeType":"Block","src":"1923:57:4","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":312,"name":"Create2FailedDeployment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"1944:23:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1944:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":314,"nodeType":"RevertStatement","src":"1937:32:4"}]}}]},"documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"848:560:4","text":" @dev Deploys a contract using `CREATE2`. The address where the contract\n will be deployed can be known in advance via {computeAddress}.\n The bytecode for a contract can be obtained from Solidity with\n `type(contractName).creationCode`.\n Requirements:\n - `bytecode` must not be empty.\n - `salt` must have not been used for `bytecode` already.\n - the factory must have a balance of at least `amount`.\n - if `amount` is non-zero, `bytecode` must have a `payable` constructor."},"id":318,"implemented":true,"kind":"function","modifiers":[],"name":"deploy","nameLocation":"1422:6:4","nodeType":"FunctionDefinition","parameters":{"id":274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"amount","nameLocation":"1437:6:4","nodeType":"VariableDeclaration","scope":318,"src":"1429:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":268,"name":"uint256","nodeType":"ElementaryTypeName","src":"1429:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":271,"mutability":"mutable","name":"salt","nameLocation":"1453:4:4","nodeType":"VariableDeclaration","scope":318,"src":"1445:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":270,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1445:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":273,"mutability":"mutable","name":"bytecode","nameLocation":"1472:8:4","nodeType":"VariableDeclaration","scope":318,"src":"1459:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":272,"name":"bytes","nodeType":"ElementaryTypeName","src":"1459:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1428:53:4"},"returnParameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"mutability":"mutable","name":"addr","nameLocation":"1508:4:4","nodeType":"VariableDeclaration","scope":318,"src":"1500:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":275,"name":"address","nodeType":"ElementaryTypeName","src":"1500:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1499:14:4"},"scope":353,"src":"1413:573:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":337,"nodeType":"Block","src":"2282:73:4","statements":[{"expression":{"arguments":[{"id":329,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"2314:4:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":330,"name":"bytecodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"2320:12:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":333,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2342:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_Create2_$353","typeString":"library Create2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Create2_$353","typeString":"library Create2"}],"id":332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2334:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"2334:7:4","typeDescriptions":{}}},"id":334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2334:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":328,"name":"computeAddress","nodeType":"Identifier","overloadedDeclarations":[338,352],"referencedDeclaration":352,"src":"2299:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_address_$returns$_t_address_$","typeString":"function (bytes32,bytes32,address) pure returns (address)"}},"id":335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2299:49:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":327,"id":336,"nodeType":"Return","src":"2292:56:4"}]},"documentation":{"id":319,"nodeType":"StructuredDocumentation","src":"1992:193:4","text":" @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n `bytecodeHash` or `salt` will result in a new destination address."},"id":338,"implemented":true,"kind":"function","modifiers":[],"name":"computeAddress","nameLocation":"2199:14:4","nodeType":"FunctionDefinition","parameters":{"id":324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"mutability":"mutable","name":"salt","nameLocation":"2222:4:4","nodeType":"VariableDeclaration","scope":338,"src":"2214:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2214:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":323,"mutability":"mutable","name":"bytecodeHash","nameLocation":"2236:12:4","nodeType":"VariableDeclaration","scope":338,"src":"2228:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":322,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2228:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2213:36:4"},"returnParameters":{"id":327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":326,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":338,"src":"2273:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":325,"name":"address","nodeType":"ElementaryTypeName","src":"2273:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2272:9:4"},"scope":353,"src":"2190:165:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":351,"nodeType":"Block","src":"2713:1657:4","statements":[{"AST":{"nodeType":"YulBlock","src":"2775:1589:4","statements":[{"nodeType":"YulVariableDeclaration","src":"2789:22:4","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2806:4:4","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2800:5:4"},"nodeType":"YulFunctionCall","src":"2800:11:4"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"2793:3:4","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4013:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"4018:4:4","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4009:3:4"},"nodeType":"YulFunctionCall","src":"4009:14:4"},{"name":"bytecodeHash","nodeType":"YulIdentifier","src":"4025:12:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4002:6:4"},"nodeType":"YulFunctionCall","src":"4002:36:4"},"nodeType":"YulExpressionStatement","src":"4002:36:4"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4062:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"4067:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4058:3:4"},"nodeType":"YulFunctionCall","src":"4058:14:4"},{"name":"salt","nodeType":"YulIdentifier","src":"4074:4:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4051:6:4"},"nodeType":"YulFunctionCall","src":"4051:28:4"},"nodeType":"YulExpressionStatement","src":"4051:28:4"},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4099:3:4"},{"name":"deployer","nodeType":"YulIdentifier","src":"4104:8:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4092:6:4"},"nodeType":"YulFunctionCall","src":"4092:21:4"},"nodeType":"YulExpressionStatement","src":"4092:21:4"},{"nodeType":"YulVariableDeclaration","src":"4175:27:4","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4192:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"4197:4:4","type":"","value":"0x0b"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4188:3:4"},"nodeType":"YulFunctionCall","src":"4188:14:4"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"4179:5:4","type":""}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"4301:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"4308:4:4","type":"","value":"0xff"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"4293:7:4"},"nodeType":"YulFunctionCall","src":"4293:20:4"},"nodeType":"YulExpressionStatement","src":"4293:20:4"},{"nodeType":"YulAssignment","src":"4326:28:4","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"4344:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"4351:2:4","type":"","value":"85"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4334:9:4"},"nodeType":"YulFunctionCall","src":"4334:20:4"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"4326:4:4"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":348,"isOffset":false,"isSlot":false,"src":"4326:4:4","valueSize":1},{"declaration":343,"isOffset":false,"isSlot":false,"src":"4025:12:4","valueSize":1},{"declaration":345,"isOffset":false,"isSlot":false,"src":"4104:8:4","valueSize":1},{"declaration":341,"isOffset":false,"isSlot":false,"src":"4074:4:4","valueSize":1}],"id":350,"nodeType":"InlineAssembly","src":"2766:1598:4"}]},"documentation":{"id":339,"nodeType":"StructuredDocumentation","src":"2361:232:4","text":" @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}."},"id":352,"implemented":true,"kind":"function","modifiers":[],"name":"computeAddress","nameLocation":"2607:14:4","nodeType":"FunctionDefinition","parameters":{"id":346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":341,"mutability":"mutable","name":"salt","nameLocation":"2630:4:4","nodeType":"VariableDeclaration","scope":352,"src":"2622:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":340,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2622:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":343,"mutability":"mutable","name":"bytecodeHash","nameLocation":"2644:12:4","nodeType":"VariableDeclaration","scope":352,"src":"2636:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":342,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2636:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":345,"mutability":"mutable","name":"deployer","nameLocation":"2666:8:4","nodeType":"VariableDeclaration","scope":352,"src":"2658:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":344,"name":"address","nodeType":"ElementaryTypeName","src":"2658:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2621:54:4"},"returnParameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"addr","nameLocation":"2707:4:4","nodeType":"VariableDeclaration","scope":352,"src":"2699:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":347,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2698:14:4"},"scope":353,"src":"2598:1772:4","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":354,"src":"495:3877:4","usedErrors":[260,263,266],"usedEvents":[]}],"src":"101:4272:4"},"id":4},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[701]},"id":702,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":355,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":356,"nodeType":"StructuredDocumentation","src":"138:205:5","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":701,"linearizedBaseContracts":[701],"name":"ECDSA","nameLocation":"352:5:5","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":361,"members":[{"id":357,"name":"NoError","nameLocation":"392:7:5","nodeType":"EnumValue","src":"392:7:5"},{"id":358,"name":"InvalidSignature","nameLocation":"409:16:5","nodeType":"EnumValue","src":"409:16:5"},{"id":359,"name":"InvalidSignatureLength","nameLocation":"435:22:5","nodeType":"EnumValue","src":"435:22:5"},{"id":360,"name":"InvalidSignatureS","nameLocation":"467:17:5","nodeType":"EnumValue","src":"467:17:5"}],"name":"RecoverError","nameLocation":"369:12:5","nodeType":"EnumDefinition","src":"364:126:5"},{"documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"496:63:5","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":364,"name":"ECDSAInvalidSignature","nameLocation":"570:21:5","nodeType":"ErrorDefinition","parameters":{"id":363,"nodeType":"ParameterList","parameters":[],"src":"591:2:5"},"src":"564:30:5"},{"documentation":{"id":365,"nodeType":"StructuredDocumentation","src":"600:60:5","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":369,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:5","nodeType":"ErrorDefinition","parameters":{"id":368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":367,"mutability":"mutable","name":"length","nameLocation":"707:6:5","nodeType":"VariableDeclaration","scope":369,"src":"699:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":366,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:5"},"src":"665:50:5"},{"documentation":{"id":370,"nodeType":"StructuredDocumentation","src":"721:85:5","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":374,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:5","nodeType":"ErrorDefinition","parameters":{"id":373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"s","nameLocation":"848:1:5","nodeType":"VariableDeclaration","scope":374,"src":"840:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":371,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:5"},"src":"811:40:5"},{"body":{"id":426,"nodeType":"Block","src":"2242:653:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":389,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"2256:9:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2266:6:5","memberName":"length","nodeType":"MemberAccess","src":"2256:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2276:2:5","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2256:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":424,"nodeType":"Block","src":"2781:108:5","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2811:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2803:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":411,"name":"address","nodeType":"ElementaryTypeName","src":"2803:7:5","typeDescriptions":{}}},"id":414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2803:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":415,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"2815:12:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$361_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2828:22:5","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":359,"src":"2815:35:5","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$361","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":419,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"2860:9:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2870:6:5","memberName":"length","nodeType":"MemberAccess","src":"2860:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2852:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":417,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2852:7:5","typeDescriptions":{}}},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2852:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":422,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2802:76:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$361_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":388,"id":423,"nodeType":"Return","src":"2795:83:5"}]},"id":425,"nodeType":"IfStatement","src":"2252:637:5","trueBody":{"id":410,"nodeType":"Block","src":"2280:495:5","statements":[{"assignments":[394],"declarations":[{"constant":false,"id":394,"mutability":"mutable","name":"r","nameLocation":"2302:1:5","nodeType":"VariableDeclaration","scope":410,"src":"2294:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":393,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2294:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":395,"nodeType":"VariableDeclarationStatement","src":"2294:9:5"},{"assignments":[397],"declarations":[{"constant":false,"id":397,"mutability":"mutable","name":"s","nameLocation":"2325:1:5","nodeType":"VariableDeclaration","scope":410,"src":"2317:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":396,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2317:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":398,"nodeType":"VariableDeclarationStatement","src":"2317:9:5"},{"assignments":[400],"declarations":[{"constant":false,"id":400,"mutability":"mutable","name":"v","nameLocation":"2346:1:5","nodeType":"VariableDeclaration","scope":410,"src":"2340:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":399,"name":"uint8","nodeType":"ElementaryTypeName","src":"2340:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":401,"nodeType":"VariableDeclarationStatement","src":"2340:7:5"},{"AST":{"nodeType":"YulBlock","src":"2548:171:5","statements":[{"nodeType":"YulAssignment","src":"2566:32:5","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2581:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"2592:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2577:3:5"},"nodeType":"YulFunctionCall","src":"2577:20:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2571:5:5"},"nodeType":"YulFunctionCall","src":"2571:27:5"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2566:1:5"}]},{"nodeType":"YulAssignment","src":"2615:32:5","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2630:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"2641:4:5","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2626:3:5"},"nodeType":"YulFunctionCall","src":"2626:20:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2620:5:5"},"nodeType":"YulFunctionCall","src":"2620:27:5"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2615:1:5"}]},{"nodeType":"YulAssignment","src":"2664:41:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2674:1:5","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2687:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"2698:4:5","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2683:3:5"},"nodeType":"YulFunctionCall","src":"2683:20:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2677:5:5"},"nodeType":"YulFunctionCall","src":"2677:27:5"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2669:4:5"},"nodeType":"YulFunctionCall","src":"2669:36:5"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2664:1:5"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":394,"isOffset":false,"isSlot":false,"src":"2566:1:5","valueSize":1},{"declaration":397,"isOffset":false,"isSlot":false,"src":"2615:1:5","valueSize":1},{"declaration":379,"isOffset":false,"isSlot":false,"src":"2581:9:5","valueSize":1},{"declaration":379,"isOffset":false,"isSlot":false,"src":"2630:9:5","valueSize":1},{"declaration":379,"isOffset":false,"isSlot":false,"src":"2687:9:5","valueSize":1},{"declaration":400,"isOffset":false,"isSlot":false,"src":"2664:1:5","valueSize":1}],"id":402,"nodeType":"InlineAssembly","src":"2539:180:5"},{"expression":{"arguments":[{"id":404,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":377,"src":"2750:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":405,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"2756:1:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":406,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"2759:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":407,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"2762:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":403,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[427,507,615],"referencedDeclaration":615,"src":"2739:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$361_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$361_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":388,"id":409,"nodeType":"Return","src":"2732:32:5"}]}}]},"documentation":{"id":375,"nodeType":"StructuredDocumentation","src":"857:1267:5","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":427,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:5","nodeType":"FunctionDefinition","parameters":{"id":380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":377,"mutability":"mutable","name":"hash","nameLocation":"2157:4:5","nodeType":"VariableDeclaration","scope":427,"src":"2149:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":376,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2149:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":379,"mutability":"mutable","name":"signature","nameLocation":"2176:9:5","nodeType":"VariableDeclaration","scope":427,"src":"2163:22:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":378,"name":"bytes","nodeType":"ElementaryTypeName","src":"2163:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:38:5"},"returnParameters":{"id":388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":427,"src":"2210:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":381,"name":"address","nodeType":"ElementaryTypeName","src":"2210:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":385,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":427,"src":"2219:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$361","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":384,"nodeType":"UserDefinedTypeName","pathNode":{"id":383,"name":"RecoverError","nameLocations":["2219:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":361,"src":"2219:12:5"},"referencedDeclaration":361,"src":"2219:12:5","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$361","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":387,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":427,"src":"2233:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":386,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2233:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2209:32:5"},"scope":701,"src":"2129:766:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":456,"nodeType":"Block","src":"3789:168:5","statements":[{"assignments":[438,441,443],"declarations":[{"constant":false,"id":438,"mutability":"mutable","name":"recovered","nameLocation":"3808:9:5","nodeType":"VariableDeclaration","scope":456,"src":"3800:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":437,"name":"address","nodeType":"ElementaryTypeName","src":"3800:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":441,"mutability":"mutable","name":"error","nameLocation":"3832:5:5","nodeType":"VariableDeclaration","scope":456,"src":"3819:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$361","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":440,"nodeType":"UserDefinedTypeName","pathNode":{"id":439,"name":"RecoverError","nameLocations":["3819:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":361,"src":"3819:12:5"},"referencedDeclaration":361,"src":"3819:12:5","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$361","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":443,"mutability":"mutable","name":"errorArg","nameLocation":"3847:8:5","nodeType":"VariableDeclaration","scope":456,"src":"3839:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":442,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3839:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":448,"initialValue":{"arguments":[{"id":445,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"3870:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":446,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"3876:9:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":444,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[427,507,615],"referencedDeclaration":427,"src":"3859:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$361_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3859:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$361_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3799:87:5"},{"expression":{"arguments":[{"id":450,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"3908:5:5","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$361","typeString":"enum ECDSA.RecoverError"}},{"id":451,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"3915:8:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$361","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":449,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"3896:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$361_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3896:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":453,"nodeType":"ExpressionStatement","src":"3896:28:5"},{"expression":{"id":454,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"3941:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":436,"id":455,"nodeType":"Return","src":"3934:16:5"}]},"documentation":{"id":428,"nodeType":"StructuredDocumentation","src":"2901:796:5","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":457,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3711:7:5","nodeType":"FunctionDefinition","parameters":{"id":433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":430,"mutability":"mutable","name":"hash","nameLocation":"3727:4:5","nodeType":"VariableDeclaration","scope":457,"src":"3719:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":429,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3719:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":432,"mutability":"mutable","name":"signature","nameLocation":"3746:9:5","nodeType":"VariableDeclaration","scope":457,"src":"3733:22:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":431,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3718:38:5"},"returnParameters":{"id":436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":435,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":457,"src":"3780:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":434,"name":"address","nodeType":"ElementaryTypeName","src":"3780:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3779:9:5"},"scope":701,"src":"3702:255:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":506,"nodeType":"Block","src":"4285:342:5","statements":[{"id":505,"nodeType":"UncheckedBlock","src":"4295:326:5","statements":[{"assignments":[475],"declarations":[{"constant":false,"id":475,"mutability":"mutable","name":"s","nameLocation":"4327:1:5","nodeType":"VariableDeclaration","scope":505,"src":"4319:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":474,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4319:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":482,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":476,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"4331:2:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4344:66:5","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4336:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":477,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4336:7:5","typeDescriptions":{}}},"id":480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4336:75:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4331:80:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4319:92:5"},{"assignments":[484],"declarations":[{"constant":false,"id":484,"mutability":"mutable","name":"v","nameLocation":"4528:1:5","nodeType":"VariableDeclaration","scope":505,"src":"4522:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":483,"name":"uint8","nodeType":"ElementaryTypeName","src":"4522:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":497,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":489,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"4547:2:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4539:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":487,"name":"uint256","nodeType":"ElementaryTypeName","src":"4539:7:5","typeDescriptions":{}}},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4539:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4554:3:5","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4539:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":493,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4538:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4561:2:5","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4538:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":485,"name":"uint8","nodeType":"ElementaryTypeName","src":"4532:5:5","typeDescriptions":{}}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4522:42:5"},{"expression":{"arguments":[{"id":499,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"4596:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":500,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"4602:1:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":501,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"4605:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":502,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"4608:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":498,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[427,507,615],"referencedDeclaration":615,"src":"4585:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$361_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4585:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$361_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":473,"id":504,"nodeType":"Return","src":"4578:32:5"}]}]},"documentation":{"id":458,"nodeType":"StructuredDocumentation","src":"3963:205:5","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"},"id":507,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4182:10:5","nodeType":"FunctionDefinition","parameters":{"id":465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":460,"mutability":"mutable","name":"hash","nameLocation":"4201:4:5","nodeType":"VariableDeclaration","scope":507,"src":"4193:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":459,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4193:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":462,"mutability":"mutable","name":"r","nameLocation":"4215:1:5","nodeType":"VariableDeclaration","scope":507,"src":"4207:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":461,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4207:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":464,"mutability":"mutable","name":"vs","nameLocation":"4226:2:5","nodeType":"VariableDeclaration","scope":507,"src":"4218:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":463,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4218:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4192:37:5"},"returnParameters":{"id":473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":467,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":507,"src":"4253:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":466,"name":"address","nodeType":"ElementaryTypeName","src":"4253:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":470,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":507,"src":"4262:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$361","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":469,"nodeType":"UserDefinedTypeName","pathNode":{"id":468,"name":"RecoverError","nameLocations":["4262:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":361,"src":"4262:12:5"},"referencedDeclaration":361,"src":"4262:12:5","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$361","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":507,"src":"4276:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":471,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4276:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4252:32:5"},"scope":701,"src":"4173:454:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":539,"nodeType":"Block","src":"4840:164:5","statements":[{"assignments":[520,523,525],"declarations":[{"constant":false,"id":520,"mutability":"mutable","name":"recovered","nameLocation":"4859:9:5","nodeType":"VariableDeclaration","scope":539,"src":"4851:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":519,"name":"address","nodeType":"ElementaryTypeName","src":"4851:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":523,"mutability":"mutable","name":"error","nameLocation":"4883:5:5","nodeType":"VariableDeclaration","scope":539,"src":"4870:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$361","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":522,"nodeType":"UserDefinedTypeName","pathNode":{"id":521,"name":"RecoverError","nameLocations":["4870:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":361,"src":"4870:12:5"},"referencedDeclaration":361,"src":"4870:12:5","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$361","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":525,"mutability":"mutable","name":"errorArg","nameLocation":"4898:8:5","nodeType":"VariableDeclaration","scope":539,"src":"4890:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":524,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4890:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":531,"initialValue":{"arguments":[{"id":527,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"4921:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":528,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"4927:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":529,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"4930:2:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":526,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[427,507,615],"referencedDeclaration":507,"src":"4910:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$361_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4910:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$361_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4850:83:5"},{"expression":{"arguments":[{"id":533,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"4955:5:5","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$361","typeString":"enum ECDSA.RecoverError"}},{"id":534,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"4962:8:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$361","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":532,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"4943:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$361_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4943:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":536,"nodeType":"ExpressionStatement","src":"4943:28:5"},{"expression":{"id":537,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"4988:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":518,"id":538,"nodeType":"Return","src":"4981:16:5"}]},"documentation":{"id":508,"nodeType":"StructuredDocumentation","src":"4633:116:5","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":540,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4763:7:5","nodeType":"FunctionDefinition","parameters":{"id":515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":510,"mutability":"mutable","name":"hash","nameLocation":"4779:4:5","nodeType":"VariableDeclaration","scope":540,"src":"4771:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":509,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4771:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":512,"mutability":"mutable","name":"r","nameLocation":"4793:1:5","nodeType":"VariableDeclaration","scope":540,"src":"4785:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":511,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4785:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":514,"mutability":"mutable","name":"vs","nameLocation":"4804:2:5","nodeType":"VariableDeclaration","scope":540,"src":"4796:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":513,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4796:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4770:37:5"},"returnParameters":{"id":518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":517,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":540,"src":"4831:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":516,"name":"address","nodeType":"ElementaryTypeName","src":"4831:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4830:9:5"},"scope":701,"src":"4754:250:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":614,"nodeType":"Block","src":"5298:1372:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":561,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"6194:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6186:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":559,"name":"uint256","nodeType":"ElementaryTypeName","src":"6186:7:5","typeDescriptions":{}}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6199:66:5","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6186:79:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":575,"nodeType":"IfStatement","src":"6182:164:5","trueBody":{"id":574,"nodeType":"Block","src":"6267:79:5","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6297:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6289:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":565,"name":"address","nodeType":"ElementaryTypeName","src":"6289:7:5","typeDescriptions":{}}},"id":568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6289:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":569,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"6301:12:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$361_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6314:17:5","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":360,"src":"6301:30:5","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$361","typeString":"enum ECDSA.RecoverError"}},{"id":571,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"6333:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":572,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6288:47:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$361_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":558,"id":573,"nodeType":"Return","src":"6281:54:5"}]}},{"assignments":[577],"declarations":[{"constant":false,"id":577,"mutability":"mutable","name":"signer","nameLocation":"6448:6:5","nodeType":"VariableDeclaration","scope":614,"src":"6440:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":576,"name":"address","nodeType":"ElementaryTypeName","src":"6440:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":584,"initialValue":{"arguments":[{"id":579,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"6467:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":580,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"6473:1:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":581,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"6476:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":582,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"6479:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":578,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6457:9:5","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6457:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6440:41:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":585,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"6495:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6513:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6505:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":586,"name":"address","nodeType":"ElementaryTypeName","src":"6505:7:5","typeDescriptions":{}}},"id":589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6505:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6495:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":604,"nodeType":"IfStatement","src":"6491:113:5","trueBody":{"id":603,"nodeType":"Block","src":"6517:87:5","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6547:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6539:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":591,"name":"address","nodeType":"ElementaryTypeName","src":"6539:7:5","typeDescriptions":{}}},"id":594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6539:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":595,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"6551:12:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$361_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6564:16:5","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":358,"src":"6551:29:5","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$361","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6590:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6582:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":597,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6582:7:5","typeDescriptions":{}}},"id":600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6582:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":601,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6538:55:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$361_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":558,"id":602,"nodeType":"Return","src":"6531:62:5"}]}},{"expression":{"components":[{"id":605,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"6622:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":606,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"6630:12:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$361_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6643:7:5","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":357,"src":"6630:20:5","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$361","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6652:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":608,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6652:7:5","typeDescriptions":{}}},"id":611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6652:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":612,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6621:42:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$361_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":558,"id":613,"nodeType":"Return","src":"6614:49:5"}]},"documentation":{"id":541,"nodeType":"StructuredDocumentation","src":"5010:125:5","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":615,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5149:10:5","nodeType":"FunctionDefinition","parameters":{"id":550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":543,"mutability":"mutable","name":"hash","nameLocation":"5177:4:5","nodeType":"VariableDeclaration","scope":615,"src":"5169:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":542,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5169:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":545,"mutability":"mutable","name":"v","nameLocation":"5197:1:5","nodeType":"VariableDeclaration","scope":615,"src":"5191:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":544,"name":"uint8","nodeType":"ElementaryTypeName","src":"5191:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":547,"mutability":"mutable","name":"r","nameLocation":"5216:1:5","nodeType":"VariableDeclaration","scope":615,"src":"5208:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":546,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5208:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":549,"mutability":"mutable","name":"s","nameLocation":"5235:1:5","nodeType":"VariableDeclaration","scope":615,"src":"5227:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":548,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5227:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5159:83:5"},"returnParameters":{"id":558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":552,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":615,"src":"5266:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":551,"name":"address","nodeType":"ElementaryTypeName","src":"5266:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":615,"src":"5275:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$361","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":554,"nodeType":"UserDefinedTypeName","pathNode":{"id":553,"name":"RecoverError","nameLocations":["5275:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":361,"src":"5275:12:5"},"referencedDeclaration":361,"src":"5275:12:5","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$361","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":557,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":615,"src":"5289:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":556,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5289:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5265:32:5"},"scope":701,"src":"5140:1530:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":650,"nodeType":"Block","src":"6897:166:5","statements":[{"assignments":[630,633,635],"declarations":[{"constant":false,"id":630,"mutability":"mutable","name":"recovered","nameLocation":"6916:9:5","nodeType":"VariableDeclaration","scope":650,"src":"6908:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":629,"name":"address","nodeType":"ElementaryTypeName","src":"6908:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":633,"mutability":"mutable","name":"error","nameLocation":"6940:5:5","nodeType":"VariableDeclaration","scope":650,"src":"6927:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$361","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":632,"nodeType":"UserDefinedTypeName","pathNode":{"id":631,"name":"RecoverError","nameLocations":["6927:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":361,"src":"6927:12:5"},"referencedDeclaration":361,"src":"6927:12:5","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$361","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":635,"mutability":"mutable","name":"errorArg","nameLocation":"6955:8:5","nodeType":"VariableDeclaration","scope":650,"src":"6947:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":634,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6947:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":642,"initialValue":{"arguments":[{"id":637,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"6978:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":638,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"6984:1:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":639,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"6987:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":640,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"6990:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":636,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[427,507,615],"referencedDeclaration":615,"src":"6967:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$361_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6967:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$361_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6907:85:5"},{"expression":{"arguments":[{"id":644,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"7014:5:5","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$361","typeString":"enum ECDSA.RecoverError"}},{"id":645,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"7021:8:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$361","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":643,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"7002:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$361_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7002:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":647,"nodeType":"ExpressionStatement","src":"7002:28:5"},{"expression":{"id":648,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"7047:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":628,"id":649,"nodeType":"Return","src":"7040:16:5"}]},"documentation":{"id":616,"nodeType":"StructuredDocumentation","src":"6676:122:5","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":651,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6812:7:5","nodeType":"FunctionDefinition","parameters":{"id":625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":618,"mutability":"mutable","name":"hash","nameLocation":"6828:4:5","nodeType":"VariableDeclaration","scope":651,"src":"6820:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":617,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6820:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":620,"mutability":"mutable","name":"v","nameLocation":"6840:1:5","nodeType":"VariableDeclaration","scope":651,"src":"6834:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":619,"name":"uint8","nodeType":"ElementaryTypeName","src":"6834:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":622,"mutability":"mutable","name":"r","nameLocation":"6851:1:5","nodeType":"VariableDeclaration","scope":651,"src":"6843:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":621,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6843:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":624,"mutability":"mutable","name":"s","nameLocation":"6862:1:5","nodeType":"VariableDeclaration","scope":651,"src":"6854:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":623,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6854:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6819:45:5"},"returnParameters":{"id":628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":627,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":651,"src":"6888:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":626,"name":"address","nodeType":"ElementaryTypeName","src":"6888:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6887:9:5"},"scope":701,"src":"6803:260:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":699,"nodeType":"Block","src":"7268:460:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$361","typeString":"enum ECDSA.RecoverError"},"id":663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":660,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"7282:5:5","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$361","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":661,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"7291:12:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$361_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7304:7:5","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":357,"src":"7291:20:5","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$361","typeString":"enum ECDSA.RecoverError"}},"src":"7282:29:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$361","typeString":"enum ECDSA.RecoverError"},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":666,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"7378:5:5","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$361","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":667,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"7387:12:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$361_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7400:16:5","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":358,"src":"7387:29:5","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$361","typeString":"enum ECDSA.RecoverError"}},"src":"7378:38:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$361","typeString":"enum ECDSA.RecoverError"},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":674,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"7483:5:5","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$361","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":675,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"7492:12:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$361_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7505:22:5","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":359,"src":"7492:35:5","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$361","typeString":"enum ECDSA.RecoverError"}},"src":"7483:44:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$361","typeString":"enum ECDSA.RecoverError"},"id":689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":686,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"7617:5:5","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$361","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":687,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"7626:12:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$361_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7639:17:5","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":360,"src":"7626:30:5","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$361","typeString":"enum ECDSA.RecoverError"}},"src":"7617:39:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":695,"nodeType":"IfStatement","src":"7613:109:5","trueBody":{"id":694,"nodeType":"Block","src":"7658:64:5","statements":[{"errorCall":{"arguments":[{"id":691,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"7702:8:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":690,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"7679:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7679:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":693,"nodeType":"RevertStatement","src":"7672:39:5"}]}},"id":696,"nodeType":"IfStatement","src":"7479:243:5","trueBody":{"id":685,"nodeType":"Block","src":"7529:78:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":681,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"7586:8:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7578:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":679,"name":"uint256","nodeType":"ElementaryTypeName","src":"7578:7:5","typeDescriptions":{}}},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7578:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":678,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"7550:27:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7550:46:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":684,"nodeType":"RevertStatement","src":"7543:53:5"}]}},"id":697,"nodeType":"IfStatement","src":"7374:348:5","trueBody":{"id":673,"nodeType":"Block","src":"7418:55:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":670,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"7439:21:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7439:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":672,"nodeType":"RevertStatement","src":"7432:30:5"}]}},"id":698,"nodeType":"IfStatement","src":"7278:444:5","trueBody":{"id":665,"nodeType":"Block","src":"7313:55:5","statements":[{"functionReturnParameters":659,"id":664,"nodeType":"Return","src":"7327:7:5"}]}}]},"documentation":{"id":652,"nodeType":"StructuredDocumentation","src":"7069:122:5","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":700,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7205:11:5","nodeType":"FunctionDefinition","parameters":{"id":658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":655,"mutability":"mutable","name":"error","nameLocation":"7230:5:5","nodeType":"VariableDeclaration","scope":700,"src":"7217:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$361","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":654,"nodeType":"UserDefinedTypeName","pathNode":{"id":653,"name":"RecoverError","nameLocations":["7217:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":361,"src":"7217:12:5"},"referencedDeclaration":361,"src":"7217:12:5","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$361","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":657,"mutability":"mutable","name":"errorArg","nameLocation":"7245:8:5","nodeType":"VariableDeclaration","scope":700,"src":"7237:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":656,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7237:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7216:38:5"},"returnParameters":{"id":659,"nodeType":"ParameterList","parameters":[],"src":"7268:0:5"},"scope":701,"src":"7196:532:5","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":702,"src":"344:7386:5","usedErrors":[364,369,374],"usedEvents":[]}],"src":"112:7619:5"},"id":5},"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol","exportedSymbols":{"ECDSA":[701],"IERC1271":[13],"SignatureChecker":[802]},"id":803,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":703,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:6"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"./ECDSA.sol","id":705,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":803,"sourceUnit":702,"src":"149:34:6","symbolAliases":[{"foreign":{"id":704,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"157:5:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1271.sol","file":"../../interfaces/IERC1271.sol","id":707,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":803,"sourceUnit":14,"src":"184:55:6","symbolAliases":[{"foreign":{"id":706,"name":"IERC1271","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"192:8:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignatureChecker","contractDependencies":[],"contractKind":"library","documentation":{"id":708,"nodeType":"StructuredDocumentation","src":"241:289:6","text":" @dev Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA\n signatures from externally owned accounts (EOAs) as well as ERC1271 signatures from smart contract wallets like\n Argent and Safe Wallet (previously Gnosis Safe)."},"fullyImplemented":true,"id":802,"linearizedBaseContracts":[802],"name":"SignatureChecker","nameLocation":"539:16:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":748,"nodeType":"Block","src":"1151:256:6","statements":[{"assignments":[721,724,null],"declarations":[{"constant":false,"id":721,"mutability":"mutable","name":"recovered","nameLocation":"1170:9:6","nodeType":"VariableDeclaration","scope":748,"src":"1162:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":720,"name":"address","nodeType":"ElementaryTypeName","src":"1162:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":724,"mutability":"mutable","name":"error","nameLocation":"1200:5:6","nodeType":"VariableDeclaration","scope":748,"src":"1181:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$361","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":723,"nodeType":"UserDefinedTypeName","pathNode":{"id":722,"name":"ECDSA.RecoverError","nameLocations":["1181:5:6","1187:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":361,"src":"1181:18:6"},"referencedDeclaration":361,"src":"1181:18:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$361","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},null],"id":730,"initialValue":{"arguments":[{"id":727,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"1228:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":728,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"1234:9:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":725,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"1211:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$701_$","typeString":"type(library ECDSA)"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1217:10:6","memberName":"tryRecover","nodeType":"MemberAccess","referencedDeclaration":427,"src":"1211:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$361_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$361_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"1161:83:6"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$361","typeString":"enum ECDSA.RecoverError"},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":731,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"1274:5:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$361","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":732,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"1283:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$701_$","typeString":"type(library ECDSA)"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1289:12:6","memberName":"RecoverError","nodeType":"MemberAccess","referencedDeclaration":361,"src":"1283:18:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$361_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1302:7:6","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":357,"src":"1283:26:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$361","typeString":"enum ECDSA.RecoverError"}},"src":"1274:35:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":736,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"1313:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":737,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"1326:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1313:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1274:58:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":740,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1273:60:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":742,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"1376:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":743,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"1384:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":744,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"1390:9:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":741,"name":"isValidERC1271SignatureNow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"1349:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,bytes32,bytes memory) view returns (bool)"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1349:51:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1273:127:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":719,"id":747,"nodeType":"Return","src":"1254:146:6"}]},"documentation":{"id":709,"nodeType":"StructuredDocumentation","src":"562:472:6","text":" @dev Checks if a signature is valid for a given signer and data hash. If the signer is a smart contract, the\n signature is validated against that smart contract using ERC1271, otherwise it's validated using `ECDSA.recover`.\n NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\n change through time. It could return true at block N and false at block N+1 (or the opposite)."},"id":749,"implemented":true,"kind":"function","modifiers":[],"name":"isValidSignatureNow","nameLocation":"1048:19:6","nodeType":"FunctionDefinition","parameters":{"id":716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":711,"mutability":"mutable","name":"signer","nameLocation":"1076:6:6","nodeType":"VariableDeclaration","scope":749,"src":"1068:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":710,"name":"address","nodeType":"ElementaryTypeName","src":"1068:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":713,"mutability":"mutable","name":"hash","nameLocation":"1092:4:6","nodeType":"VariableDeclaration","scope":749,"src":"1084:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":712,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1084:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":715,"mutability":"mutable","name":"signature","nameLocation":"1111:9:6","nodeType":"VariableDeclaration","scope":749,"src":"1098:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":714,"name":"bytes","nodeType":"ElementaryTypeName","src":"1098:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1067:54:6"},"returnParameters":{"id":719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":718,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":749,"src":"1145:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":717,"name":"bool","nodeType":"ElementaryTypeName","src":"1145:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1144:6:6"},"scope":802,"src":"1039:368:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":800,"nodeType":"Block","src":"1962:309:6","statements":[{"assignments":[762,764],"declarations":[{"constant":false,"id":762,"mutability":"mutable","name":"success","nameLocation":"1978:7:6","nodeType":"VariableDeclaration","scope":800,"src":"1973:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":761,"name":"bool","nodeType":"ElementaryTypeName","src":"1973:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":764,"mutability":"mutable","name":"result","nameLocation":"2000:6:6","nodeType":"VariableDeclaration","scope":800,"src":"1987:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":763,"name":"bytes","nodeType":"ElementaryTypeName","src":"1987:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":776,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":769,"name":"IERC1271","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2056:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1271_$13_$","typeString":"type(contract IERC1271)"}},"id":770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2065:16:6","memberName":"isValidSignature","nodeType":"MemberAccess","referencedDeclaration":12,"src":"2056:25:6","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"}},{"components":[{"id":771,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"2084:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":772,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"2090:9:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":773,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2083:17:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_bytes_memory_ptr_$","typeString":"tuple(bytes32,bytes memory)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"},{"typeIdentifier":"t_tuple$_t_bytes32_$_t_bytes_memory_ptr_$","typeString":"tuple(bytes32,bytes memory)"}],"expression":{"id":767,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2041:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2045:10:6","memberName":"encodeCall","nodeType":"MemberAccess","src":"2041:14:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2041:60:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":765,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"2010:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2017:10:6","memberName":"staticcall","nodeType":"MemberAccess","src":"2010:17:6","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2010:101:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1972:139:6"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":777,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"2129:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":778,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"2152:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2159:6:6","memberName":"length","nodeType":"MemberAccess","src":"2152:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3332","id":780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2169:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"2152:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2129:42:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":785,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"2198:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2207:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":786,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2207:7:6","typeDescriptions":{}}}],"id":788,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2206:9:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"}],"expression":{"id":783,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2187:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2191:6:6","memberName":"decode","nodeType":"MemberAccess","src":"2187:10:6","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2187:29:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"expression":{"expression":{"id":792,"name":"IERC1271","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2228:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1271_$13_$","typeString":"type(contract IERC1271)"}},"id":793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2237:16:6","memberName":"isValidSignature","nodeType":"MemberAccess","referencedDeclaration":12,"src":"2228:25:6","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"}},"id":794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2254:8:6","memberName":"selector","nodeType":"MemberAccess","src":"2228:34:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":791,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2220:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":790,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2220:7:6","typeDescriptions":{}}},"id":795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2220:43:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2187:76:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2129:134:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":798,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2128:136:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":760,"id":799,"nodeType":"Return","src":"2121:143:6"}]},"documentation":{"id":750,"nodeType":"StructuredDocumentation","src":"1413:395:6","text":" @dev Checks if a signature is valid for a given signer and data hash. The signature is validated\n against the signer smart contract using ERC1271.\n NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\n change through time. It could return true at block N and false at block N+1 (or the opposite)."},"id":801,"implemented":true,"kind":"function","modifiers":[],"name":"isValidERC1271SignatureNow","nameLocation":"1822:26:6","nodeType":"FunctionDefinition","parameters":{"id":757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"mutability":"mutable","name":"signer","nameLocation":"1866:6:6","nodeType":"VariableDeclaration","scope":801,"src":"1858:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":751,"name":"address","nodeType":"ElementaryTypeName","src":"1858:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":754,"mutability":"mutable","name":"hash","nameLocation":"1890:4:6","nodeType":"VariableDeclaration","scope":801,"src":"1882:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":753,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1882:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":756,"mutability":"mutable","name":"signature","nameLocation":"1917:9:6","nodeType":"VariableDeclaration","scope":801,"src":"1904:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":755,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1848:84:6"},"returnParameters":{"id":760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":759,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":801,"src":"1956:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":758,"name":"bool","nodeType":"ElementaryTypeName","src":"1956:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1955:6:6"},"scope":802,"src":"1813:458:6","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":803,"src":"531:1742:6","usedErrors":[],"usedEvents":[]}],"src":"123:2151:6"},"id":6},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[814]},"id":815,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":804,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":805,"nodeType":"StructuredDocumentation","src":"141:279:7","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":814,"linearizedBaseContracts":[814],"name":"IERC165","nameLocation":"431:7:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":806,"nodeType":"StructuredDocumentation","src":"445:340:7","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":813,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"799:17:7","nodeType":"FunctionDefinition","parameters":{"id":809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":808,"mutability":"mutable","name":"interfaceId","nameLocation":"824:11:7","nodeType":"VariableDeclaration","scope":813,"src":"817:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":807,"name":"bytes4","nodeType":"ElementaryTypeName","src":"817:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"816:20:7"},"returnParameters":{"id":812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":813,"src":"860:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":810,"name":"bool","nodeType":"ElementaryTypeName","src":"860:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"859:6:7"},"scope":814,"src":"790:76:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":815,"src":"421:447:7","usedErrors":[],"usedEvents":[]}],"src":"115:754:7"},"id":7},"contracts/TokenBoundAccount.sol":{"ast":{"absolutePath":"contracts/TokenBoundAccount.sol","exportedSymbols":{"Create2":[353],"ECDSA":[701],"ERC6551AccountLib":[1174],"IERC1155Receiver":[55],"IERC1271":[13],"IERC165":[814],"IERC20":[133],"IERC6551Account":[1048],"IERC6551AccountProxy":[1005],"IERC721":[250],"SignatureChecker":[802],"TokenBoundAccount":[997]},"id":998,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":816,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"35:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":817,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":998,"sourceUnit":251,"src":"63:58:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":818,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":998,"sourceUnit":815,"src":"123:65:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":819,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":998,"sourceUnit":134,"src":"190:56:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1271.sol","file":"@openzeppelin/contracts/interfaces/IERC1271.sol","id":820,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":998,"sourceUnit":14,"src":"248:57:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol","file":"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol","id":821,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":998,"sourceUnit":803,"src":"307:73:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","file":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","id":822,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":998,"sourceUnit":56,"src":"382:68:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"interfaces/IERC6551Account.sol","file":"../interfaces/IERC6551Account.sol","id":823,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":998,"sourceUnit":1049,"src":"452:43:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"lib/ERC6551AccountLib.sol","file":"../lib/ERC6551AccountLib.sol","id":824,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":998,"sourceUnit":1175,"src":"497:38:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":825,"name":"IERC165","nameLocations":["569:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":814,"src":"569:7:8"},"id":826,"nodeType":"InheritanceSpecifier","src":"569:7:8"},{"baseName":{"id":827,"name":"IERC1271","nameLocations":["578:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":13,"src":"578:8:8"},"id":828,"nodeType":"InheritanceSpecifier","src":"578:8:8"},{"baseName":{"id":829,"name":"IERC6551Account","nameLocations":["588:15:8"],"nodeType":"IdentifierPath","referencedDeclaration":1048,"src":"588:15:8"},"id":830,"nodeType":"InheritanceSpecifier","src":"588:15:8"}],"canonicalName":"TokenBoundAccount","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":997,"linearizedBaseContracts":[997,1048,13,814],"name":"TokenBoundAccount","nameLocation":"548:17:8","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1047],"constant":false,"functionSelector":"affed0e0","id":832,"mutability":"mutable","name":"nonce","nameLocation":"626:5:8","nodeType":"VariableDeclaration","scope":997,"src":"611:20:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":831,"name":"uint256","nodeType":"ElementaryTypeName","src":"611:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"baseFunctions":[1017],"body":{"id":835,"nodeType":"Block","src":"665:2:8","statements":[]},"id":836,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":833,"nodeType":"ParameterList","parameters":[],"src":"645:2:8"},"returnParameters":{"id":834,"nodeType":"ParameterList","parameters":[],"src":"665:0:8"},"scope":997,"src":"638:29:8","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[1028],"body":{"id":884,"nodeType":"Block","src":"825:356:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":848,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"844:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"848:6:8","memberName":"sender","nodeType":"MemberAccess","src":"844:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":850,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"858:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"858:7:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"844:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420746f6b656e206f776e6572","id":853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"867:17:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9","typeString":"literal_string \"Not token owner\""},"value":"Not token owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9","typeString":"literal_string \"Not token owner\""}],"id":847,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"836:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"836:49:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":855,"nodeType":"ExpressionStatement","src":"836:49:8"},{"expression":{"id":857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"898:7:8","subExpression":{"id":856,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"900:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":858,"nodeType":"ExpressionStatement","src":"898:7:8"},{"eventCall":{"arguments":[{"id":860,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"943:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"947:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":862,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"954:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":859,"name":"TransactionExecuted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"923:19:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"923:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":864,"nodeType":"EmitStatement","src":"918:41:8"},{"assignments":[866],"declarations":[{"constant":false,"id":866,"mutability":"mutable","name":"success","nameLocation":"975:7:8","nodeType":"VariableDeclaration","scope":884,"src":"970:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":865,"name":"bool","nodeType":"ElementaryTypeName","src":"970:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":867,"nodeType":"VariableDeclarationStatement","src":"970:12:8"},{"expression":{"id":877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":868,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"994:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":869,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"1003:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":870,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"993:17:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":875,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"1035:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":871,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"1013:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1016:4:8","memberName":"call","nodeType":"MemberAccess","src":"1013:7:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":873,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"1028:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1013:21:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1013:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"src":"993:47:8","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":878,"nodeType":"ExpressionStatement","src":"993:47:8"},{"condition":{"id":880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1057:8:8","subExpression":{"id":879,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"1058:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":883,"nodeType":"IfStatement","src":"1053:121:8","trueBody":{"id":882,"nodeType":"Block","src":"1067:107:8","statements":[{"AST":{"nodeType":"YulBlock","src":"1091:72:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"1121:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"1129:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1117:3:8"},"nodeType":"YulFunctionCall","src":"1117:15:8"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"1140:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1134:5:8"},"nodeType":"YulFunctionCall","src":"1134:13:8"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1110:6:8"},"nodeType":"YulFunctionCall","src":"1110:38:8"},"nodeType":"YulExpressionStatement","src":"1110:38:8"}]},"evmVersion":"paris","externalReferences":[{"declaration":845,"isOffset":false,"isSlot":false,"src":"1121:6:8","valueSize":1},{"declaration":845,"isOffset":false,"isSlot":false,"src":"1140:6:8","valueSize":1}],"id":881,"nodeType":"InlineAssembly","src":"1082:81:8"}]}}]},"functionSelector":"9e5d4c49","id":885,"implemented":true,"kind":"function","modifiers":[],"name":"executeCall","nameLocation":"684:11:8","nodeType":"FunctionDefinition","parameters":{"id":843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":838,"mutability":"mutable","name":"to","nameLocation":"714:2:8","nodeType":"VariableDeclaration","scope":885,"src":"706:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":837,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":840,"mutability":"mutable","name":"value","nameLocation":"735:5:8","nodeType":"VariableDeclaration","scope":885,"src":"727:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":839,"name":"uint256","nodeType":"ElementaryTypeName","src":"727:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":842,"mutability":"mutable","name":"data","nameLocation":"766:4:8","nodeType":"VariableDeclaration","scope":885,"src":"751:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":841,"name":"bytes","nodeType":"ElementaryTypeName","src":"751:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"695:82:8"},"returnParameters":{"id":846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":845,"mutability":"mutable","name":"result","nameLocation":"817:6:8","nodeType":"VariableDeclaration","scope":885,"src":"804:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":844,"name":"bytes","nodeType":"ElementaryTypeName","src":"804:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"803:21:8"},"scope":997,"src":"675:506:8","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[1037],"body":{"id":898,"nodeType":"Block","src":"1256:51:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":894,"name":"ERC6551AccountLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"1274:17:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC6551AccountLib_$1174_$","typeString":"type(library ERC6551AccountLib)"}},"id":895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1292:5:8","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":1151,"src":"1274:23:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_address_$_t_uint256_$","typeString":"function () view returns (uint256,address,uint256)"}},"id":896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1274:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_address_$_t_uint256_$","typeString":"tuple(uint256,address,uint256)"}},"functionReturnParameters":893,"id":897,"nodeType":"Return","src":"1267:32:8"}]},"functionSelector":"fc0c546a","id":899,"implemented":true,"kind":"function","modifiers":[],"name":"token","nameLocation":"1198:5:8","nodeType":"FunctionDefinition","parameters":{"id":886,"nodeType":"ParameterList","parameters":[],"src":"1203:2:8"},"returnParameters":{"id":893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":888,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":899,"src":"1229:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":887,"name":"uint256","nodeType":"ElementaryTypeName","src":"1229:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":890,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":899,"src":"1238:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":889,"name":"address","nodeType":"ElementaryTypeName","src":"1238:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":892,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":899,"src":"1247:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":891,"name":"uint256","nodeType":"ElementaryTypeName","src":"1247:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1228:27:8"},"scope":997,"src":"1189:118:8","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1042],"body":{"id":931,"nodeType":"Block","src":"1362:208:8","statements":[{"assignments":[905,907,909],"declarations":[{"constant":false,"id":905,"mutability":"mutable","name":"chainId","nameLocation":"1382:7:8","nodeType":"VariableDeclaration","scope":931,"src":"1374:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":904,"name":"uint256","nodeType":"ElementaryTypeName","src":"1374:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":907,"mutability":"mutable","name":"tokenContract","nameLocation":"1399:13:8","nodeType":"VariableDeclaration","scope":931,"src":"1391:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":906,"name":"address","nodeType":"ElementaryTypeName","src":"1391:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":909,"mutability":"mutable","name":"tokenId","nameLocation":"1422:7:8","nodeType":"VariableDeclaration","scope":931,"src":"1414:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":908,"name":"uint256","nodeType":"ElementaryTypeName","src":"1414:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":913,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":910,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1433:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_TokenBoundAccount_$997","typeString":"contract TokenBoundAccount"}},"id":911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1438:5:8","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":899,"src":"1433:10:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$_t_address_$_t_uint256_$","typeString":"function () view external returns (uint256,address,uint256)"}},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_address_$_t_uint256_$","typeString":"tuple(uint256,address,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"1373:72:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":914,"name":"chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"1460:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":915,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1471:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1477:7:8","memberName":"chainid","nodeType":"MemberAccess","src":"1471:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1460:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":923,"nodeType":"IfStatement","src":"1456:47:8","trueBody":{"expression":{"arguments":[{"hexValue":"30","id":920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1501:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1493:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":918,"name":"address","nodeType":"ElementaryTypeName","src":"1493:7:8","typeDescriptions":{}}},"id":921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1493:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":903,"id":922,"nodeType":"Return","src":"1486:17:8"}},{"expression":{"arguments":[{"id":928,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"1554:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":925,"name":"tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"1531:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":924,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":250,"src":"1523:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$250_$","typeString":"type(contract IERC721)"}},"id":926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1523:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$250","typeString":"contract IERC721"}},"id":927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1546:7:8","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":183,"src":"1523:30:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1523:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":903,"id":930,"nodeType":"Return","src":"1516:46:8"}]},"functionSelector":"8da5cb5b","id":932,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1324:5:8","nodeType":"FunctionDefinition","parameters":{"id":900,"nodeType":"ParameterList","parameters":[],"src":"1329:2:8"},"returnParameters":{"id":903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":902,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":932,"src":"1353:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":901,"name":"address","nodeType":"ElementaryTypeName","src":"1353:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1352:9:8"},"scope":997,"src":"1315:255:8","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[813],"body":{"id":954,"nodeType":"Block","src":"1652:119:8","statements":[{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":939,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"1670:11:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":941,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"1690:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$814_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$814_$","typeString":"type(contract IERC165)"}],"id":940,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1685:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1685:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$814","typeString":"type(contract IERC165)"}},"id":943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1699:11:8","memberName":"interfaceId","nodeType":"MemberAccess","src":"1685:25:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1670:40:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":945,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"1714:11:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":947,"name":"IERC6551Account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"1734:15:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC6551Account_$1048_$","typeString":"type(contract IERC6551Account)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC6551Account_$1048_$","typeString":"type(contract IERC6551Account)"}],"id":946,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1729:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1729:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC6551Account_$1048","typeString":"type(contract IERC6551Account)"}},"id":949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1751:11:8","memberName":"interfaceId","nodeType":"MemberAccess","src":"1729:33:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1714:48:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1670:92:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":952,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1669:94:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":938,"id":953,"nodeType":"Return","src":"1663:100:8"}]},"functionSelector":"01ffc9a7","id":955,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1587:17:8","nodeType":"FunctionDefinition","parameters":{"id":935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":934,"mutability":"mutable","name":"interfaceId","nameLocation":"1612:11:8","nodeType":"VariableDeclaration","scope":955,"src":"1605:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":933,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1605:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1604:20:8"},"returnParameters":{"id":938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":955,"src":"1646:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":936,"name":"bool","nodeType":"ElementaryTypeName","src":"1646:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1645:6:8"},"scope":997,"src":"1578:193:8","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":966,"nodeType":"Block","src":"1827:47:8","statements":[{"expression":{"expression":{"arguments":[{"id":962,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1853:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_TokenBoundAccount_$997","typeString":"contract TokenBoundAccount"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_TokenBoundAccount_$997","typeString":"contract TokenBoundAccount"}],"id":961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1845:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":960,"name":"address","nodeType":"ElementaryTypeName","src":"1845:7:8","typeDescriptions":{}}},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1845:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1859:7:8","memberName":"balance","nodeType":"MemberAccess","src":"1845:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":959,"id":965,"nodeType":"Return","src":"1838:28:8"}]},"functionSelector":"b69ef8a8","id":967,"implemented":true,"kind":"function","modifiers":[],"name":"balance","nameLocation":"1788:7:8","nodeType":"FunctionDefinition","parameters":{"id":956,"nodeType":"ParameterList","parameters":[],"src":"1795:2:8"},"returnParameters":{"id":959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":958,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":967,"src":"1818:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":957,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1817:9:8"},"scope":997,"src":"1779:95:8","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[12],"body":{"id":995,"nodeType":"Block","src":"1988:209:8","statements":[{"assignments":[977],"declarations":[{"constant":false,"id":977,"mutability":"mutable","name":"isValid","nameLocation":"2004:7:8","nodeType":"VariableDeclaration","scope":995,"src":"1999:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":976,"name":"bool","nodeType":"ElementaryTypeName","src":"1999:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":985,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":980,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"2051:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2051:7:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":982,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"2060:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":983,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"2066:9:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":978,"name":"SignatureChecker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"2014:16:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignatureChecker_$802_$","typeString":"type(library SignatureChecker)"}},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2031:19:8","memberName":"isValidSignatureNow","nodeType":"MemberAccess","referencedDeclaration":749,"src":"2014:36:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,bytes32,bytes memory) view returns (bool)"}},"id":984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2014:62:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"1999:77:8"},{"condition":{"id":986,"name":"isValid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"2093:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":992,"nodeType":"IfStatement","src":"2089:81:8","trueBody":{"id":991,"nodeType":"Block","src":"2102:68:8","statements":[{"expression":{"expression":{"expression":{"id":987,"name":"IERC1271","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2124:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1271_$13_$","typeString":"type(contract IERC1271)"}},"id":988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2133:16:8","memberName":"isValidSignature","nodeType":"MemberAccess","referencedDeclaration":12,"src":"2124:25:8","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"}},"id":989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2150:8:8","memberName":"selector","nodeType":"MemberAccess","src":"2124:34:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":975,"id":990,"nodeType":"Return","src":"2117:41:8"}]}},{"expression":{"hexValue":"","id":993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2187:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":975,"id":994,"nodeType":"Return","src":"2180:9:8"}]},"functionSelector":"1626ba7e","id":996,"implemented":true,"kind":"function","modifiers":[],"name":"isValidSignature","nameLocation":"1891:16:8","nodeType":"FunctionDefinition","parameters":{"id":972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":969,"mutability":"mutable","name":"hash","nameLocation":"1916:4:8","nodeType":"VariableDeclaration","scope":996,"src":"1908:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":968,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1908:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":971,"mutability":"mutable","name":"signature","nameLocation":"1935:9:8","nodeType":"VariableDeclaration","scope":996,"src":"1922:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":970,"name":"bytes","nodeType":"ElementaryTypeName","src":"1922:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1907:38:8"},"returnParameters":{"id":975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":974,"mutability":"mutable","name":"magicValue","nameLocation":"1976:10:8","nodeType":"VariableDeclaration","scope":996,"src":"1969:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":973,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1969:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1968:19:8"},"scope":997,"src":"1882:315:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":998,"src":"539:1663:8","usedErrors":[],"usedEvents":[1014]}],"src":"35:2169:8"},"id":8},"interfaces/IERC6551Account.sol":{"ast":{"absolutePath":"interfaces/IERC6551Account.sol","exportedSymbols":{"IERC6551Account":[1048],"IERC6551AccountProxy":[1005]},"id":1049,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":999,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC6551AccountProxy","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1005,"linearizedBaseContracts":[1005],"name":"IERC6551AccountProxy","nameLocation":"70:20:9","nodeType":"ContractDefinition","nodes":[{"functionSelector":"5c60da1b","id":1004,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"107:14:9","nodeType":"FunctionDefinition","parameters":{"id":1000,"nodeType":"ParameterList","parameters":[],"src":"121:2:9"},"returnParameters":{"id":1003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1002,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1004,"src":"147:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1001,"name":"address","nodeType":"ElementaryTypeName","src":"147:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"146:9:9"},"scope":1005,"src":"98:58:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1049,"src":"60:99:9","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC6551Account","contractDependencies":[],"contractKind":"interface","documentation":{"id":1006,"nodeType":"StructuredDocumentation","src":"163:68:9","text":"@dev the ERC-165 identifier for this interface is `0xeff4d378`"},"fullyImplemented":false,"id":1048,"linearizedBaseContracts":[1048],"name":"IERC6551Account","nameLocation":"241:15:9","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"47d99ad340f52da66535aff7e10da1ceb85a32bcbd9fa1c42314d194545e14d2","id":1014,"name":"TransactionExecuted","nameLocation":"270:19:9","nodeType":"EventDefinition","parameters":{"id":1013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1008,"indexed":true,"mutability":"mutable","name":"target","nameLocation":"306:6:9","nodeType":"VariableDeclaration","scope":1014,"src":"290:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1007,"name":"address","nodeType":"ElementaryTypeName","src":"290:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1010,"indexed":true,"mutability":"mutable","name":"value","nameLocation":"330:5:9","nodeType":"VariableDeclaration","scope":1014,"src":"314:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1009,"name":"uint256","nodeType":"ElementaryTypeName","src":"314:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1012,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"343:4:9","nodeType":"VariableDeclaration","scope":1014,"src":"337:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1011,"name":"bytes","nodeType":"ElementaryTypeName","src":"337:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"289:59:9"},"src":"264:85:9"},{"id":1017,"implemented":false,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1015,"nodeType":"ParameterList","parameters":[],"src":"364:2:9"},"returnParameters":{"id":1016,"nodeType":"ParameterList","parameters":[],"src":"383:0:9"},"scope":1048,"src":"357:27:9","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"9e5d4c49","id":1028,"implemented":false,"kind":"function","modifiers":[],"name":"executeCall","nameLocation":"401:11:9","nodeType":"FunctionDefinition","parameters":{"id":1024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1019,"mutability":"mutable","name":"to","nameLocation":"431:2:9","nodeType":"VariableDeclaration","scope":1028,"src":"423:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1018,"name":"address","nodeType":"ElementaryTypeName","src":"423:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1021,"mutability":"mutable","name":"value","nameLocation":"452:5:9","nodeType":"VariableDeclaration","scope":1028,"src":"444:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1020,"name":"uint256","nodeType":"ElementaryTypeName","src":"444:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1023,"mutability":"mutable","name":"data","nameLocation":"483:4:9","nodeType":"VariableDeclaration","scope":1028,"src":"468:19:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1022,"name":"bytes","nodeType":"ElementaryTypeName","src":"468:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"412:82:9"},"returnParameters":{"id":1027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1026,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1028,"src":"521:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1025,"name":"bytes","nodeType":"ElementaryTypeName","src":"521:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"520:14:9"},"scope":1048,"src":"392:143:9","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"fc0c546a","id":1037,"implemented":false,"kind":"function","modifiers":[],"name":"token","nameLocation":"552:5:9","nodeType":"FunctionDefinition","parameters":{"id":1029,"nodeType":"ParameterList","parameters":[],"src":"557:2:9"},"returnParameters":{"id":1036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1031,"mutability":"mutable","name":"chainId","nameLocation":"632:7:9","nodeType":"VariableDeclaration","scope":1037,"src":"624:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1030,"name":"uint256","nodeType":"ElementaryTypeName","src":"624:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1033,"mutability":"mutable","name":"tokenContract","nameLocation":"662:13:9","nodeType":"VariableDeclaration","scope":1037,"src":"654:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1032,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1035,"mutability":"mutable","name":"tokenId","nameLocation":"698:7:9","nodeType":"VariableDeclaration","scope":1037,"src":"690:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1034,"name":"uint256","nodeType":"ElementaryTypeName","src":"690:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"609:107:9"},"scope":1048,"src":"543:174:9","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8da5cb5b","id":1042,"implemented":false,"kind":"function","modifiers":[],"name":"owner","nameLocation":"734:5:9","nodeType":"FunctionDefinition","parameters":{"id":1038,"nodeType":"ParameterList","parameters":[],"src":"739:2:9"},"returnParameters":{"id":1041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1040,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1042,"src":"765:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1039,"name":"address","nodeType":"ElementaryTypeName","src":"765:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"764:9:9"},"scope":1048,"src":"725:49:9","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"affed0e0","id":1047,"implemented":false,"kind":"function","modifiers":[],"name":"nonce","nameLocation":"791:5:9","nodeType":"FunctionDefinition","parameters":{"id":1043,"nodeType":"ParameterList","parameters":[],"src":"796:2:9"},"returnParameters":{"id":1046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1045,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1047,"src":"822:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1044,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:9:9"},"scope":1048,"src":"782:49:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1049,"src":"231:603:9","usedErrors":[],"usedEvents":[1014]}],"src":"33:801:9"},"id":9},"lib/ERC6551AccountLib.sol":{"ast":{"absolutePath":"lib/ERC6551AccountLib.sol","exportedSymbols":{"Create2":[353],"ERC6551AccountLib":[1174]},"id":1175,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1050,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:10"},{"absolutePath":"@openzeppelin/contracts/utils/Create2.sol","file":"@openzeppelin/contracts/utils/Create2.sol","id":1051,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1175,"sourceUnit":354,"src":"60:51:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC6551AccountLib","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":1174,"linearizedBaseContracts":[1174],"name":"ERC6551AccountLib","nameLocation":"123:17:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":1090,"nodeType":"Block","src":"379:328:10","statements":[{"assignments":[1069],"declarations":[{"constant":false,"id":1069,"mutability":"mutable","name":"bytecodeHash","nameLocation":"398:12:10","nodeType":"VariableDeclaration","scope":1090,"src":"390:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1068,"name":"bytes32","nodeType":"ElementaryTypeName","src":"390:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1079,"initialValue":{"arguments":[{"arguments":[{"id":1072,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"469:14:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1073,"name":"chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"502:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1074,"name":"tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"528:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1075,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"560:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1076,"name":"_salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"586:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1071,"name":"_creationCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"437:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,uint256,address,uint256,uint256) pure returns (bytes memory)"}},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"437:169:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1070,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"413:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"413:204:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"390:227:10"},{"expression":{"arguments":[{"arguments":[{"id":1084,"name":"_salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"668:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"660:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1082,"name":"bytes32","nodeType":"ElementaryTypeName","src":"660:7:10","typeDescriptions":{}}},"id":1085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"660:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1086,"name":"bytecodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"676:12:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1087,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"690:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1080,"name":"Create2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":353,"src":"637:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Create2_$353_$","typeString":"type(library Create2)"}},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"645:14:10","memberName":"computeAddress","nodeType":"MemberAccess","referencedDeclaration":352,"src":"637:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_address_$returns$_t_address_$","typeString":"function (bytes32,bytes32,address) pure returns (address)"}},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"637:62:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1067,"id":1089,"nodeType":"Return","src":"630:69:10"}]},"id":1091,"implemented":true,"kind":"function","modifiers":[],"name":"computeAddress","nameLocation":"157:14:10","nodeType":"FunctionDefinition","parameters":{"id":1064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1053,"mutability":"mutable","name":"registry","nameLocation":"190:8:10","nodeType":"VariableDeclaration","scope":1091,"src":"182:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1052,"name":"address","nodeType":"ElementaryTypeName","src":"182:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1055,"mutability":"mutable","name":"implementation","nameLocation":"217:14:10","nodeType":"VariableDeclaration","scope":1091,"src":"209:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1054,"name":"address","nodeType":"ElementaryTypeName","src":"209:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1057,"mutability":"mutable","name":"chainId","nameLocation":"250:7:10","nodeType":"VariableDeclaration","scope":1091,"src":"242:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1056,"name":"uint256","nodeType":"ElementaryTypeName","src":"242:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1059,"mutability":"mutable","name":"tokenContract","nameLocation":"276:13:10","nodeType":"VariableDeclaration","scope":1091,"src":"268:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1058,"name":"address","nodeType":"ElementaryTypeName","src":"268:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1061,"mutability":"mutable","name":"tokenId","nameLocation":"308:7:10","nodeType":"VariableDeclaration","scope":1091,"src":"300:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1060,"name":"uint256","nodeType":"ElementaryTypeName","src":"300:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1063,"mutability":"mutable","name":"_salt","nameLocation":"334:5:10","nodeType":"VariableDeclaration","scope":1091,"src":"326:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1062,"name":"uint256","nodeType":"ElementaryTypeName","src":"326:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"171:175:10"},"returnParameters":{"id":1067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1066,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1091,"src":"370:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1065,"name":"address","nodeType":"ElementaryTypeName","src":"370:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"369:9:10"},"scope":1174,"src":"148:559:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1120,"nodeType":"Block","src":"951:326:10","statements":[{"expression":{"arguments":[{"hexValue":"3d60ad80600a3d3981f3363d3d373d3d3d363d73","id":1108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"1029:45:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_836adec1fae8cb2fe2fc9b187068d52c49d3f7b5116f9fb1b00c7488ba5e7190","typeString":"literal_string hex\"3d60ad80600a3d3981f3363d3d373d3d3d363d73\""}},{"id":1109,"name":"implementation_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"1097:15:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"5af43d82803e903d91602b57fd5bf3","id":1110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"1135:35:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_11a195f66c9175f46895bae2006d40848a680c7068b9fc4af248ff9a54a47e45","typeString":"literal_string hex\"5af43d82803e903d91602b57fd5bf3\""}},{"arguments":[{"id":1113,"name":"salt_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"1204:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1114,"name":"chainId_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"1211:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1115,"name":"tokenContract_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"1221:14:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1116,"name":"tokenId_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"1237:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1111,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1193:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1197:6:10","memberName":"encode","nodeType":"MemberAccess","src":"1193:10:10","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1193:53:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_836adec1fae8cb2fe2fc9b187068d52c49d3f7b5116f9fb1b00c7488ba5e7190","typeString":"literal_string hex\"3d60ad80600a3d3981f3363d3d373d3d3d363d73\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_stringliteral_11a195f66c9175f46895bae2006d40848a680c7068b9fc4af248ff9a54a47e45","typeString":"literal_string hex\"5af43d82803e903d91602b57fd5bf3\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1106,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"990:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"994:12:10","memberName":"encodePacked","nodeType":"MemberAccess","src":"990:16:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"990:275:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1105,"id":1119,"nodeType":"Return","src":"966:299:10"}]},"id":1121,"implemented":true,"kind":"function","modifiers":[],"name":"_creationCode","nameLocation":"724:13:10","nodeType":"FunctionDefinition","parameters":{"id":1102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1093,"mutability":"mutable","name":"implementation_","nameLocation":"760:15:10","nodeType":"VariableDeclaration","scope":1121,"src":"752:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1092,"name":"address","nodeType":"ElementaryTypeName","src":"752:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1095,"mutability":"mutable","name":"chainId_","nameLocation":"798:8:10","nodeType":"VariableDeclaration","scope":1121,"src":"790:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1094,"name":"uint256","nodeType":"ElementaryTypeName","src":"790:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1097,"mutability":"mutable","name":"tokenContract_","nameLocation":"829:14:10","nodeType":"VariableDeclaration","scope":1121,"src":"821:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1096,"name":"address","nodeType":"ElementaryTypeName","src":"821:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1099,"mutability":"mutable","name":"tokenId_","nameLocation":"866:8:10","nodeType":"VariableDeclaration","scope":1121,"src":"858:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1098,"name":"uint256","nodeType":"ElementaryTypeName","src":"858:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1101,"mutability":"mutable","name":"salt_","nameLocation":"897:5:10","nodeType":"VariableDeclaration","scope":1121,"src":"889:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1100,"name":"uint256","nodeType":"ElementaryTypeName","src":"889:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"737:176:10"},"returnParameters":{"id":1105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1104,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1121,"src":"937:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1103,"name":"bytes","nodeType":"ElementaryTypeName","src":"937:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"936:14:10"},"scope":1174,"src":"715:562:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1150,"nodeType":"Block","src":"1434:274:10","statements":[{"assignments":[1131],"declarations":[{"constant":false,"id":1131,"mutability":"mutable","name":"footer","nameLocation":"1458:6:10","nodeType":"VariableDeclaration","scope":1150,"src":"1445:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1130,"name":"bytes","nodeType":"ElementaryTypeName","src":"1445:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1136,"initialValue":{"arguments":[{"hexValue":"30783630","id":1134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1477:4:10","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"0x60"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"}],"id":1133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1467:9:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1132,"name":"bytes","nodeType":"ElementaryTypeName","src":"1471:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1467:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1445:37:10"},{"AST":{"nodeType":"YulBlock","src":"1504:130:10","statements":[{"expression":{"arguments":[{"arguments":[],"functionName":{"name":"address","nodeType":"YulIdentifier","src":"1582:7:10"},"nodeType":"YulFunctionCall","src":"1582:9:10"},{"arguments":[{"name":"footer","nodeType":"YulIdentifier","src":"1597:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"1605:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1593:3:10"},"nodeType":"YulFunctionCall","src":"1593:17:10"},{"kind":"number","nodeType":"YulLiteral","src":"1612:4:10","type":"","value":"0x4d"},{"kind":"number","nodeType":"YulLiteral","src":"1618:4:10","type":"","value":"0xad"}],"functionName":{"name":"extcodecopy","nodeType":"YulIdentifier","src":"1570:11:10"},"nodeType":"YulFunctionCall","src":"1570:53:10"},"nodeType":"YulExpressionStatement","src":"1570:53:10"}]},"evmVersion":"paris","externalReferences":[{"declaration":1131,"isOffset":false,"isSlot":false,"src":"1597:6:10","valueSize":1}],"id":1137,"nodeType":"InlineAssembly","src":"1495:139:10"},{"expression":{"arguments":[{"id":1140,"name":"footer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"1664:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1673:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1141,"name":"uint256","nodeType":"ElementaryTypeName","src":"1673:7:10","typeDescriptions":{}}},{"id":1144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1682:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1143,"name":"address","nodeType":"ElementaryTypeName","src":"1682:7:10","typeDescriptions":{}}},{"id":1146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1691:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1145,"name":"uint256","nodeType":"ElementaryTypeName","src":"1691:7:10","typeDescriptions":{}}}],"id":1147,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1672:27:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_uint256_$_$_t_type$_t_address_$_$_t_type$_t_uint256_$_$","typeString":"tuple(type(uint256),type(address),type(uint256))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_uint256_$_$_t_type$_t_address_$_$_t_type$_t_uint256_$_$","typeString":"tuple(type(uint256),type(address),type(uint256))"}],"expression":{"id":1138,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1653:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1657:6:10","memberName":"decode","nodeType":"MemberAccess","src":"1653:10:10","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1653:47:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_address_payable_$_t_uint256_$","typeString":"tuple(uint256,address payable,uint256)"}},"functionReturnParameters":1129,"id":1149,"nodeType":"Return","src":"1646:54:10"}]},"id":1151,"implemented":true,"kind":"function","modifiers":[],"name":"token","nameLocation":"1294:5:10","nodeType":"FunctionDefinition","parameters":{"id":1122,"nodeType":"ParameterList","parameters":[],"src":"1299:2:10"},"returnParameters":{"id":1129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1124,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1151,"src":"1366:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1123,"name":"uint256","nodeType":"ElementaryTypeName","src":"1366:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1126,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1151,"src":"1388:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1125,"name":"address","nodeType":"ElementaryTypeName","src":"1388:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1151,"src":"1410:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1127,"name":"uint256","nodeType":"ElementaryTypeName","src":"1410:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1351:77:10"},"scope":1174,"src":"1285:423:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1172,"nodeType":"Block","src":"1764:262:10","statements":[{"assignments":[1157],"declarations":[{"constant":false,"id":1157,"mutability":"mutable","name":"footer","nameLocation":"1788:6:10","nodeType":"VariableDeclaration","scope":1172,"src":"1775:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1156,"name":"bytes","nodeType":"ElementaryTypeName","src":"1775:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1162,"initialValue":{"arguments":[{"hexValue":"30783230","id":1160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1807:4:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":1159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1797:9:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1158,"name":"bytes","nodeType":"ElementaryTypeName","src":"1801:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1797:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1775:37:10"},{"AST":{"nodeType":"YulBlock","src":"1834:136:10","statements":[{"expression":{"arguments":[{"arguments":[],"functionName":{"name":"address","nodeType":"YulIdentifier","src":"1918:7:10"},"nodeType":"YulFunctionCall","src":"1918:9:10"},{"arguments":[{"name":"footer","nodeType":"YulIdentifier","src":"1933:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"1941:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1929:3:10"},"nodeType":"YulFunctionCall","src":"1929:17:10"},{"kind":"number","nodeType":"YulLiteral","src":"1948:4:10","type":"","value":"0x2d"},{"kind":"number","nodeType":"YulLiteral","src":"1954:4:10","type":"","value":"0x4d"}],"functionName":{"name":"extcodecopy","nodeType":"YulIdentifier","src":"1906:11:10"},"nodeType":"YulFunctionCall","src":"1906:53:10"},"nodeType":"YulExpressionStatement","src":"1906:53:10"}]},"evmVersion":"paris","externalReferences":[{"declaration":1157,"isOffset":false,"isSlot":false,"src":"1933:6:10","valueSize":1}],"id":1163,"nodeType":"InlineAssembly","src":"1825:145:10"},{"expression":{"arguments":[{"id":1166,"name":"footer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"2000:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2009:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1167,"name":"uint256","nodeType":"ElementaryTypeName","src":"2009:7:10","typeDescriptions":{}}}],"id":1169,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2008:9:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"expression":{"id":1164,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1989:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1993:6:10","memberName":"decode","nodeType":"MemberAccess","src":"1989:10:10","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1989:29:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1155,"id":1171,"nodeType":"Return","src":"1982:36:10"}]},"id":1173,"implemented":true,"kind":"function","modifiers":[],"name":"salt","nameLocation":"1725:4:10","nodeType":"FunctionDefinition","parameters":{"id":1152,"nodeType":"ParameterList","parameters":[],"src":"1729:2:10"},"returnParameters":{"id":1155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1173,"src":"1755:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1153,"name":"uint256","nodeType":"ElementaryTypeName","src":"1755:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1754:9:10"},"scope":1174,"src":"1716:310:10","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1175,"src":"115:1914:10","usedErrors":[],"usedEvents":[]}],"src":"33:1996:10"},"id":10}},"contracts":{"@openzeppelin/contracts/interfaces/IERC1271.sol":{"IERC1271":{"abi":[{"inputs":[{"internalType":"bytes32","name":"hash","type":"bytes32"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"isValidSignature","outputs":[{"internalType":"bytes4","name":"magicValue","type":"bytes4"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"isValidSignature(bytes32,bytes)":"1626ba7e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC1271 standard signature validation method for contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\",\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes32,bytes)\":{\"details\":\"Should return whether the signature provided is valid for the provided data\",\"params\":{\"hash\":\"Hash of the data to be signed\",\"signature\":\"Signature byte array associated with _data\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":\"IERC1271\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x85a45f3f10014a0f8be41157a32b6a5f905753ea64a4b64e29fc12b7deeecf39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3c74009ce36136b36c77c23935b8e4a7b4f253be2da2be4fb4a916b1ce43743\",\"dweb:/ipfs/QmcH36v3iN7SJJuF73AunLR2LtNxhVJ1wm63ph4dPZ4pcL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"IERC1155Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Create2.sol":{"Create2":{"abi":[{"inputs":[],"name":"Create2EmptyBytecode","type":"error"},{"inputs":[],"name":"Create2FailedDeployment","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"Create2InsufficientBalance","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f268a976c09bb0f49808ce4d4bb77bc2c66dd756b14542867f2d2bfa3b6b07b964736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE PUSH9 0xA976C09BB0F49808CE 0x4D 0x4B 0xB7 PUSH28 0xC2C66DD756B14542867F2D2BFA3B6B07B964736F6C63430008140033 ","sourceMap":"495:3877:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f268a976c09bb0f49808ce4d4bb77bc2c66dd756b14542867f2d2bfa3b6b07b964736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE PUSH9 0xA976C09BB0F49808CE 0x4D 0x4B 0xB7 PUSH28 0xC2C66DD756B14542867F2D2BFA3B6B07B964736F6C63430008140033 ","sourceMap":"495:3877:4:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Create2EmptyBytecode\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Create2FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"Create2InsufficientBalance\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Helper to make usage of the `CREATE2` EVM opcode easier and safer. `CREATE2` can be used to compute in advance the address where a smart contract will be deployed, which allows for interesting new mechanisms known as 'counterfactual interactions'. See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more information.\",\"errors\":{\"Create2EmptyBytecode()\":[{\"details\":\"There's no code to deploy.\"}],\"Create2FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"Create2InsufficientBalance(uint256,uint256)\":[{\"details\":\"Not enough balance for performing a CREATE2 deploy.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Create2.sol\":\"Create2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0x2b9807d194b92f1068d868e9587d27037264a9a067c778486f86ae21c61cbd5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22d71f40aa38a20cf466d8647452a6e3f746353474f8c8af40f03aa8cae38420\",\"dweb:/ipfs/QmQ752Hz5av7YDK8pFojzb5qgeXQvfsdkdwkHVzaXoYAZR\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205c2dd3b0bfb87dc5c8cdda90411642948b2f1b22157b65a111fc980003dd4d6264736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C 0x2D 0xD3 0xB0 0xBF 0xB8 PUSH30 0xC5C8CDDA90411642948B2F1B22157B65A111FC980003DD4D6264736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"344:7386:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205c2dd3b0bfb87dc5c8cdda90411642948b2f1b22157b65a111fc980003dd4d6264736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C 0x2D 0xD3 0xB0 0xBF 0xB8 PUSH30 0xC5C8CDDA90411642948B2F1B22157B65A111FC980003DD4D6264736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"344:7386:5:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol":{"SignatureChecker":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203b4880bf055264993caf437b27bf58080894b9e431bbfa6d01a80e007bbd597364736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE BASEFEE DUP1 0xBF SDIV MSTORE PUSH5 0x993CAF437B 0x27 0xBF PC ADDMOD ADDMOD SWAP5 0xB9 0xE4 BALANCE 0xBB STATICCALL PUSH14 0x1A80E007BBD597364736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"531:1742:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203b4880bf055264993caf437b27bf58080894b9e431bbfa6d01a80e007bbd597364736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE BASEFEE DUP1 0xBF SDIV MSTORE PUSH5 0x993CAF437B 0x27 0xBF PC ADDMOD ADDMOD SWAP5 0xB9 0xE4 BALANCE 0xBB STATICCALL PUSH14 0x1A80E007BBD597364736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"531:1742:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA signatures from externally owned accounts (EOAs) as well as ERC1271 signatures from smart contract wallets like Argent and Safe Wallet (previously Gnosis Safe).\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":\"SignatureChecker\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x85a45f3f10014a0f8be41157a32b6a5f905753ea64a4b64e29fc12b7deeecf39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3c74009ce36136b36c77c23935b8e4a7b4f253be2da2be4fb4a916b1ce43743\",\"dweb:/ipfs/QmcH36v3iN7SJJuF73AunLR2LtNxhVJ1wm63ph4dPZ4pcL\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":{\"keccak256\":\"0x6b11eb41a228cca35d4b662b4df69fcd75192851365102690f57b2ac01e83fe6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab006a2983ed350d2af21ddcdd835dcae3b8340086cc4d088460da5abd041f69\",\"dweb:/ipfs/QmbEacDhkJZiGrgzLjB4pNtE8Z1uudjDw1DvcDUTVQFsLG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"contracts/TokenBoundAccount.sol":{"TokenBoundAccount":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":true,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"TransactionExecuted","type":"event"},{"inputs":[],"name":"balance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"executeCall","outputs":[{"internalType":"bytes","name":"result","type":"bytes"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"hash","type":"bytes32"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"isValidSignature","outputs":[{"internalType":"bytes4","name":"magicValue","type":"bytes4"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b506112c3806100206000396000f3fe6080604052600436106100745760003560e01c80639e5d4c491161004e5780639e5d4c4914610125578063affed0e014610155578063b69ef8a814610180578063fc0c546a146101ab5761007b565b806301ffc9a7146100805780631626ba7e146100bd5780638da5cb5b146100fa5761007b565b3661007b57005b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610972565b6101d8565b6040516100b491906109ba565b60405180910390f35b3480156100c957600080fd5b506100e460048036038101906100df9190610b51565b6102aa565b6040516100f19190610bbc565b60405180910390f35b34801561010657600080fd5b5061010f6102e3565b60405161011c9190610c18565b60405180910390f35b61013f600480360381019061013a9190610cf5565b6103f4565b60405161014c9190610de8565b60405180910390f35b34801561016157600080fd5b5061016a61055c565b6040516101779190610e19565b60405180910390f35b34801561018c57600080fd5b50610195610562565b6040516101a29190610e19565b60405180910390f35b3480156101b757600080fd5b506101c061056a565b6040516101cf93929190610e34565b60405180910390f35b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806102a357507f400a0398000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6000806102bf6102b86102e3565b8585610582565b905080156102d757631626ba7e60e01b9150506102dd565b60009150505b92915050565b6000806000803073ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610334573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103589190610e95565b92509250925046831461037157600093505050506103f1565b8173ffffffffffffffffffffffffffffffffffffffff16636352211e826040518263ffffffff1660e01b81526004016103aa9190610e19565b602060405180830381865afa1580156103c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103eb9190610ee8565b93505050505b90565b60606103fe6102e3565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461046b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046290610f72565b60405180910390fd5b600080815461047990610fc1565b91905081905550838573ffffffffffffffffffffffffffffffffffffffff167f47d99ad340f52da66535aff7e10da1ceb85a32bcbd9fa1c42314d194545e14d285856040516104c9929190611036565b60405180910390a360008573ffffffffffffffffffffffffffffffffffffffff168585856040516104fb92919061108a565b60006040518083038185875af1925050503d8060008114610538576040519150601f19603f3d011682016040523d82523d6000602084013e61053d565b606091505b5080935081925050508061055357815160208301fd5b50949350505050565b60005481565b600047905090565b6000806000610577610612565b925092509250909192565b60008060006105918585610692565b5091509150600060038111156105aa576105a96110a3565b5b8160038111156105bd576105bc6110a3565b5b1480156105f557508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b8061060757506106068686866106ee565b5b925050509392505050565b600080600080606067ffffffffffffffff81111561063357610632610a26565b5b6040519080825280601f01601f1916602001820160405280156106655781602001600182028036833780820191505090505b50905060ad604d60208301303c808060200190518101906106869190611110565b93509350935050909192565b600080600060418451036106d75760008060006020870151925060408701519150606087015160001a90506106c988828585610812565b9550955095505050506106e7565b60006002855160001b9250925092505b9250925092565b60008060008573ffffffffffffffffffffffffffffffffffffffff16858560405160240161071d929190611172565b604051602081830303815290604052631626ba7e60e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161076f91906111d3565b600060405180830381855afa9150503d80600081146107aa576040519150601f19603f3d011682016040523d82523d6000602084013e6107af565b606091505b50915091508180156107c357506020815110155b80156108075750631626ba7e60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168180602001905181019061080591906111ff565b145b925050509392505050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c11156108525760006003859250925092506108fc565b6000600188888888604051600081526020016040526040516108779493929190611248565b6020604051602081039080840390855afa158015610899573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108ed57600060016000801b935093509350506108fc565b8060008060001b935093509350505b9450945094915050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61094f8161091a565b811461095a57600080fd5b50565b60008135905061096c81610946565b92915050565b60006020828403121561098857610987610910565b5b60006109968482850161095d565b91505092915050565b60008115159050919050565b6109b48161099f565b82525050565b60006020820190506109cf60008301846109ab565b92915050565b6000819050919050565b6109e8816109d5565b81146109f357600080fd5b50565b600081359050610a05816109df565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610a5e82610a15565b810181811067ffffffffffffffff82111715610a7d57610a7c610a26565b5b80604052505050565b6000610a90610906565b9050610a9c8282610a55565b919050565b600067ffffffffffffffff821115610abc57610abb610a26565b5b610ac582610a15565b9050602081019050919050565b82818337600083830152505050565b6000610af4610aef84610aa1565b610a86565b905082815260208101848484011115610b1057610b0f610a10565b5b610b1b848285610ad2565b509392505050565b600082601f830112610b3857610b37610a0b565b5b8135610b48848260208601610ae1565b91505092915050565b60008060408385031215610b6857610b67610910565b5b6000610b76858286016109f6565b925050602083013567ffffffffffffffff811115610b9757610b96610915565b5b610ba385828601610b23565b9150509250929050565b610bb68161091a565b82525050565b6000602082019050610bd16000830184610bad565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c0282610bd7565b9050919050565b610c1281610bf7565b82525050565b6000602082019050610c2d6000830184610c09565b92915050565b610c3c81610bf7565b8114610c4757600080fd5b50565b600081359050610c5981610c33565b92915050565b6000819050919050565b610c7281610c5f565b8114610c7d57600080fd5b50565b600081359050610c8f81610c69565b92915050565b600080fd5b600080fd5b60008083601f840112610cb557610cb4610a0b565b5b8235905067ffffffffffffffff811115610cd257610cd1610c95565b5b602083019150836001820283011115610cee57610ced610c9a565b5b9250929050565b60008060008060608587031215610d0f57610d0e610910565b5b6000610d1d87828801610c4a565b9450506020610d2e87828801610c80565b935050604085013567ffffffffffffffff811115610d4f57610d4e610915565b5b610d5b87828801610c9f565b925092505092959194509250565b600081519050919050565b600082825260208201905092915050565b60005b83811015610da3578082015181840152602081019050610d88565b60008484015250505050565b6000610dba82610d69565b610dc48185610d74565b9350610dd4818560208601610d85565b610ddd81610a15565b840191505092915050565b60006020820190508181036000830152610e028184610daf565b905092915050565b610e1381610c5f565b82525050565b6000602082019050610e2e6000830184610e0a565b92915050565b6000606082019050610e496000830186610e0a565b610e566020830185610c09565b610e636040830184610e0a565b949350505050565b600081519050610e7a81610c69565b92915050565b600081519050610e8f81610c33565b92915050565b600080600060608486031215610eae57610ead610910565b5b6000610ebc86828701610e6b565b9350506020610ecd86828701610e80565b9250506040610ede86828701610e6b565b9150509250925092565b600060208284031215610efe57610efd610910565b5b6000610f0c84828501610e80565b91505092915050565b600082825260208201905092915050565b7f4e6f7420746f6b656e206f776e65720000000000000000000000000000000000600082015250565b6000610f5c600f83610f15565b9150610f6782610f26565b602082019050919050565b60006020820190508181036000830152610f8b81610f4f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610fcc82610c5f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610ffe57610ffd610f92565b5b600182019050919050565b60006110158385610d74565b9350611022838584610ad2565b61102b83610a15565b840190509392505050565b60006020820190508181036000830152611051818486611009565b90509392505050565b600081905092915050565b6000611071838561105a565b935061107e838584610ad2565b82840190509392505050565b6000611097828486611065565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60006110dd82610bd7565b9050919050565b6110ed816110d2565b81146110f857600080fd5b50565b60008151905061110a816110e4565b92915050565b60008060006060848603121561112957611128610910565b5b600061113786828701610e6b565b9350506020611148868287016110fb565b925050604061115986828701610e6b565b9150509250925092565b61116c816109d5565b82525050565b60006040820190506111876000830185611163565b81810360208301526111998184610daf565b90509392505050565b60006111ad82610d69565b6111b7818561105a565b93506111c7818560208601610d85565b80840191505092915050565b60006111df82846111a2565b915081905092915050565b6000815190506111f9816109df565b92915050565b60006020828403121561121557611214610910565b5b6000611223848285016111ea565b91505092915050565b600060ff82169050919050565b6112428161122c565b82525050565b600060808201905061125d6000830187611163565b61126a6020830186611239565b6112776040830185611163565b6112846060830184611163565b9594505050505056fea26469706673582212208cd8839b6fcfe8702689e5efb4a827a9f38bc8d6b2108abe53170a4e3d4bf78464736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C3 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x74 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E5D4C49 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x9E5D4C49 EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0xAFFED0E0 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0xB69EF8A8 EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x1AB JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x1626BA7E EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xFA JUMPI PUSH2 0x7B JUMP JUMPDEST CALLDATASIZE PUSH2 0x7B JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x972 JUMP JUMPDEST PUSH2 0x1D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDF SWAP2 SWAP1 PUSH2 0xB51 JUMP JUMPDEST PUSH2 0x2AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF1 SWAP2 SWAP1 PUSH2 0xBBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10F PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11C SWAP2 SWAP1 PUSH2 0xC18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13A SWAP2 SWAP1 PUSH2 0xCF5 JUMP JUMPDEST PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0xDE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16A PUSH2 0x55C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x177 SWAP2 SWAP1 PUSH2 0xE19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x195 PUSH2 0x562 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0xE19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH2 0x56A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x2A3 JUMPI POP PUSH32 0x400A039800000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2BF PUSH2 0x2B8 PUSH2 0x2E3 JUMP JUMPDEST DUP6 DUP6 PUSH2 0x582 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x2D7 JUMPI PUSH4 0x1626BA7E PUSH1 0xE0 SHL SWAP2 POP POP PUSH2 0x2DD JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFC0C546A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x334 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x358 SWAP2 SWAP1 PUSH2 0xE95 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP CHAINID DUP4 EQ PUSH2 0x371 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x3F1 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0xE19 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3EB SWAP2 SWAP1 PUSH2 0xEE8 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3FE PUSH2 0x2E3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x46B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x462 SWAP1 PUSH2 0xF72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP2 SLOAD PUSH2 0x479 SWAP1 PUSH2 0xFC1 JUMP JUMPDEST SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x47D99AD340F52DA66535AFF7E10DA1CEB85A32BCBD9FA1C42314D194545E14D2 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x4C9 SWAP3 SWAP2 SWAP1 PUSH2 0x1036 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x4FB SWAP3 SWAP2 SWAP1 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x538 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x53D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 SWAP4 POP DUP2 SWAP3 POP POP POP DUP1 PUSH2 0x553 JUMPI DUP2 MLOAD PUSH1 0x20 DUP4 ADD REVERT JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x577 PUSH2 0x612 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x591 DUP6 DUP6 PUSH2 0x692 JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x5AA JUMPI PUSH2 0x5A9 PUSH2 0x10A3 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x5BD JUMPI PUSH2 0x5BC PUSH2 0x10A3 JUMP JUMPDEST JUMPDEST EQ DUP1 ISZERO PUSH2 0x5F5 JUMPI POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x607 JUMPI POP PUSH2 0x606 DUP7 DUP7 DUP7 PUSH2 0x6EE JUMP JUMPDEST JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x633 JUMPI PUSH2 0x632 PUSH2 0xA26 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x665 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0xAD PUSH1 0x4D PUSH1 0x20 DUP4 ADD ADDRESS EXTCODECOPY DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x686 SWAP2 SWAP1 PUSH2 0x1110 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0x6D7 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0x6C9 DUP9 DUP3 DUP6 DUP6 PUSH2 0x812 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 MLOAD PUSH1 0x0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x71D SWAP3 SWAP2 SWAP1 PUSH2 0x1172 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH4 0x1626BA7E PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x76F SWAP2 SWAP1 PUSH2 0x11D3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x7AA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7AF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x7C3 JUMPI POP PUSH1 0x20 DUP2 MLOAD LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x807 JUMPI POP PUSH4 0x1626BA7E PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x805 SWAP2 SWAP1 PUSH2 0x11FF JUMP JUMPDEST EQ JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x852 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x8FC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x877 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1248 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x899 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8ED JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x8FC JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x94F DUP2 PUSH2 0x91A JUMP JUMPDEST DUP2 EQ PUSH2 0x95A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x96C DUP2 PUSH2 0x946 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x988 JUMPI PUSH2 0x987 PUSH2 0x910 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x996 DUP5 DUP3 DUP6 ADD PUSH2 0x95D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9B4 DUP2 PUSH2 0x99F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9CF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9E8 DUP2 PUSH2 0x9D5 JUMP JUMPDEST DUP2 EQ PUSH2 0x9F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA05 DUP2 PUSH2 0x9DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xA5E DUP3 PUSH2 0xA15 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xA7D JUMPI PUSH2 0xA7C PUSH2 0xA26 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA90 PUSH2 0x906 JUMP JUMPDEST SWAP1 POP PUSH2 0xA9C DUP3 DUP3 PUSH2 0xA55 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xABC JUMPI PUSH2 0xABB PUSH2 0xA26 JUMP JUMPDEST JUMPDEST PUSH2 0xAC5 DUP3 PUSH2 0xA15 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF4 PUSH2 0xAEF DUP5 PUSH2 0xAA1 JUMP JUMPDEST PUSH2 0xA86 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xB10 JUMPI PUSH2 0xB0F PUSH2 0xA10 JUMP JUMPDEST JUMPDEST PUSH2 0xB1B DUP5 DUP3 DUP6 PUSH2 0xAD2 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xB38 JUMPI PUSH2 0xB37 PUSH2 0xA0B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xB48 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xAE1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB68 JUMPI PUSH2 0xB67 PUSH2 0x910 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB76 DUP6 DUP3 DUP7 ADD PUSH2 0x9F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB97 JUMPI PUSH2 0xB96 PUSH2 0x915 JUMP JUMPDEST JUMPDEST PUSH2 0xBA3 DUP6 DUP3 DUP7 ADD PUSH2 0xB23 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB6 DUP2 PUSH2 0x91A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBD1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBAD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC02 DUP3 PUSH2 0xBD7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC12 DUP2 PUSH2 0xBF7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC2D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC09 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC3C DUP2 PUSH2 0xBF7 JUMP JUMPDEST DUP2 EQ PUSH2 0xC47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC59 DUP2 PUSH2 0xC33 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC72 DUP2 PUSH2 0xC5F JUMP JUMPDEST DUP2 EQ PUSH2 0xC7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC8F DUP2 PUSH2 0xC69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xCB5 JUMPI PUSH2 0xCB4 PUSH2 0xA0B JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCD2 JUMPI PUSH2 0xCD1 PUSH2 0xC95 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xCEE JUMPI PUSH2 0xCED PUSH2 0xC9A JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xD0F JUMPI PUSH2 0xD0E PUSH2 0x910 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD1D DUP8 DUP3 DUP9 ADD PUSH2 0xC4A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xD2E DUP8 DUP3 DUP9 ADD PUSH2 0xC80 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD4F JUMPI PUSH2 0xD4E PUSH2 0x915 JUMP JUMPDEST JUMPDEST PUSH2 0xD5B DUP8 DUP3 DUP9 ADD PUSH2 0xC9F JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xDA3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD88 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDBA DUP3 PUSH2 0xD69 JUMP JUMPDEST PUSH2 0xDC4 DUP2 DUP6 PUSH2 0xD74 JUMP JUMPDEST SWAP4 POP PUSH2 0xDD4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD85 JUMP JUMPDEST PUSH2 0xDDD DUP2 PUSH2 0xA15 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE02 DUP2 DUP5 PUSH2 0xDAF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE13 DUP2 PUSH2 0xC5F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE2E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE0A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE49 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xE0A JUMP JUMPDEST PUSH2 0xE56 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC09 JUMP JUMPDEST PUSH2 0xE63 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE0A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xE7A DUP2 PUSH2 0xC69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xE8F DUP2 PUSH2 0xC33 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xEAE JUMPI PUSH2 0xEAD PUSH2 0x910 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEBC DUP7 DUP3 DUP8 ADD PUSH2 0xE6B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xECD DUP7 DUP3 DUP8 ADD PUSH2 0xE80 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xEDE DUP7 DUP3 DUP8 ADD PUSH2 0xE6B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEFE JUMPI PUSH2 0xEFD PUSH2 0x910 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF0C DUP5 DUP3 DUP6 ADD PUSH2 0xE80 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420746F6B656E206F776E65720000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF5C PUSH1 0xF DUP4 PUSH2 0xF15 JUMP JUMPDEST SWAP2 POP PUSH2 0xF67 DUP3 PUSH2 0xF26 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF8B DUP2 PUSH2 0xF4F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFCC DUP3 PUSH2 0xC5F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0xFFE JUMPI PUSH2 0xFFD PUSH2 0xF92 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1015 DUP4 DUP6 PUSH2 0xD74 JUMP JUMPDEST SWAP4 POP PUSH2 0x1022 DUP4 DUP6 DUP5 PUSH2 0xAD2 JUMP JUMPDEST PUSH2 0x102B DUP4 PUSH2 0xA15 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1051 DUP2 DUP5 DUP7 PUSH2 0x1009 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1071 DUP4 DUP6 PUSH2 0x105A JUMP JUMPDEST SWAP4 POP PUSH2 0x107E DUP4 DUP6 DUP5 PUSH2 0xAD2 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1097 DUP3 DUP5 DUP7 PUSH2 0x1065 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10DD DUP3 PUSH2 0xBD7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10ED DUP2 PUSH2 0x10D2 JUMP JUMPDEST DUP2 EQ PUSH2 0x10F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x110A DUP2 PUSH2 0x10E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1129 JUMPI PUSH2 0x1128 PUSH2 0x910 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1137 DUP7 DUP3 DUP8 ADD PUSH2 0xE6B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1148 DUP7 DUP3 DUP8 ADD PUSH2 0x10FB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1159 DUP7 DUP3 DUP8 ADD PUSH2 0xE6B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x116C DUP2 PUSH2 0x9D5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1187 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1163 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1199 DUP2 DUP5 PUSH2 0xDAF JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11AD DUP3 PUSH2 0xD69 JUMP JUMPDEST PUSH2 0x11B7 DUP2 DUP6 PUSH2 0x105A JUMP JUMPDEST SWAP4 POP PUSH2 0x11C7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD85 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11DF DUP3 DUP5 PUSH2 0x11A2 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x11F9 DUP2 PUSH2 0x9DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1215 JUMPI PUSH2 0x1214 PUSH2 0x910 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1223 DUP5 DUP3 DUP6 ADD PUSH2 0x11EA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1242 DUP2 PUSH2 0x122C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x125D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1163 JUMP JUMPDEST PUSH2 0x126A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1239 JUMP JUMPDEST PUSH2 0x1277 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1163 JUMP JUMPDEST PUSH2 0x1284 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1163 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 0xD8 DUP4 SWAP12 PUSH16 0xCFE8702689E5EFB4A827A9F38BC8D6B2 LT DUP11 0xBE MSTORE8 OR EXP 0x4E RETURNDATASIZE 0x4B 0xF7 DUP5 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"539:1663:8:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_836":{"entryPoint":null,"id":836,"parameterSlots":0,"returnSlots":0},"@balance_967":{"entryPoint":1378,"id":967,"parameterSlots":0,"returnSlots":1},"@executeCall_885":{"entryPoint":1012,"id":885,"parameterSlots":4,"returnSlots":1},"@isValidERC1271SignatureNow_801":{"entryPoint":1774,"id":801,"parameterSlots":3,"returnSlots":1},"@isValidSignatureNow_749":{"entryPoint":1410,"id":749,"parameterSlots":3,"returnSlots":1},"@isValidSignature_996":{"entryPoint":682,"id":996,"parameterSlots":2,"returnSlots":1},"@nonce_832":{"entryPoint":1372,"id":832,"parameterSlots":0,"returnSlots":0},"@owner_932":{"entryPoint":739,"id":932,"parameterSlots":0,"returnSlots":1},"@supportsInterface_955":{"entryPoint":472,"id":955,"parameterSlots":1,"returnSlots":1},"@token_1151":{"entryPoint":1554,"id":1151,"parameterSlots":0,"returnSlots":3},"@token_899":{"entryPoint":1386,"id":899,"parameterSlots":0,"returnSlots":3},"@tryRecover_427":{"entryPoint":1682,"id":427,"parameterSlots":2,"returnSlots":3},"@tryRecover_615":{"entryPoint":2066,"id":615,"parameterSlots":4,"returnSlots":3},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":2785,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":3146,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":3712,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_payable_fromMemory":{"entryPoint":4347,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":2550,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":4586,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":2397,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":3231,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bytes_memory_ptr":{"entryPoint":2851,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3200,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":3691,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":3816,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr":{"entryPoint":3317,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":4607,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_bytes_memory_ptr":{"entryPoint":2897,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":2418,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address_payablet_uint256_fromMemory":{"entryPoint":4368,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_addresst_uint256_fromMemory":{"entryPoint":3733,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3081,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":2475,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":4451,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes4_to_t_bytes4_fromStack":{"entryPoint":2989,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":4105,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4197,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":3503,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4514,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9_to_t_string_memory_ptr_fromStack":{"entryPoint":3919,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3594,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":4665,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":4234,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":4563,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3096,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":2490,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":4466,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":4680,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed":{"entryPoint":3004,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":4150,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":3560,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3954,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3609,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed":{"entryPoint":3636,"id":null,"parameterSlots":4,"returnSlots":1},"allocate_memory":{"entryPoint":2694,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":2310,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":2721,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":3433,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":3444,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4186,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3861,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3063,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address_payable":{"entryPoint":4306,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":2463,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":2517,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":2330,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3031,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3167,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":4652,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":2770,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":3461,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":2645,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":4033,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3986,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":4259,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2598,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":3221,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":2571,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":3226,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":2576,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":2325,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2320,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2581,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9":{"entryPoint":3878,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3123,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address_payable":{"entryPoint":4324,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":2527,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":2374,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3177,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:18115:11","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:11","statements":[{"nodeType":"YulAssignment","src":"57:19:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:11"},"nodeType":"YulFunctionCall","src":"67:9:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:11"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:11","type":""}],"src":"7:75:11"},{"body":{"nodeType":"YulBlock","src":"177:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:11"},"nodeType":"YulFunctionCall","src":"187:12:11"},"nodeType":"YulExpressionStatement","src":"187:12:11"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:11"},{"body":{"nodeType":"YulBlock","src":"300:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:11"},"nodeType":"YulFunctionCall","src":"310:12:11"},"nodeType":"YulExpressionStatement","src":"310:12:11"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:11"},{"body":{"nodeType":"YulBlock","src":"378:105:11","statements":[{"nodeType":"YulAssignment","src":"388:89:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:11","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:11"},"nodeType":"YulFunctionCall","src":"399:78:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:11"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:11","type":""}],"src":"334:149:11"},{"body":{"nodeType":"YulBlock","src":"531:78:11","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:11"},"nodeType":"YulFunctionCall","src":"589:12:11"},"nodeType":"YulExpressionStatement","src":"589:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:11"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:11"},"nodeType":"YulFunctionCall","src":"561:23:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:11"},"nodeType":"YulFunctionCall","src":"551:34:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:11"},"nodeType":"YulFunctionCall","src":"544:42:11"},"nodeType":"YulIf","src":"541:62:11"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:11","type":""}],"src":"489:120:11"},{"body":{"nodeType":"YulBlock","src":"666:86:11","statements":[{"nodeType":"YulAssignment","src":"676:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:11"},"nodeType":"YulFunctionCall","src":"685:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:11"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:11"},"nodeType":"YulFunctionCall","src":"714:32:11"},"nodeType":"YulExpressionStatement","src":"714:32:11"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:11","type":""}],"src":"615:137:11"},{"body":{"nodeType":"YulBlock","src":"823:262:11","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:11"},"nodeType":"YulFunctionCall","src":"871:79:11"},"nodeType":"YulExpressionStatement","src":"871:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:11"},"nodeType":"YulFunctionCall","src":"840:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:11"},"nodeType":"YulFunctionCall","src":"836:32:11"},"nodeType":"YulIf","src":"833:119:11"},{"nodeType":"YulBlock","src":"962:116:11","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:11","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:11"},"nodeType":"YulFunctionCall","src":"1036:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:11"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:11"},"nodeType":"YulFunctionCall","src":"1016:52:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:11"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:11","type":""}],"src":"758:327:11"},{"body":{"nodeType":"YulBlock","src":"1133:48:11","statements":[{"nodeType":"YulAssignment","src":"1143:32:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:11"},"nodeType":"YulFunctionCall","src":"1161:13:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:11"},"nodeType":"YulFunctionCall","src":"1154:21:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:11"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:11","type":""}],"src":"1091:90:11"},{"body":{"nodeType":"YulBlock","src":"1246:50:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:11"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:11"},"nodeType":"YulFunctionCall","src":"1268:21:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:11"},"nodeType":"YulFunctionCall","src":"1256:34:11"},"nodeType":"YulExpressionStatement","src":"1256:34:11"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:11","type":""}],"src":"1187:109:11"},{"body":{"nodeType":"YulBlock","src":"1394:118:11","statements":[{"nodeType":"YulAssignment","src":"1404:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:11"},"nodeType":"YulFunctionCall","src":"1412:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:11"},"nodeType":"YulFunctionCall","src":"1487:17:11"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:11"},"nodeType":"YulFunctionCall","src":"1440:65:11"},"nodeType":"YulExpressionStatement","src":"1440:65:11"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:11","type":""}],"src":"1302:210:11"},{"body":{"nodeType":"YulBlock","src":"1563:32:11","statements":[{"nodeType":"YulAssignment","src":"1573:16:11","value":{"name":"value","nodeType":"YulIdentifier","src":"1584:5:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1573:7:11"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1545:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1555:7:11","type":""}],"src":"1518:77:11"},{"body":{"nodeType":"YulBlock","src":"1644:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"1701:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1710:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1713:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1703:6:11"},"nodeType":"YulFunctionCall","src":"1703:12:11"},"nodeType":"YulExpressionStatement","src":"1703:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1667:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1692:5:11"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"1674:17:11"},"nodeType":"YulFunctionCall","src":"1674:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1664:2:11"},"nodeType":"YulFunctionCall","src":"1664:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1657:6:11"},"nodeType":"YulFunctionCall","src":"1657:43:11"},"nodeType":"YulIf","src":"1654:63:11"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1637:5:11","type":""}],"src":"1601:122:11"},{"body":{"nodeType":"YulBlock","src":"1781:87:11","statements":[{"nodeType":"YulAssignment","src":"1791:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1813:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1800:12:11"},"nodeType":"YulFunctionCall","src":"1800:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1791:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1856:5:11"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"1829:26:11"},"nodeType":"YulFunctionCall","src":"1829:33:11"},"nodeType":"YulExpressionStatement","src":"1829:33:11"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1759:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"1767:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1775:5:11","type":""}],"src":"1729:139:11"},{"body":{"nodeType":"YulBlock","src":"1963:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1980:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1983:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1973:6:11"},"nodeType":"YulFunctionCall","src":"1973:12:11"},"nodeType":"YulExpressionStatement","src":"1973:12:11"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"1874:117:11"},{"body":{"nodeType":"YulBlock","src":"2086:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2103:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2106:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2096:6:11"},"nodeType":"YulFunctionCall","src":"2096:12:11"},"nodeType":"YulExpressionStatement","src":"2096:12:11"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"1997:117:11"},{"body":{"nodeType":"YulBlock","src":"2168:54:11","statements":[{"nodeType":"YulAssignment","src":"2178:38:11","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2196:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"2203:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2192:3:11"},"nodeType":"YulFunctionCall","src":"2192:14:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2212:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2208:3:11"},"nodeType":"YulFunctionCall","src":"2208:7:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2188:3:11"},"nodeType":"YulFunctionCall","src":"2188:28:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2178:6:11"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2151:5:11","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2161:6:11","type":""}],"src":"2120:102:11"},{"body":{"nodeType":"YulBlock","src":"2256:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2273:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2276:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2266:6:11"},"nodeType":"YulFunctionCall","src":"2266:88:11"},"nodeType":"YulExpressionStatement","src":"2266:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2370:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2373:4:11","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2363:6:11"},"nodeType":"YulFunctionCall","src":"2363:15:11"},"nodeType":"YulExpressionStatement","src":"2363:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2394:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2397:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2387:6:11"},"nodeType":"YulFunctionCall","src":"2387:15:11"},"nodeType":"YulExpressionStatement","src":"2387:15:11"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2228:180:11"},{"body":{"nodeType":"YulBlock","src":"2457:238:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2467:58:11","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2489:6:11"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2519:4:11"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2497:21:11"},"nodeType":"YulFunctionCall","src":"2497:27:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2485:3:11"},"nodeType":"YulFunctionCall","src":"2485:40:11"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2471:10:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"2636:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2638:16:11"},"nodeType":"YulFunctionCall","src":"2638:18:11"},"nodeType":"YulExpressionStatement","src":"2638:18:11"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2579:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"2591:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2576:2:11"},"nodeType":"YulFunctionCall","src":"2576:34:11"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2615:10:11"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2627:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2612:2:11"},"nodeType":"YulFunctionCall","src":"2612:22:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2573:2:11"},"nodeType":"YulFunctionCall","src":"2573:62:11"},"nodeType":"YulIf","src":"2570:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2674:2:11","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2678:10:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2667:6:11"},"nodeType":"YulFunctionCall","src":"2667:22:11"},"nodeType":"YulExpressionStatement","src":"2667:22:11"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2443:6:11","type":""},{"name":"size","nodeType":"YulTypedName","src":"2451:4:11","type":""}],"src":"2414:281:11"},{"body":{"nodeType":"YulBlock","src":"2742:88:11","statements":[{"nodeType":"YulAssignment","src":"2752:30:11","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"2762:18:11"},"nodeType":"YulFunctionCall","src":"2762:20:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2752:6:11"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2811:6:11"},{"name":"size","nodeType":"YulIdentifier","src":"2819:4:11"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"2791:19:11"},"nodeType":"YulFunctionCall","src":"2791:33:11"},"nodeType":"YulExpressionStatement","src":"2791:33:11"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"2726:4:11","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2735:6:11","type":""}],"src":"2701:129:11"},{"body":{"nodeType":"YulBlock","src":"2902:241:11","statements":[{"body":{"nodeType":"YulBlock","src":"3007:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3009:16:11"},"nodeType":"YulFunctionCall","src":"3009:18:11"},"nodeType":"YulExpressionStatement","src":"3009:18:11"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2979:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"2987:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2976:2:11"},"nodeType":"YulFunctionCall","src":"2976:30:11"},"nodeType":"YulIf","src":"2973:56:11"},{"nodeType":"YulAssignment","src":"3039:37:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3069:6:11"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3047:21:11"},"nodeType":"YulFunctionCall","src":"3047:29:11"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3039:4:11"}]},{"nodeType":"YulAssignment","src":"3113:23:11","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3125:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"3131:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3121:3:11"},"nodeType":"YulFunctionCall","src":"3121:15:11"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3113:4:11"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"2886:6:11","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"2897:4:11","type":""}],"src":"2836:307:11"},{"body":{"nodeType":"YulBlock","src":"3213:82:11","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3236:3:11"},{"name":"src","nodeType":"YulIdentifier","src":"3241:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"3246:6:11"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"3223:12:11"},"nodeType":"YulFunctionCall","src":"3223:30:11"},"nodeType":"YulExpressionStatement","src":"3223:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3273:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"3278:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3269:3:11"},"nodeType":"YulFunctionCall","src":"3269:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"3287:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3262:6:11"},"nodeType":"YulFunctionCall","src":"3262:27:11"},"nodeType":"YulExpressionStatement","src":"3262:27:11"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3195:3:11","type":""},{"name":"dst","nodeType":"YulTypedName","src":"3200:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"3205:6:11","type":""}],"src":"3149:146:11"},{"body":{"nodeType":"YulBlock","src":"3384:340:11","statements":[{"nodeType":"YulAssignment","src":"3394:74:11","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3460:6:11"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"3419:40:11"},"nodeType":"YulFunctionCall","src":"3419:48:11"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"3403:15:11"},"nodeType":"YulFunctionCall","src":"3403:65:11"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3394:5:11"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3484:5:11"},{"name":"length","nodeType":"YulIdentifier","src":"3491:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3477:6:11"},"nodeType":"YulFunctionCall","src":"3477:21:11"},"nodeType":"YulExpressionStatement","src":"3477:21:11"},{"nodeType":"YulVariableDeclaration","src":"3507:27:11","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3522:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"3529:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3518:3:11"},"nodeType":"YulFunctionCall","src":"3518:16:11"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"3511:3:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"3572:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"3574:77:11"},"nodeType":"YulFunctionCall","src":"3574:79:11"},"nodeType":"YulExpressionStatement","src":"3574:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3553:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"3558:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3549:3:11"},"nodeType":"YulFunctionCall","src":"3549:16:11"},{"name":"end","nodeType":"YulIdentifier","src":"3567:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3546:2:11"},"nodeType":"YulFunctionCall","src":"3546:25:11"},"nodeType":"YulIf","src":"3543:112:11"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3701:3:11"},{"name":"dst","nodeType":"YulIdentifier","src":"3706:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"3711:6:11"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"3664:36:11"},"nodeType":"YulFunctionCall","src":"3664:54:11"},"nodeType":"YulExpressionStatement","src":"3664:54:11"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3357:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"3362:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"3370:3:11","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3378:5:11","type":""}],"src":"3301:423:11"},{"body":{"nodeType":"YulBlock","src":"3804:277:11","statements":[{"body":{"nodeType":"YulBlock","src":"3853:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"3855:77:11"},"nodeType":"YulFunctionCall","src":"3855:79:11"},"nodeType":"YulExpressionStatement","src":"3855:79:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3832:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"3840:4:11","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3828:3:11"},"nodeType":"YulFunctionCall","src":"3828:17:11"},{"name":"end","nodeType":"YulIdentifier","src":"3847:3:11"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3824:3:11"},"nodeType":"YulFunctionCall","src":"3824:27:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3817:6:11"},"nodeType":"YulFunctionCall","src":"3817:35:11"},"nodeType":"YulIf","src":"3814:122:11"},{"nodeType":"YulVariableDeclaration","src":"3945:34:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3972:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3959:12:11"},"nodeType":"YulFunctionCall","src":"3959:20:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3949:6:11","type":""}]},{"nodeType":"YulAssignment","src":"3988:87:11","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4048:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"4056:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4044:3:11"},"nodeType":"YulFunctionCall","src":"4044:17:11"},{"name":"length","nodeType":"YulIdentifier","src":"4063:6:11"},{"name":"end","nodeType":"YulIdentifier","src":"4071:3:11"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"3997:46:11"},"nodeType":"YulFunctionCall","src":"3997:78:11"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3988:5:11"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3782:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"3790:3:11","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3798:5:11","type":""}],"src":"3743:338:11"},{"body":{"nodeType":"YulBlock","src":"4179:560:11","statements":[{"body":{"nodeType":"YulBlock","src":"4225:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4227:77:11"},"nodeType":"YulFunctionCall","src":"4227:79:11"},"nodeType":"YulExpressionStatement","src":"4227:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4200:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"4209:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4196:3:11"},"nodeType":"YulFunctionCall","src":"4196:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"4221:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4192:3:11"},"nodeType":"YulFunctionCall","src":"4192:32:11"},"nodeType":"YulIf","src":"4189:119:11"},{"nodeType":"YulBlock","src":"4318:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4333:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4347:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4337:6:11","type":""}]},{"nodeType":"YulAssignment","src":"4362:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4397:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"4408:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4393:3:11"},"nodeType":"YulFunctionCall","src":"4393:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4417:7:11"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"4372:20:11"},"nodeType":"YulFunctionCall","src":"4372:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4362:6:11"}]}]},{"nodeType":"YulBlock","src":"4445:287:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4460:46:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4491:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4502:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4487:3:11"},"nodeType":"YulFunctionCall","src":"4487:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4474:12:11"},"nodeType":"YulFunctionCall","src":"4474:32:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4464:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"4553:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4555:77:11"},"nodeType":"YulFunctionCall","src":"4555:79:11"},"nodeType":"YulExpressionStatement","src":"4555:79:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4525:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"4533:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4522:2:11"},"nodeType":"YulFunctionCall","src":"4522:30:11"},"nodeType":"YulIf","src":"4519:117:11"},{"nodeType":"YulAssignment","src":"4650:72:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4694:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"4705:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4690:3:11"},"nodeType":"YulFunctionCall","src":"4690:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4714:7:11"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"4660:29:11"},"nodeType":"YulFunctionCall","src":"4660:62:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4650:6:11"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4141:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4152:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4164:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4172:6:11","type":""}],"src":"4087:652:11"},{"body":{"nodeType":"YulBlock","src":"4808:52:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4825:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4847:5:11"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"4830:16:11"},"nodeType":"YulFunctionCall","src":"4830:23:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4818:6:11"},"nodeType":"YulFunctionCall","src":"4818:36:11"},"nodeType":"YulExpressionStatement","src":"4818:36:11"}]},"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4796:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4803:3:11","type":""}],"src":"4745:115:11"},{"body":{"nodeType":"YulBlock","src":"4962:122:11","statements":[{"nodeType":"YulAssignment","src":"4972:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4984:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4995:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4980:3:11"},"nodeType":"YulFunctionCall","src":"4980:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4972:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5050:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5063:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5074:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5059:3:11"},"nodeType":"YulFunctionCall","src":"5059:17:11"}],"functionName":{"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nodeType":"YulIdentifier","src":"5008:41:11"},"nodeType":"YulFunctionCall","src":"5008:69:11"},"nodeType":"YulExpressionStatement","src":"5008:69:11"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4934:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4946:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4957:4:11","type":""}],"src":"4866:218:11"},{"body":{"nodeType":"YulBlock","src":"5135:81:11","statements":[{"nodeType":"YulAssignment","src":"5145:65:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5160:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"5167:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5156:3:11"},"nodeType":"YulFunctionCall","src":"5156:54:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5145:7:11"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5117:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5127:7:11","type":""}],"src":"5090:126:11"},{"body":{"nodeType":"YulBlock","src":"5267:51:11","statements":[{"nodeType":"YulAssignment","src":"5277:35:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5306:5:11"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"5288:17:11"},"nodeType":"YulFunctionCall","src":"5288:24:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5277:7:11"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5249:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5259:7:11","type":""}],"src":"5222:96:11"},{"body":{"nodeType":"YulBlock","src":"5389:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5406:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5429:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5411:17:11"},"nodeType":"YulFunctionCall","src":"5411:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5399:6:11"},"nodeType":"YulFunctionCall","src":"5399:37:11"},"nodeType":"YulExpressionStatement","src":"5399:37:11"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5377:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5384:3:11","type":""}],"src":"5324:118:11"},{"body":{"nodeType":"YulBlock","src":"5546:124:11","statements":[{"nodeType":"YulAssignment","src":"5556:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5568:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5579:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5564:3:11"},"nodeType":"YulFunctionCall","src":"5564:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5556:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5636:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5649:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5660:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5645:3:11"},"nodeType":"YulFunctionCall","src":"5645:17:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5592:43:11"},"nodeType":"YulFunctionCall","src":"5592:71:11"},"nodeType":"YulExpressionStatement","src":"5592:71:11"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5518:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5530:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5541:4:11","type":""}],"src":"5448:222:11"},{"body":{"nodeType":"YulBlock","src":"5719:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"5776:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5785:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5788:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5778:6:11"},"nodeType":"YulFunctionCall","src":"5778:12:11"},"nodeType":"YulExpressionStatement","src":"5778:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5742:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5767:5:11"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5749:17:11"},"nodeType":"YulFunctionCall","src":"5749:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5739:2:11"},"nodeType":"YulFunctionCall","src":"5739:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5732:6:11"},"nodeType":"YulFunctionCall","src":"5732:43:11"},"nodeType":"YulIf","src":"5729:63:11"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5712:5:11","type":""}],"src":"5676:122:11"},{"body":{"nodeType":"YulBlock","src":"5856:87:11","statements":[{"nodeType":"YulAssignment","src":"5866:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5888:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5875:12:11"},"nodeType":"YulFunctionCall","src":"5875:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5866:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5931:5:11"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"5904:26:11"},"nodeType":"YulFunctionCall","src":"5904:33:11"},"nodeType":"YulExpressionStatement","src":"5904:33:11"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5834:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"5842:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5850:5:11","type":""}],"src":"5804:139:11"},{"body":{"nodeType":"YulBlock","src":"5994:32:11","statements":[{"nodeType":"YulAssignment","src":"6004:16:11","value":{"name":"value","nodeType":"YulIdentifier","src":"6015:5:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6004:7:11"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5976:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5986:7:11","type":""}],"src":"5949:77:11"},{"body":{"nodeType":"YulBlock","src":"6075:79:11","statements":[{"body":{"nodeType":"YulBlock","src":"6132:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6141:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6144:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6134:6:11"},"nodeType":"YulFunctionCall","src":"6134:12:11"},"nodeType":"YulExpressionStatement","src":"6134:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6098:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6123:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6105:17:11"},"nodeType":"YulFunctionCall","src":"6105:24:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6095:2:11"},"nodeType":"YulFunctionCall","src":"6095:35:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6088:6:11"},"nodeType":"YulFunctionCall","src":"6088:43:11"},"nodeType":"YulIf","src":"6085:63:11"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6068:5:11","type":""}],"src":"6032:122:11"},{"body":{"nodeType":"YulBlock","src":"6212:87:11","statements":[{"nodeType":"YulAssignment","src":"6222:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6244:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6231:12:11"},"nodeType":"YulFunctionCall","src":"6231:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6222:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6287:5:11"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"6260:26:11"},"nodeType":"YulFunctionCall","src":"6260:33:11"},"nodeType":"YulExpressionStatement","src":"6260:33:11"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6190:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"6198:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6206:5:11","type":""}],"src":"6160:139:11"},{"body":{"nodeType":"YulBlock","src":"6394:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6411:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6414:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6404:6:11"},"nodeType":"YulFunctionCall","src":"6404:12:11"},"nodeType":"YulExpressionStatement","src":"6404:12:11"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"6305:117:11"},{"body":{"nodeType":"YulBlock","src":"6517:28:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6534:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6537:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6527:6:11"},"nodeType":"YulFunctionCall","src":"6527:12:11"},"nodeType":"YulExpressionStatement","src":"6527:12:11"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"6428:117:11"},{"body":{"nodeType":"YulBlock","src":"6638:478:11","statements":[{"body":{"nodeType":"YulBlock","src":"6687:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"6689:77:11"},"nodeType":"YulFunctionCall","src":"6689:79:11"},"nodeType":"YulExpressionStatement","src":"6689:79:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6666:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"6674:4:11","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6662:3:11"},"nodeType":"YulFunctionCall","src":"6662:17:11"},{"name":"end","nodeType":"YulIdentifier","src":"6681:3:11"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6658:3:11"},"nodeType":"YulFunctionCall","src":"6658:27:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6651:6:11"},"nodeType":"YulFunctionCall","src":"6651:35:11"},"nodeType":"YulIf","src":"6648:122:11"},{"nodeType":"YulAssignment","src":"6779:30:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6802:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6789:12:11"},"nodeType":"YulFunctionCall","src":"6789:20:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6779:6:11"}]},{"body":{"nodeType":"YulBlock","src":"6852:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"6854:77:11"},"nodeType":"YulFunctionCall","src":"6854:79:11"},"nodeType":"YulExpressionStatement","src":"6854:79:11"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6824:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"6832:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6821:2:11"},"nodeType":"YulFunctionCall","src":"6821:30:11"},"nodeType":"YulIf","src":"6818:117:11"},{"nodeType":"YulAssignment","src":"6944:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6960:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"6968:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6956:3:11"},"nodeType":"YulFunctionCall","src":"6956:17:11"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"6944:8:11"}]},{"body":{"nodeType":"YulBlock","src":"7027:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"7029:77:11"},"nodeType":"YulFunctionCall","src":"7029:79:11"},"nodeType":"YulExpressionStatement","src":"7029:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"6992:8:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7006:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"7014:4:11","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7002:3:11"},"nodeType":"YulFunctionCall","src":"7002:17:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6988:3:11"},"nodeType":"YulFunctionCall","src":"6988:32:11"},{"name":"end","nodeType":"YulIdentifier","src":"7022:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6985:2:11"},"nodeType":"YulFunctionCall","src":"6985:41:11"},"nodeType":"YulIf","src":"6982:128:11"}]},"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6605:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"6613:3:11","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"6621:8:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"6631:6:11","type":""}],"src":"6564:552:11"},{"body":{"nodeType":"YulBlock","src":"7241:698:11","statements":[{"body":{"nodeType":"YulBlock","src":"7287:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7289:77:11"},"nodeType":"YulFunctionCall","src":"7289:79:11"},"nodeType":"YulExpressionStatement","src":"7289:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7262:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"7271:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7258:3:11"},"nodeType":"YulFunctionCall","src":"7258:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"7283:2:11","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7254:3:11"},"nodeType":"YulFunctionCall","src":"7254:32:11"},"nodeType":"YulIf","src":"7251:119:11"},{"nodeType":"YulBlock","src":"7380:117:11","statements":[{"nodeType":"YulVariableDeclaration","src":"7395:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"7409:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7399:6:11","type":""}]},{"nodeType":"YulAssignment","src":"7424:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7459:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"7470:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7455:3:11"},"nodeType":"YulFunctionCall","src":"7455:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7479:7:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7434:20:11"},"nodeType":"YulFunctionCall","src":"7434:53:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7424:6:11"}]}]},{"nodeType":"YulBlock","src":"7507:118:11","statements":[{"nodeType":"YulVariableDeclaration","src":"7522:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"7536:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7526:6:11","type":""}]},{"nodeType":"YulAssignment","src":"7552:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7587:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"7598:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7583:3:11"},"nodeType":"YulFunctionCall","src":"7583:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7607:7:11"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7562:20:11"},"nodeType":"YulFunctionCall","src":"7562:53:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7552:6:11"}]}]},{"nodeType":"YulBlock","src":"7635:297:11","statements":[{"nodeType":"YulVariableDeclaration","src":"7650:46:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7681:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7692:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7677:3:11"},"nodeType":"YulFunctionCall","src":"7677:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7664:12:11"},"nodeType":"YulFunctionCall","src":"7664:32:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7654:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"7743:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7745:77:11"},"nodeType":"YulFunctionCall","src":"7745:79:11"},"nodeType":"YulExpressionStatement","src":"7745:79:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7715:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"7723:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7712:2:11"},"nodeType":"YulFunctionCall","src":"7712:30:11"},"nodeType":"YulIf","src":"7709:117:11"},{"nodeType":"YulAssignment","src":"7840:82:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7894:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"7905:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7890:3:11"},"nodeType":"YulFunctionCall","src":"7890:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7914:7:11"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"7858:31:11"},"nodeType":"YulFunctionCall","src":"7858:64:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7840:6:11"},{"name":"value3","nodeType":"YulIdentifier","src":"7848:6:11"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7187:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7198:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7210:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7218:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7226:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7234:6:11","type":""}],"src":"7122:817:11"},{"body":{"nodeType":"YulBlock","src":"8003:40:11","statements":[{"nodeType":"YulAssignment","src":"8014:22:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8030:5:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8024:5:11"},"nodeType":"YulFunctionCall","src":"8024:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8014:6:11"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7986:5:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7996:6:11","type":""}],"src":"7945:98:11"},{"body":{"nodeType":"YulBlock","src":"8144:73:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8161:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"8166:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8154:6:11"},"nodeType":"YulFunctionCall","src":"8154:19:11"},"nodeType":"YulExpressionStatement","src":"8154:19:11"},{"nodeType":"YulAssignment","src":"8182:29:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8201:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"8206:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8197:3:11"},"nodeType":"YulFunctionCall","src":"8197:14:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"8182:11:11"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8116:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"8121:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"8132:11:11","type":""}],"src":"8049:168:11"},{"body":{"nodeType":"YulBlock","src":"8285:184:11","statements":[{"nodeType":"YulVariableDeclaration","src":"8295:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"8304:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8299:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"8364:63:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8389:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"8394:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8385:3:11"},"nodeType":"YulFunctionCall","src":"8385:11:11"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8408:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"8413:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8404:3:11"},"nodeType":"YulFunctionCall","src":"8404:11:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8398:5:11"},"nodeType":"YulFunctionCall","src":"8398:18:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8378:6:11"},"nodeType":"YulFunctionCall","src":"8378:39:11"},"nodeType":"YulExpressionStatement","src":"8378:39:11"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8325:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"8328:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8322:2:11"},"nodeType":"YulFunctionCall","src":"8322:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8336:19:11","statements":[{"nodeType":"YulAssignment","src":"8338:15:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8347:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"8350:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8343:3:11"},"nodeType":"YulFunctionCall","src":"8343:10:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"8338:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"8318:3:11","statements":[]},"src":"8314:113:11"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8447:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"8452:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8443:3:11"},"nodeType":"YulFunctionCall","src":"8443:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"8461:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8436:6:11"},"nodeType":"YulFunctionCall","src":"8436:27:11"},"nodeType":"YulExpressionStatement","src":"8436:27:11"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8267:3:11","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8272:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"8277:6:11","type":""}],"src":"8223:246:11"},{"body":{"nodeType":"YulBlock","src":"8565:283:11","statements":[{"nodeType":"YulVariableDeclaration","src":"8575:52:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8621:5:11"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8589:31:11"},"nodeType":"YulFunctionCall","src":"8589:38:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8579:6:11","type":""}]},{"nodeType":"YulAssignment","src":"8636:77:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8701:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"8706:6:11"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8643:57:11"},"nodeType":"YulFunctionCall","src":"8643:70:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8636:3:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8761:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"8768:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8757:3:11"},"nodeType":"YulFunctionCall","src":"8757:16:11"},{"name":"pos","nodeType":"YulIdentifier","src":"8775:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"8780:6:11"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"8722:34:11"},"nodeType":"YulFunctionCall","src":"8722:65:11"},"nodeType":"YulExpressionStatement","src":"8722:65:11"},{"nodeType":"YulAssignment","src":"8796:46:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8807:3:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8834:6:11"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8812:21:11"},"nodeType":"YulFunctionCall","src":"8812:29:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8803:3:11"},"nodeType":"YulFunctionCall","src":"8803:39:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8796:3:11"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8546:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8553:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8561:3:11","type":""}],"src":"8475:373:11"},{"body":{"nodeType":"YulBlock","src":"8970:193:11","statements":[{"nodeType":"YulAssignment","src":"8980:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8992:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9003:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8988:3:11"},"nodeType":"YulFunctionCall","src":"8988:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8980:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9027:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9038:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9023:3:11"},"nodeType":"YulFunctionCall","src":"9023:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9046:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"9052:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9042:3:11"},"nodeType":"YulFunctionCall","src":"9042:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9016:6:11"},"nodeType":"YulFunctionCall","src":"9016:47:11"},"nodeType":"YulExpressionStatement","src":"9016:47:11"},{"nodeType":"YulAssignment","src":"9072:84:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9142:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"9151:4:11"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9080:61:11"},"nodeType":"YulFunctionCall","src":"9080:76:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9072:4:11"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8942:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8954:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8965:4:11","type":""}],"src":"8854:309:11"},{"body":{"nodeType":"YulBlock","src":"9234:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9251:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9274:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9256:17:11"},"nodeType":"YulFunctionCall","src":"9256:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9244:6:11"},"nodeType":"YulFunctionCall","src":"9244:37:11"},"nodeType":"YulExpressionStatement","src":"9244:37:11"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9222:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9229:3:11","type":""}],"src":"9169:118:11"},{"body":{"nodeType":"YulBlock","src":"9391:124:11","statements":[{"nodeType":"YulAssignment","src":"9401:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9413:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9424:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9409:3:11"},"nodeType":"YulFunctionCall","src":"9409:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9401:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9481:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9494:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9505:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9490:3:11"},"nodeType":"YulFunctionCall","src":"9490:17:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9437:43:11"},"nodeType":"YulFunctionCall","src":"9437:71:11"},"nodeType":"YulExpressionStatement","src":"9437:71:11"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9363:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9375:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9386:4:11","type":""}],"src":"9293:222:11"},{"body":{"nodeType":"YulBlock","src":"9675:288:11","statements":[{"nodeType":"YulAssignment","src":"9685:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9697:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9708:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9693:3:11"},"nodeType":"YulFunctionCall","src":"9693:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9685:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9765:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9778:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9789:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9774:3:11"},"nodeType":"YulFunctionCall","src":"9774:17:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9721:43:11"},"nodeType":"YulFunctionCall","src":"9721:71:11"},"nodeType":"YulExpressionStatement","src":"9721:71:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9846:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9859:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9870:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9855:3:11"},"nodeType":"YulFunctionCall","src":"9855:18:11"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9802:43:11"},"nodeType":"YulFunctionCall","src":"9802:72:11"},"nodeType":"YulExpressionStatement","src":"9802:72:11"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"9928:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9941:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9952:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9937:3:11"},"nodeType":"YulFunctionCall","src":"9937:18:11"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9884:43:11"},"nodeType":"YulFunctionCall","src":"9884:72:11"},"nodeType":"YulExpressionStatement","src":"9884:72:11"}]},"name":"abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9631:9:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9643:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9651:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9659:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9670:4:11","type":""}],"src":"9521:442:11"},{"body":{"nodeType":"YulBlock","src":"10032:80:11","statements":[{"nodeType":"YulAssignment","src":"10042:22:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10057:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10051:5:11"},"nodeType":"YulFunctionCall","src":"10051:13:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10042:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10100:5:11"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"10073:26:11"},"nodeType":"YulFunctionCall","src":"10073:33:11"},"nodeType":"YulExpressionStatement","src":"10073:33:11"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10010:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"10018:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"10026:5:11","type":""}],"src":"9969:143:11"},{"body":{"nodeType":"YulBlock","src":"10181:80:11","statements":[{"nodeType":"YulAssignment","src":"10191:22:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10206:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10200:5:11"},"nodeType":"YulFunctionCall","src":"10200:13:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10191:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10249:5:11"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"10222:26:11"},"nodeType":"YulFunctionCall","src":"10222:33:11"},"nodeType":"YulExpressionStatement","src":"10222:33:11"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10159:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"10167:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"10175:5:11","type":""}],"src":"10118:143:11"},{"body":{"nodeType":"YulBlock","src":"10378:552:11","statements":[{"body":{"nodeType":"YulBlock","src":"10424:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10426:77:11"},"nodeType":"YulFunctionCall","src":"10426:79:11"},"nodeType":"YulExpressionStatement","src":"10426:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10399:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"10408:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10395:3:11"},"nodeType":"YulFunctionCall","src":"10395:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"10420:2:11","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10391:3:11"},"nodeType":"YulFunctionCall","src":"10391:32:11"},"nodeType":"YulIf","src":"10388:119:11"},{"nodeType":"YulBlock","src":"10517:128:11","statements":[{"nodeType":"YulVariableDeclaration","src":"10532:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"10546:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10536:6:11","type":""}]},{"nodeType":"YulAssignment","src":"10561:74:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10607:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"10618:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10603:3:11"},"nodeType":"YulFunctionCall","src":"10603:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10627:7:11"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"10571:31:11"},"nodeType":"YulFunctionCall","src":"10571:64:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10561:6:11"}]}]},{"nodeType":"YulBlock","src":"10655:129:11","statements":[{"nodeType":"YulVariableDeclaration","src":"10670:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"10684:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10674:6:11","type":""}]},{"nodeType":"YulAssignment","src":"10700:74:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10746:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"10757:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10742:3:11"},"nodeType":"YulFunctionCall","src":"10742:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10766:7:11"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"10710:31:11"},"nodeType":"YulFunctionCall","src":"10710:64:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10700:6:11"}]}]},{"nodeType":"YulBlock","src":"10794:129:11","statements":[{"nodeType":"YulVariableDeclaration","src":"10809:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"10823:2:11","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10813:6:11","type":""}]},{"nodeType":"YulAssignment","src":"10839:74:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10885:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"10896:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10881:3:11"},"nodeType":"YulFunctionCall","src":"10881:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10905:7:11"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"10849:31:11"},"nodeType":"YulFunctionCall","src":"10849:64:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"10839:6:11"}]}]}]},"name":"abi_decode_tuple_t_uint256t_addresst_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10332:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10343:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10355:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10363:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10371:6:11","type":""}],"src":"10267:663:11"},{"body":{"nodeType":"YulBlock","src":"11013:274:11","statements":[{"body":{"nodeType":"YulBlock","src":"11059:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11061:77:11"},"nodeType":"YulFunctionCall","src":"11061:79:11"},"nodeType":"YulExpressionStatement","src":"11061:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11034:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"11043:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11030:3:11"},"nodeType":"YulFunctionCall","src":"11030:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"11055:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11026:3:11"},"nodeType":"YulFunctionCall","src":"11026:32:11"},"nodeType":"YulIf","src":"11023:119:11"},{"nodeType":"YulBlock","src":"11152:128:11","statements":[{"nodeType":"YulVariableDeclaration","src":"11167:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"11181:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11171:6:11","type":""}]},{"nodeType":"YulAssignment","src":"11196:74:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11242:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"11253:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11238:3:11"},"nodeType":"YulFunctionCall","src":"11238:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11262:7:11"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"11206:31:11"},"nodeType":"YulFunctionCall","src":"11206:64:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11196:6:11"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10983:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10994:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11006:6:11","type":""}],"src":"10936:351:11"},{"body":{"nodeType":"YulBlock","src":"11389:73:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11406:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"11411:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11399:6:11"},"nodeType":"YulFunctionCall","src":"11399:19:11"},"nodeType":"YulExpressionStatement","src":"11399:19:11"},{"nodeType":"YulAssignment","src":"11427:29:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11446:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"11451:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11442:3:11"},"nodeType":"YulFunctionCall","src":"11442:14:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"11427:11:11"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11361:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"11366:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"11377:11:11","type":""}],"src":"11293:169:11"},{"body":{"nodeType":"YulBlock","src":"11574:59:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11596:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"11604:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11592:3:11"},"nodeType":"YulFunctionCall","src":"11592:14:11"},{"hexValue":"4e6f7420746f6b656e206f776e6572","kind":"string","nodeType":"YulLiteral","src":"11608:17:11","type":"","value":"Not token owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11585:6:11"},"nodeType":"YulFunctionCall","src":"11585:41:11"},"nodeType":"YulExpressionStatement","src":"11585:41:11"}]},"name":"store_literal_in_memory_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11566:6:11","type":""}],"src":"11468:165:11"},{"body":{"nodeType":"YulBlock","src":"11785:220:11","statements":[{"nodeType":"YulAssignment","src":"11795:74:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11861:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"11866:2:11","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11802:58:11"},"nodeType":"YulFunctionCall","src":"11802:67:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11795:3:11"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11967:3:11"}],"functionName":{"name":"store_literal_in_memory_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9","nodeType":"YulIdentifier","src":"11878:88:11"},"nodeType":"YulFunctionCall","src":"11878:93:11"},"nodeType":"YulExpressionStatement","src":"11878:93:11"},{"nodeType":"YulAssignment","src":"11980:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11991:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"11996:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11987:3:11"},"nodeType":"YulFunctionCall","src":"11987:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11980:3:11"}]}]},"name":"abi_encode_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11773:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11781:3:11","type":""}],"src":"11639:366:11"},{"body":{"nodeType":"YulBlock","src":"12182:248:11","statements":[{"nodeType":"YulAssignment","src":"12192:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12204:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12215:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12200:3:11"},"nodeType":"YulFunctionCall","src":"12200:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12192:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12239:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12250:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12235:3:11"},"nodeType":"YulFunctionCall","src":"12235:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12258:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"12264:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12254:3:11"},"nodeType":"YulFunctionCall","src":"12254:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12228:6:11"},"nodeType":"YulFunctionCall","src":"12228:47:11"},"nodeType":"YulExpressionStatement","src":"12228:47:11"},{"nodeType":"YulAssignment","src":"12284:139:11","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12418:4:11"}],"functionName":{"name":"abi_encode_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12292:124:11"},"nodeType":"YulFunctionCall","src":"12292:131:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12284:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12162:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12177:4:11","type":""}],"src":"12011:419:11"},{"body":{"nodeType":"YulBlock","src":"12464:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12481:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12484:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12474:6:11"},"nodeType":"YulFunctionCall","src":"12474:88:11"},"nodeType":"YulExpressionStatement","src":"12474:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12578:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12581:4:11","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12571:6:11"},"nodeType":"YulFunctionCall","src":"12571:15:11"},"nodeType":"YulExpressionStatement","src":"12571:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12602:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12605:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12595:6:11"},"nodeType":"YulFunctionCall","src":"12595:15:11"},"nodeType":"YulExpressionStatement","src":"12595:15:11"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"12436:180:11"},{"body":{"nodeType":"YulBlock","src":"12665:190:11","statements":[{"nodeType":"YulAssignment","src":"12675:33:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12702:5:11"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12684:17:11"},"nodeType":"YulFunctionCall","src":"12684:24:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12675:5:11"}]},{"body":{"nodeType":"YulBlock","src":"12798:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"12800:16:11"},"nodeType":"YulFunctionCall","src":"12800:18:11"},"nodeType":"YulExpressionStatement","src":"12800:18:11"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12723:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"12730:66:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12720:2:11"},"nodeType":"YulFunctionCall","src":"12720:77:11"},"nodeType":"YulIf","src":"12717:103:11"},{"nodeType":"YulAssignment","src":"12829:20:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12840:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"12847:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12836:3:11"},"nodeType":"YulFunctionCall","src":"12836:13:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"12829:3:11"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12651:5:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"12661:3:11","type":""}],"src":"12622:233:11"},{"body":{"nodeType":"YulBlock","src":"12983:214:11","statements":[{"nodeType":"YulAssignment","src":"12993:77:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13058:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"13063:6:11"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13000:57:11"},"nodeType":"YulFunctionCall","src":"13000:70:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12993:3:11"}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"13117:5:11"},{"name":"pos","nodeType":"YulIdentifier","src":"13124:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"13129:6:11"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"13080:36:11"},"nodeType":"YulFunctionCall","src":"13080:56:11"},"nodeType":"YulExpressionStatement","src":"13080:56:11"},{"nodeType":"YulAssignment","src":"13145:46:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13156:3:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13183:6:11"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"13161:21:11"},"nodeType":"YulFunctionCall","src":"13161:29:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13152:3:11"},"nodeType":"YulFunctionCall","src":"13152:39:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13145:3:11"}]}]},"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"12956:5:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"12963:6:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12971:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12979:3:11","type":""}],"src":"12883:314:11"},{"body":{"nodeType":"YulBlock","src":"13329:203:11","statements":[{"nodeType":"YulAssignment","src":"13339:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13351:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13362:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13347:3:11"},"nodeType":"YulFunctionCall","src":"13347:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13339:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13386:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13397:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13382:3:11"},"nodeType":"YulFunctionCall","src":"13382:17:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13405:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"13411:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13401:3:11"},"nodeType":"YulFunctionCall","src":"13401:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13375:6:11"},"nodeType":"YulFunctionCall","src":"13375:47:11"},"nodeType":"YulExpressionStatement","src":"13375:47:11"},{"nodeType":"YulAssignment","src":"13431:94:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13503:6:11"},{"name":"value1","nodeType":"YulIdentifier","src":"13511:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"13520:4:11"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13439:63:11"},"nodeType":"YulFunctionCall","src":"13439:86:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13431:4:11"}]}]},"name":"abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13293:9:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13305:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13313:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13324:4:11","type":""}],"src":"13203:329:11"},{"body":{"nodeType":"YulBlock","src":"13651:34:11","statements":[{"nodeType":"YulAssignment","src":"13661:18:11","value":{"name":"pos","nodeType":"YulIdentifier","src":"13676:3:11"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"13661:11:11"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13623:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"13628:6:11","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"13639:11:11","type":""}],"src":"13538:147:11"},{"body":{"nodeType":"YulBlock","src":"13831:209:11","statements":[{"nodeType":"YulAssignment","src":"13841:95:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13924:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"13929:6:11"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"13848:75:11"},"nodeType":"YulFunctionCall","src":"13848:88:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13841:3:11"}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"13983:5:11"},{"name":"pos","nodeType":"YulIdentifier","src":"13990:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"13995:6:11"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"13946:36:11"},"nodeType":"YulFunctionCall","src":"13946:56:11"},"nodeType":"YulExpressionStatement","src":"13946:56:11"},{"nodeType":"YulAssignment","src":"14011:23:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14022:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"14027:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14018:3:11"},"nodeType":"YulFunctionCall","src":"14018:16:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14011:3:11"}]}]},"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"13804:5:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"13811:6:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13819:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13827:3:11","type":""}],"src":"13713:327:11"},{"body":{"nodeType":"YulBlock","src":"14190:147:11","statements":[{"nodeType":"YulAssignment","src":"14201:110:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14290:6:11"},{"name":"value1","nodeType":"YulIdentifier","src":"14298:6:11"},{"name":"pos","nodeType":"YulIdentifier","src":"14307:3:11"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"14208:81:11"},"nodeType":"YulFunctionCall","src":"14208:103:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14201:3:11"}]},{"nodeType":"YulAssignment","src":"14321:10:11","value":{"name":"pos","nodeType":"YulIdentifier","src":"14328:3:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14321:3:11"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14161:3:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14167:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14175:6:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14186:3:11","type":""}],"src":"14046:291:11"},{"body":{"nodeType":"YulBlock","src":"14371:152:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14388:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14391:77:11","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14381:6:11"},"nodeType":"YulFunctionCall","src":"14381:88:11"},"nodeType":"YulExpressionStatement","src":"14381:88:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14485:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14488:4:11","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14478:6:11"},"nodeType":"YulFunctionCall","src":"14478:15:11"},"nodeType":"YulExpressionStatement","src":"14478:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14509:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14512:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14502:6:11"},"nodeType":"YulFunctionCall","src":"14502:15:11"},"nodeType":"YulExpressionStatement","src":"14502:15:11"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"14343:180:11"},{"body":{"nodeType":"YulBlock","src":"14582:51:11","statements":[{"nodeType":"YulAssignment","src":"14592:35:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14621:5:11"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"14603:17:11"},"nodeType":"YulFunctionCall","src":"14603:24:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"14592:7:11"}]}]},"name":"cleanup_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14564:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"14574:7:11","type":""}],"src":"14529:104:11"},{"body":{"nodeType":"YulBlock","src":"14690:87:11","statements":[{"body":{"nodeType":"YulBlock","src":"14755:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14764:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14767:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14757:6:11"},"nodeType":"YulFunctionCall","src":"14757:12:11"},"nodeType":"YulExpressionStatement","src":"14757:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14713:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14746:5:11"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"14720:25:11"},"nodeType":"YulFunctionCall","src":"14720:32:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14710:2:11"},"nodeType":"YulFunctionCall","src":"14710:43:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14703:6:11"},"nodeType":"YulFunctionCall","src":"14703:51:11"},"nodeType":"YulIf","src":"14700:71:11"}]},"name":"validator_revert_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14683:5:11","type":""}],"src":"14639:138:11"},{"body":{"nodeType":"YulBlock","src":"14854:88:11","statements":[{"nodeType":"YulAssignment","src":"14864:22:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14879:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14873:5:11"},"nodeType":"YulFunctionCall","src":"14873:13:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"14864:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14930:5:11"}],"functionName":{"name":"validator_revert_t_address_payable","nodeType":"YulIdentifier","src":"14895:34:11"},"nodeType":"YulFunctionCall","src":"14895:41:11"},"nodeType":"YulExpressionStatement","src":"14895:41:11"}]},"name":"abi_decode_t_address_payable_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"14832:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"14840:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"14848:5:11","type":""}],"src":"14783:159:11"},{"body":{"nodeType":"YulBlock","src":"15067:560:11","statements":[{"body":{"nodeType":"YulBlock","src":"15113:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15115:77:11"},"nodeType":"YulFunctionCall","src":"15115:79:11"},"nodeType":"YulExpressionStatement","src":"15115:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15088:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"15097:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15084:3:11"},"nodeType":"YulFunctionCall","src":"15084:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"15109:2:11","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15080:3:11"},"nodeType":"YulFunctionCall","src":"15080:32:11"},"nodeType":"YulIf","src":"15077:119:11"},{"nodeType":"YulBlock","src":"15206:128:11","statements":[{"nodeType":"YulVariableDeclaration","src":"15221:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"15235:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15225:6:11","type":""}]},{"nodeType":"YulAssignment","src":"15250:74:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15296:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"15307:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15292:3:11"},"nodeType":"YulFunctionCall","src":"15292:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15316:7:11"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"15260:31:11"},"nodeType":"YulFunctionCall","src":"15260:64:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15250:6:11"}]}]},{"nodeType":"YulBlock","src":"15344:137:11","statements":[{"nodeType":"YulVariableDeclaration","src":"15359:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"15373:2:11","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15363:6:11","type":""}]},{"nodeType":"YulAssignment","src":"15389:82:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15443:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"15454:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15439:3:11"},"nodeType":"YulFunctionCall","src":"15439:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15463:7:11"}],"functionName":{"name":"abi_decode_t_address_payable_fromMemory","nodeType":"YulIdentifier","src":"15399:39:11"},"nodeType":"YulFunctionCall","src":"15399:72:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15389:6:11"}]}]},{"nodeType":"YulBlock","src":"15491:129:11","statements":[{"nodeType":"YulVariableDeclaration","src":"15506:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"15520:2:11","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15510:6:11","type":""}]},{"nodeType":"YulAssignment","src":"15536:74:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15582:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"15593:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15578:3:11"},"nodeType":"YulFunctionCall","src":"15578:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15602:7:11"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"15546:31:11"},"nodeType":"YulFunctionCall","src":"15546:64:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"15536:6:11"}]}]}]},"name":"abi_decode_tuple_t_uint256t_address_payablet_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15021:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15032:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15044:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15052:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15060:6:11","type":""}],"src":"14948:679:11"},{"body":{"nodeType":"YulBlock","src":"15698:53:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15715:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15738:5:11"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"15720:17:11"},"nodeType":"YulFunctionCall","src":"15720:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15708:6:11"},"nodeType":"YulFunctionCall","src":"15708:37:11"},"nodeType":"YulExpressionStatement","src":"15708:37:11"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15686:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15693:3:11","type":""}],"src":"15633:118:11"},{"body":{"nodeType":"YulBlock","src":"15901:275:11","statements":[{"nodeType":"YulAssignment","src":"15911:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15923:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15934:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15919:3:11"},"nodeType":"YulFunctionCall","src":"15919:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15911:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15991:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16004:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16015:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16000:3:11"},"nodeType":"YulFunctionCall","src":"16000:17:11"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"15947:43:11"},"nodeType":"YulFunctionCall","src":"15947:71:11"},"nodeType":"YulExpressionStatement","src":"15947:71:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16039:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16050:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16035:3:11"},"nodeType":"YulFunctionCall","src":"16035:18:11"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16059:4:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"16065:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16055:3:11"},"nodeType":"YulFunctionCall","src":"16055:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16028:6:11"},"nodeType":"YulFunctionCall","src":"16028:48:11"},"nodeType":"YulExpressionStatement","src":"16028:48:11"},{"nodeType":"YulAssignment","src":"16085:84:11","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16155:6:11"},{"name":"tail","nodeType":"YulIdentifier","src":"16164:4:11"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16093:61:11"},"nodeType":"YulFunctionCall","src":"16093:76:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16085:4:11"}]}]},"name":"abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15865:9:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15877:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15885:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15896:4:11","type":""}],"src":"15757:419:11"},{"body":{"nodeType":"YulBlock","src":"16290:278:11","statements":[{"nodeType":"YulVariableDeclaration","src":"16300:52:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16346:5:11"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"16314:31:11"},"nodeType":"YulFunctionCall","src":"16314:38:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"16304:6:11","type":""}]},{"nodeType":"YulAssignment","src":"16361:95:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16444:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"16449:6:11"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16368:75:11"},"nodeType":"YulFunctionCall","src":"16368:88:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16361:3:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16504:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"16511:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16500:3:11"},"nodeType":"YulFunctionCall","src":"16500:16:11"},{"name":"pos","nodeType":"YulIdentifier","src":"16518:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"16523:6:11"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"16465:34:11"},"nodeType":"YulFunctionCall","src":"16465:65:11"},"nodeType":"YulExpressionStatement","src":"16465:65:11"},{"nodeType":"YulAssignment","src":"16539:23:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16550:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"16555:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16546:3:11"},"nodeType":"YulFunctionCall","src":"16546:16:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16539:3:11"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16271:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16278:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16286:3:11","type":""}],"src":"16182:386:11"},{"body":{"nodeType":"YulBlock","src":"16708:137:11","statements":[{"nodeType":"YulAssignment","src":"16719:100:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16806:6:11"},{"name":"pos","nodeType":"YulIdentifier","src":"16815:3:11"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16726:79:11"},"nodeType":"YulFunctionCall","src":"16726:93:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16719:3:11"}]},{"nodeType":"YulAssignment","src":"16829:10:11","value":{"name":"pos","nodeType":"YulIdentifier","src":"16836:3:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16829:3:11"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16687:3:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16693:6:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16704:3:11","type":""}],"src":"16574:271:11"},{"body":{"nodeType":"YulBlock","src":"16914:80:11","statements":[{"nodeType":"YulAssignment","src":"16924:22:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16939:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16933:5:11"},"nodeType":"YulFunctionCall","src":"16933:13:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"16924:5:11"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16982:5:11"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"16955:26:11"},"nodeType":"YulFunctionCall","src":"16955:33:11"},"nodeType":"YulExpressionStatement","src":"16955:33:11"}]},"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"16892:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"16900:3:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"16908:5:11","type":""}],"src":"16851:143:11"},{"body":{"nodeType":"YulBlock","src":"17077:274:11","statements":[{"body":{"nodeType":"YulBlock","src":"17123:83:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"17125:77:11"},"nodeType":"YulFunctionCall","src":"17125:79:11"},"nodeType":"YulExpressionStatement","src":"17125:79:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"17098:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"17107:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17094:3:11"},"nodeType":"YulFunctionCall","src":"17094:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"17119:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17090:3:11"},"nodeType":"YulFunctionCall","src":"17090:32:11"},"nodeType":"YulIf","src":"17087:119:11"},{"nodeType":"YulBlock","src":"17216:128:11","statements":[{"nodeType":"YulVariableDeclaration","src":"17231:15:11","value":{"kind":"number","nodeType":"YulLiteral","src":"17245:1:11","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17235:6:11","type":""}]},{"nodeType":"YulAssignment","src":"17260:74:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17306:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"17317:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17302:3:11"},"nodeType":"YulFunctionCall","src":"17302:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17326:7:11"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulIdentifier","src":"17270:31:11"},"nodeType":"YulFunctionCall","src":"17270:64:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"17260:6:11"}]}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17047:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"17058:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"17070:6:11","type":""}],"src":"17000:351:11"},{"body":{"nodeType":"YulBlock","src":"17400:43:11","statements":[{"nodeType":"YulAssignment","src":"17410:27:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17425:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"17432:4:11","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17421:3:11"},"nodeType":"YulFunctionCall","src":"17421:16:11"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17410:7:11"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17382:5:11","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17392:7:11","type":""}],"src":"17357:86:11"},{"body":{"nodeType":"YulBlock","src":"17510:51:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17527:3:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17548:5:11"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"17532:15:11"},"nodeType":"YulFunctionCall","src":"17532:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17520:6:11"},"nodeType":"YulFunctionCall","src":"17520:35:11"},"nodeType":"YulExpressionStatement","src":"17520:35:11"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17498:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17505:3:11","type":""}],"src":"17449:112:11"},{"body":{"nodeType":"YulBlock","src":"17745:367:11","statements":[{"nodeType":"YulAssignment","src":"17755:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17767:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"17778:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17763:3:11"},"nodeType":"YulFunctionCall","src":"17763:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17755:4:11"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17836:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17849:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"17860:1:11","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17845:3:11"},"nodeType":"YulFunctionCall","src":"17845:17:11"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"17792:43:11"},"nodeType":"YulFunctionCall","src":"17792:71:11"},"nodeType":"YulExpressionStatement","src":"17792:71:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17913:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17926:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"17937:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17922:3:11"},"nodeType":"YulFunctionCall","src":"17922:18:11"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"17873:39:11"},"nodeType":"YulFunctionCall","src":"17873:68:11"},"nodeType":"YulExpressionStatement","src":"17873:68:11"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"17995:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18008:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"18019:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18004:3:11"},"nodeType":"YulFunctionCall","src":"18004:18:11"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"17951:43:11"},"nodeType":"YulFunctionCall","src":"17951:72:11"},"nodeType":"YulExpressionStatement","src":"17951:72:11"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"18077:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18090:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"18101:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18086:3:11"},"nodeType":"YulFunctionCall","src":"18086:18:11"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"18033:43:11"},"nodeType":"YulFunctionCall","src":"18033:72:11"},"nodeType":"YulExpressionStatement","src":"18033:72:11"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17693:9:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"17705:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17713:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17721:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17729:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17740:4:11","type":""}],"src":"17567:545:11"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_bytes32t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not token owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(value0, value1,  tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0, value1,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_address_payablet_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n}\n","id":11,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106100745760003560e01c80639e5d4c491161004e5780639e5d4c4914610125578063affed0e014610155578063b69ef8a814610180578063fc0c546a146101ab5761007b565b806301ffc9a7146100805780631626ba7e146100bd5780638da5cb5b146100fa5761007b565b3661007b57005b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610972565b6101d8565b6040516100b491906109ba565b60405180910390f35b3480156100c957600080fd5b506100e460048036038101906100df9190610b51565b6102aa565b6040516100f19190610bbc565b60405180910390f35b34801561010657600080fd5b5061010f6102e3565b60405161011c9190610c18565b60405180910390f35b61013f600480360381019061013a9190610cf5565b6103f4565b60405161014c9190610de8565b60405180910390f35b34801561016157600080fd5b5061016a61055c565b6040516101779190610e19565b60405180910390f35b34801561018c57600080fd5b50610195610562565b6040516101a29190610e19565b60405180910390f35b3480156101b757600080fd5b506101c061056a565b6040516101cf93929190610e34565b60405180910390f35b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806102a357507f400a0398000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6000806102bf6102b86102e3565b8585610582565b905080156102d757631626ba7e60e01b9150506102dd565b60009150505b92915050565b6000806000803073ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610334573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103589190610e95565b92509250925046831461037157600093505050506103f1565b8173ffffffffffffffffffffffffffffffffffffffff16636352211e826040518263ffffffff1660e01b81526004016103aa9190610e19565b602060405180830381865afa1580156103c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103eb9190610ee8565b93505050505b90565b60606103fe6102e3565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461046b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046290610f72565b60405180910390fd5b600080815461047990610fc1565b91905081905550838573ffffffffffffffffffffffffffffffffffffffff167f47d99ad340f52da66535aff7e10da1ceb85a32bcbd9fa1c42314d194545e14d285856040516104c9929190611036565b60405180910390a360008573ffffffffffffffffffffffffffffffffffffffff168585856040516104fb92919061108a565b60006040518083038185875af1925050503d8060008114610538576040519150601f19603f3d011682016040523d82523d6000602084013e61053d565b606091505b5080935081925050508061055357815160208301fd5b50949350505050565b60005481565b600047905090565b6000806000610577610612565b925092509250909192565b60008060006105918585610692565b5091509150600060038111156105aa576105a96110a3565b5b8160038111156105bd576105bc6110a3565b5b1480156105f557508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b8061060757506106068686866106ee565b5b925050509392505050565b600080600080606067ffffffffffffffff81111561063357610632610a26565b5b6040519080825280601f01601f1916602001820160405280156106655781602001600182028036833780820191505090505b50905060ad604d60208301303c808060200190518101906106869190611110565b93509350935050909192565b600080600060418451036106d75760008060006020870151925060408701519150606087015160001a90506106c988828585610812565b9550955095505050506106e7565b60006002855160001b9250925092505b9250925092565b60008060008573ffffffffffffffffffffffffffffffffffffffff16858560405160240161071d929190611172565b604051602081830303815290604052631626ba7e60e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161076f91906111d3565b600060405180830381855afa9150503d80600081146107aa576040519150601f19603f3d011682016040523d82523d6000602084013e6107af565b606091505b50915091508180156107c357506020815110155b80156108075750631626ba7e60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168180602001905181019061080591906111ff565b145b925050509392505050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c11156108525760006003859250925092506108fc565b6000600188888888604051600081526020016040526040516108779493929190611248565b6020604051602081039080840390855afa158015610899573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108ed57600060016000801b935093509350506108fc565b8060008060001b935093509350505b9450945094915050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61094f8161091a565b811461095a57600080fd5b50565b60008135905061096c81610946565b92915050565b60006020828403121561098857610987610910565b5b60006109968482850161095d565b91505092915050565b60008115159050919050565b6109b48161099f565b82525050565b60006020820190506109cf60008301846109ab565b92915050565b6000819050919050565b6109e8816109d5565b81146109f357600080fd5b50565b600081359050610a05816109df565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610a5e82610a15565b810181811067ffffffffffffffff82111715610a7d57610a7c610a26565b5b80604052505050565b6000610a90610906565b9050610a9c8282610a55565b919050565b600067ffffffffffffffff821115610abc57610abb610a26565b5b610ac582610a15565b9050602081019050919050565b82818337600083830152505050565b6000610af4610aef84610aa1565b610a86565b905082815260208101848484011115610b1057610b0f610a10565b5b610b1b848285610ad2565b509392505050565b600082601f830112610b3857610b37610a0b565b5b8135610b48848260208601610ae1565b91505092915050565b60008060408385031215610b6857610b67610910565b5b6000610b76858286016109f6565b925050602083013567ffffffffffffffff811115610b9757610b96610915565b5b610ba385828601610b23565b9150509250929050565b610bb68161091a565b82525050565b6000602082019050610bd16000830184610bad565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c0282610bd7565b9050919050565b610c1281610bf7565b82525050565b6000602082019050610c2d6000830184610c09565b92915050565b610c3c81610bf7565b8114610c4757600080fd5b50565b600081359050610c5981610c33565b92915050565b6000819050919050565b610c7281610c5f565b8114610c7d57600080fd5b50565b600081359050610c8f81610c69565b92915050565b600080fd5b600080fd5b60008083601f840112610cb557610cb4610a0b565b5b8235905067ffffffffffffffff811115610cd257610cd1610c95565b5b602083019150836001820283011115610cee57610ced610c9a565b5b9250929050565b60008060008060608587031215610d0f57610d0e610910565b5b6000610d1d87828801610c4a565b9450506020610d2e87828801610c80565b935050604085013567ffffffffffffffff811115610d4f57610d4e610915565b5b610d5b87828801610c9f565b925092505092959194509250565b600081519050919050565b600082825260208201905092915050565b60005b83811015610da3578082015181840152602081019050610d88565b60008484015250505050565b6000610dba82610d69565b610dc48185610d74565b9350610dd4818560208601610d85565b610ddd81610a15565b840191505092915050565b60006020820190508181036000830152610e028184610daf565b905092915050565b610e1381610c5f565b82525050565b6000602082019050610e2e6000830184610e0a565b92915050565b6000606082019050610e496000830186610e0a565b610e566020830185610c09565b610e636040830184610e0a565b949350505050565b600081519050610e7a81610c69565b92915050565b600081519050610e8f81610c33565b92915050565b600080600060608486031215610eae57610ead610910565b5b6000610ebc86828701610e6b565b9350506020610ecd86828701610e80565b9250506040610ede86828701610e6b565b9150509250925092565b600060208284031215610efe57610efd610910565b5b6000610f0c84828501610e80565b91505092915050565b600082825260208201905092915050565b7f4e6f7420746f6b656e206f776e65720000000000000000000000000000000000600082015250565b6000610f5c600f83610f15565b9150610f6782610f26565b602082019050919050565b60006020820190508181036000830152610f8b81610f4f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610fcc82610c5f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610ffe57610ffd610f92565b5b600182019050919050565b60006110158385610d74565b9350611022838584610ad2565b61102b83610a15565b840190509392505050565b60006020820190508181036000830152611051818486611009565b90509392505050565b600081905092915050565b6000611071838561105a565b935061107e838584610ad2565b82840190509392505050565b6000611097828486611065565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60006110dd82610bd7565b9050919050565b6110ed816110d2565b81146110f857600080fd5b50565b60008151905061110a816110e4565b92915050565b60008060006060848603121561112957611128610910565b5b600061113786828701610e6b565b9350506020611148868287016110fb565b925050604061115986828701610e6b565b9150509250925092565b61116c816109d5565b82525050565b60006040820190506111876000830185611163565b81810360208301526111998184610daf565b90509392505050565b60006111ad82610d69565b6111b7818561105a565b93506111c7818560208601610d85565b80840191505092915050565b60006111df82846111a2565b915081905092915050565b6000815190506111f9816109df565b92915050565b60006020828403121561121557611214610910565b5b6000611223848285016111ea565b91505092915050565b600060ff82169050919050565b6112428161122c565b82525050565b600060808201905061125d6000830187611163565b61126a6020830186611239565b6112776040830185611163565b6112846060830184611163565b9594505050505056fea26469706673582212208cd8839b6fcfe8702689e5efb4a827a9f38bc8d6b2108abe53170a4e3d4bf78464736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x74 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E5D4C49 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x9E5D4C49 EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0xAFFED0E0 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0xB69EF8A8 EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x1AB JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x1626BA7E EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xFA JUMPI PUSH2 0x7B JUMP JUMPDEST CALLDATASIZE PUSH2 0x7B JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x972 JUMP JUMPDEST PUSH2 0x1D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDF SWAP2 SWAP1 PUSH2 0xB51 JUMP JUMPDEST PUSH2 0x2AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF1 SWAP2 SWAP1 PUSH2 0xBBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10F PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11C SWAP2 SWAP1 PUSH2 0xC18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13A SWAP2 SWAP1 PUSH2 0xCF5 JUMP JUMPDEST PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0xDE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16A PUSH2 0x55C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x177 SWAP2 SWAP1 PUSH2 0xE19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x195 PUSH2 0x562 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0xE19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH2 0x56A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x2A3 JUMPI POP PUSH32 0x400A039800000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2BF PUSH2 0x2B8 PUSH2 0x2E3 JUMP JUMPDEST DUP6 DUP6 PUSH2 0x582 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x2D7 JUMPI PUSH4 0x1626BA7E PUSH1 0xE0 SHL SWAP2 POP POP PUSH2 0x2DD JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFC0C546A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x334 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x358 SWAP2 SWAP1 PUSH2 0xE95 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP CHAINID DUP4 EQ PUSH2 0x371 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x3F1 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0xE19 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3EB SWAP2 SWAP1 PUSH2 0xEE8 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3FE PUSH2 0x2E3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x46B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x462 SWAP1 PUSH2 0xF72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP2 SLOAD PUSH2 0x479 SWAP1 PUSH2 0xFC1 JUMP JUMPDEST SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x47D99AD340F52DA66535AFF7E10DA1CEB85A32BCBD9FA1C42314D194545E14D2 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x4C9 SWAP3 SWAP2 SWAP1 PUSH2 0x1036 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x4FB SWAP3 SWAP2 SWAP1 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x538 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x53D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 SWAP4 POP DUP2 SWAP3 POP POP POP DUP1 PUSH2 0x553 JUMPI DUP2 MLOAD PUSH1 0x20 DUP4 ADD REVERT JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x577 PUSH2 0x612 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x591 DUP6 DUP6 PUSH2 0x692 JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x5AA JUMPI PUSH2 0x5A9 PUSH2 0x10A3 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x5BD JUMPI PUSH2 0x5BC PUSH2 0x10A3 JUMP JUMPDEST JUMPDEST EQ DUP1 ISZERO PUSH2 0x5F5 JUMPI POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x607 JUMPI POP PUSH2 0x606 DUP7 DUP7 DUP7 PUSH2 0x6EE JUMP JUMPDEST JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x633 JUMPI PUSH2 0x632 PUSH2 0xA26 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x665 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0xAD PUSH1 0x4D PUSH1 0x20 DUP4 ADD ADDRESS EXTCODECOPY DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x686 SWAP2 SWAP1 PUSH2 0x1110 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0x6D7 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0x6C9 DUP9 DUP3 DUP6 DUP6 PUSH2 0x812 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 MLOAD PUSH1 0x0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x71D SWAP3 SWAP2 SWAP1 PUSH2 0x1172 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH4 0x1626BA7E PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x76F SWAP2 SWAP1 PUSH2 0x11D3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x7AA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7AF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x7C3 JUMPI POP PUSH1 0x20 DUP2 MLOAD LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x807 JUMPI POP PUSH4 0x1626BA7E PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x805 SWAP2 SWAP1 PUSH2 0x11FF JUMP JUMPDEST EQ JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x852 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x8FC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x877 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1248 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x899 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8ED JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x8FC JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x94F DUP2 PUSH2 0x91A JUMP JUMPDEST DUP2 EQ PUSH2 0x95A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x96C DUP2 PUSH2 0x946 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x988 JUMPI PUSH2 0x987 PUSH2 0x910 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x996 DUP5 DUP3 DUP6 ADD PUSH2 0x95D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9B4 DUP2 PUSH2 0x99F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9CF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9E8 DUP2 PUSH2 0x9D5 JUMP JUMPDEST DUP2 EQ PUSH2 0x9F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA05 DUP2 PUSH2 0x9DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xA5E DUP3 PUSH2 0xA15 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xA7D JUMPI PUSH2 0xA7C PUSH2 0xA26 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA90 PUSH2 0x906 JUMP JUMPDEST SWAP1 POP PUSH2 0xA9C DUP3 DUP3 PUSH2 0xA55 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xABC JUMPI PUSH2 0xABB PUSH2 0xA26 JUMP JUMPDEST JUMPDEST PUSH2 0xAC5 DUP3 PUSH2 0xA15 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF4 PUSH2 0xAEF DUP5 PUSH2 0xAA1 JUMP JUMPDEST PUSH2 0xA86 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xB10 JUMPI PUSH2 0xB0F PUSH2 0xA10 JUMP JUMPDEST JUMPDEST PUSH2 0xB1B DUP5 DUP3 DUP6 PUSH2 0xAD2 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xB38 JUMPI PUSH2 0xB37 PUSH2 0xA0B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xB48 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xAE1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB68 JUMPI PUSH2 0xB67 PUSH2 0x910 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB76 DUP6 DUP3 DUP7 ADD PUSH2 0x9F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB97 JUMPI PUSH2 0xB96 PUSH2 0x915 JUMP JUMPDEST JUMPDEST PUSH2 0xBA3 DUP6 DUP3 DUP7 ADD PUSH2 0xB23 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB6 DUP2 PUSH2 0x91A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBD1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBAD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC02 DUP3 PUSH2 0xBD7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC12 DUP2 PUSH2 0xBF7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC2D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC09 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC3C DUP2 PUSH2 0xBF7 JUMP JUMPDEST DUP2 EQ PUSH2 0xC47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC59 DUP2 PUSH2 0xC33 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC72 DUP2 PUSH2 0xC5F JUMP JUMPDEST DUP2 EQ PUSH2 0xC7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC8F DUP2 PUSH2 0xC69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xCB5 JUMPI PUSH2 0xCB4 PUSH2 0xA0B JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCD2 JUMPI PUSH2 0xCD1 PUSH2 0xC95 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xCEE JUMPI PUSH2 0xCED PUSH2 0xC9A JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xD0F JUMPI PUSH2 0xD0E PUSH2 0x910 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD1D DUP8 DUP3 DUP9 ADD PUSH2 0xC4A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xD2E DUP8 DUP3 DUP9 ADD PUSH2 0xC80 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD4F JUMPI PUSH2 0xD4E PUSH2 0x915 JUMP JUMPDEST JUMPDEST PUSH2 0xD5B DUP8 DUP3 DUP9 ADD PUSH2 0xC9F JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xDA3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD88 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDBA DUP3 PUSH2 0xD69 JUMP JUMPDEST PUSH2 0xDC4 DUP2 DUP6 PUSH2 0xD74 JUMP JUMPDEST SWAP4 POP PUSH2 0xDD4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD85 JUMP JUMPDEST PUSH2 0xDDD DUP2 PUSH2 0xA15 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE02 DUP2 DUP5 PUSH2 0xDAF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE13 DUP2 PUSH2 0xC5F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE2E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE0A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE49 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xE0A JUMP JUMPDEST PUSH2 0xE56 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC09 JUMP JUMPDEST PUSH2 0xE63 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE0A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xE7A DUP2 PUSH2 0xC69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xE8F DUP2 PUSH2 0xC33 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xEAE JUMPI PUSH2 0xEAD PUSH2 0x910 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEBC DUP7 DUP3 DUP8 ADD PUSH2 0xE6B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xECD DUP7 DUP3 DUP8 ADD PUSH2 0xE80 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xEDE DUP7 DUP3 DUP8 ADD PUSH2 0xE6B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEFE JUMPI PUSH2 0xEFD PUSH2 0x910 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF0C DUP5 DUP3 DUP6 ADD PUSH2 0xE80 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420746F6B656E206F776E65720000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF5C PUSH1 0xF DUP4 PUSH2 0xF15 JUMP JUMPDEST SWAP2 POP PUSH2 0xF67 DUP3 PUSH2 0xF26 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF8B DUP2 PUSH2 0xF4F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFCC DUP3 PUSH2 0xC5F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0xFFE JUMPI PUSH2 0xFFD PUSH2 0xF92 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1015 DUP4 DUP6 PUSH2 0xD74 JUMP JUMPDEST SWAP4 POP PUSH2 0x1022 DUP4 DUP6 DUP5 PUSH2 0xAD2 JUMP JUMPDEST PUSH2 0x102B DUP4 PUSH2 0xA15 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1051 DUP2 DUP5 DUP7 PUSH2 0x1009 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1071 DUP4 DUP6 PUSH2 0x105A JUMP JUMPDEST SWAP4 POP PUSH2 0x107E DUP4 DUP6 DUP5 PUSH2 0xAD2 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1097 DUP3 DUP5 DUP7 PUSH2 0x1065 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10DD DUP3 PUSH2 0xBD7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10ED DUP2 PUSH2 0x10D2 JUMP JUMPDEST DUP2 EQ PUSH2 0x10F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x110A DUP2 PUSH2 0x10E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1129 JUMPI PUSH2 0x1128 PUSH2 0x910 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1137 DUP7 DUP3 DUP8 ADD PUSH2 0xE6B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1148 DUP7 DUP3 DUP8 ADD PUSH2 0x10FB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1159 DUP7 DUP3 DUP8 ADD PUSH2 0xE6B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x116C DUP2 PUSH2 0x9D5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1187 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1163 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1199 DUP2 DUP5 PUSH2 0xDAF JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11AD DUP3 PUSH2 0xD69 JUMP JUMPDEST PUSH2 0x11B7 DUP2 DUP6 PUSH2 0x105A JUMP JUMPDEST SWAP4 POP PUSH2 0x11C7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD85 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11DF DUP3 DUP5 PUSH2 0x11A2 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x11F9 DUP2 PUSH2 0x9DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1215 JUMPI PUSH2 0x1214 PUSH2 0x910 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1223 DUP5 DUP3 DUP6 ADD PUSH2 0x11EA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1242 DUP2 PUSH2 0x122C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x125D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1163 JUMP JUMPDEST PUSH2 0x126A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1239 JUMP JUMPDEST PUSH2 0x1277 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1163 JUMP JUMPDEST PUSH2 0x1284 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1163 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 0xD8 DUP4 SWAP12 PUSH16 0xCFE8702689E5EFB4A827A9F38BC8D6B2 LT DUP11 0xBE MSTORE8 OR EXP 0x4E RETURNDATASIZE 0x4B 0xF7 DUP5 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"539:1663:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1578:193;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1882:315;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1315:255;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;675:506;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;611:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:95;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1189:118;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1578:193;1646:4;1685:25;1670:40;;;:11;:40;;;;:92;;;;1729:33;1714:48;;;:11;:48;;;;1670:92;1663:100;;1578:193;;;:::o;1882:315::-;1969:17;1999:12;2014:62;2051:7;:5;:7::i;:::-;2060:4;2066:9;2014:36;:62::i;:::-;1999:77;;2093:7;2089:81;;;2124:34;;;2117:41;;;;;2089:81;2180:9;;;;1882:315;;;;;:::o;1315:255::-;1353:7;1374:15;1391:21;1414:15;1433:4;:10;;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1373:72;;;;;;1471:13;1460:7;:24;1456:47;;1501:1;1486:17;;;;;;;1456:47;1531:13;1523:30;;;1554:7;1523:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1516:46;;;;;1315:255;;:::o;675:506::-;804:19;858:7;:5;:7::i;:::-;844:21;;:10;:21;;;836:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;900:5;;898:7;;;;;:::i;:::-;;;;;;;;947:5;943:2;923:36;;;954:4;;923:36;;;;;;;:::i;:::-;;;;;;;;970:12;1013:2;:7;;1028:5;1035:4;;1013:27;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;993:47;;;;;;;;1058:7;1053:121;;1140:6;1134:13;1129:2;1121:6;1117:15;1110:38;1053:121;825:356;675:506;;;;;;:::o;611:20::-;;;;:::o;1779:95::-;1818:7;1845:21;1838:28;;1779:95;:::o;1189:118::-;1229:7;1238;1247;1274:25;:23;:25::i;:::-;1267:32;;;;;;1189:118;;;:::o;1039:368:6:-;1145:4;1162:17;1181:24;1211:33;1228:4;1234:9;1211:16;:33::i;:::-;1161:83;;;;;1283:26;1274:35;;;;;;;;:::i;:::-;;:5;:35;;;;;;;;:::i;:::-;;;:58;;;;;1326:6;1313:19;;:9;:19;;;1274:58;1273:127;;;;1349:51;1376:6;1384:4;1390:9;1349:26;:51::i;:::-;1273:127;1254:146;;;;1039:368;;;;;:::o;1285:423:10:-;1366:7;1388;1410;1445:19;1477:4;1467:15;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1445:37;;1618:4;1612;1605;1597:6;1593:17;1582:9;1570:53;1664:6;1653:47;;;;;;;;;;;;:::i;:::-;1646:54;;;;;;;1285:423;;;:::o;2129:766:5:-;2210:7;2219:12;2233:7;2276:2;2256:9;:16;:22;2252:637;;2294:9;2317;2340:7;2592:4;2581:9;2577:20;2571:27;2566:32;;2641:4;2630:9;2626:20;2620:27;2615:32;;2698:4;2687:9;2683:20;2677:27;2674:1;2669:36;2664:41;;2739:25;2750:4;2756:1;2759;2762;2739:10;:25::i;:::-;2732:32;;;;;;;;;;;2252:637;2811:1;2815:35;2860:9;:16;2852:25;;2795:83;;;;;;2129:766;;;;;;:::o;1813:458:6:-;1956:4;1973:12;1987:19;2010:6;:17;;2084:4;2090:9;2041:60;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2010:101;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1972:139;;;;2129:7;:42;;;;;2169:2;2152:6;:13;:19;;2129:42;:134;;;;;2228:34;;;2220:43;;;2198:6;2187:29;;;;;;;;;;;;:::i;:::-;:76;2129:134;2121:143;;;;1813:458;;;;;:::o;5140:1530:5:-;5266:7;5275:12;5289:7;6199:66;6194:1;6186:10;;:79;6182:164;;;6297:1;6301:30;6333:1;6281:54;;;;;;;;6182:164;6440:14;6457:24;6467:4;6473:1;6476;6479;6457:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6440:41;;6513:1;6495:20;;:6;:20;;;6491:113;;6547:1;6551:29;6590:1;6582:10;;6531:62;;;;;;;;;6491:113;6622:6;6630:20;6660:1;6652:10;;6614:49;;;;;;;5140:1530;;;;;;;;;:::o;7:75:11:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:122::-;1674:24;1692:5;1674:24;:::i;:::-;1667:5;1664:35;1654:63;;1713:1;1710;1703:12;1654:63;1601:122;:::o;1729:139::-;1775:5;1813:6;1800:20;1791:29;;1829:33;1856:5;1829:33;:::i;:::-;1729:139;;;;:::o;1874:117::-;1983:1;1980;1973:12;1997:117;2106:1;2103;2096:12;2120:102;2161:6;2212:2;2208:7;2203:2;2196:5;2192:14;2188:28;2178:38;;2120:102;;;:::o;2228:180::-;2276:77;2273:1;2266:88;2373:4;2370:1;2363:15;2397:4;2394:1;2387:15;2414:281;2497:27;2519:4;2497:27;:::i;:::-;2489:6;2485:40;2627:6;2615:10;2612:22;2591:18;2579:10;2576:34;2573:62;2570:88;;;2638:18;;:::i;:::-;2570:88;2678:10;2674:2;2667:22;2457:238;2414:281;;:::o;2701:129::-;2735:6;2762:20;;:::i;:::-;2752:30;;2791:33;2819:4;2811:6;2791:33;:::i;:::-;2701:129;;;:::o;2836:307::-;2897:4;2987:18;2979:6;2976:30;2973:56;;;3009:18;;:::i;:::-;2973:56;3047:29;3069:6;3047:29;:::i;:::-;3039:37;;3131:4;3125;3121:15;3113:23;;2836:307;;;:::o;3149:146::-;3246:6;3241:3;3236;3223:30;3287:1;3278:6;3273:3;3269:16;3262:27;3149:146;;;:::o;3301:423::-;3378:5;3403:65;3419:48;3460:6;3419:48;:::i;:::-;3403:65;:::i;:::-;3394:74;;3491:6;3484:5;3477:21;3529:4;3522:5;3518:16;3567:3;3558:6;3553:3;3549:16;3546:25;3543:112;;;3574:79;;:::i;:::-;3543:112;3664:54;3711:6;3706:3;3701;3664:54;:::i;:::-;3384:340;3301:423;;;;;:::o;3743:338::-;3798:5;3847:3;3840:4;3832:6;3828:17;3824:27;3814:122;;3855:79;;:::i;:::-;3814:122;3972:6;3959:20;3997:78;4071:3;4063:6;4056:4;4048:6;4044:17;3997:78;:::i;:::-;3988:87;;3804:277;3743:338;;;;:::o;4087:652::-;4164:6;4172;4221:2;4209:9;4200:7;4196:23;4192:32;4189:119;;;4227:79;;:::i;:::-;4189:119;4347:1;4372:53;4417:7;4408:6;4397:9;4393:22;4372:53;:::i;:::-;4362:63;;4318:117;4502:2;4491:9;4487:18;4474:32;4533:18;4525:6;4522:30;4519:117;;;4555:79;;:::i;:::-;4519:117;4660:62;4714:7;4705:6;4694:9;4690:22;4660:62;:::i;:::-;4650:72;;4445:287;4087:652;;;;;:::o;4745:115::-;4830:23;4847:5;4830:23;:::i;:::-;4825:3;4818:36;4745:115;;:::o;4866:218::-;4957:4;4995:2;4984:9;4980:18;4972:26;;5008:69;5074:1;5063:9;5059:17;5050:6;5008:69;:::i;:::-;4866:218;;;;:::o;5090:126::-;5127:7;5167:42;5160:5;5156:54;5145:65;;5090:126;;;:::o;5222:96::-;5259:7;5288:24;5306:5;5288:24;:::i;:::-;5277:35;;5222:96;;;:::o;5324:118::-;5411:24;5429:5;5411:24;:::i;:::-;5406:3;5399:37;5324:118;;:::o;5448:222::-;5541:4;5579:2;5568:9;5564:18;5556:26;;5592:71;5660:1;5649:9;5645:17;5636:6;5592:71;:::i;:::-;5448:222;;;;:::o;5676:122::-;5749:24;5767:5;5749:24;:::i;:::-;5742:5;5739:35;5729:63;;5788:1;5785;5778:12;5729:63;5676:122;:::o;5804:139::-;5850:5;5888:6;5875:20;5866:29;;5904:33;5931:5;5904:33;:::i;:::-;5804:139;;;;:::o;5949:77::-;5986:7;6015:5;6004:16;;5949:77;;;:::o;6032:122::-;6105:24;6123:5;6105:24;:::i;:::-;6098:5;6095:35;6085:63;;6144:1;6141;6134:12;6085:63;6032:122;:::o;6160:139::-;6206:5;6244:6;6231:20;6222:29;;6260:33;6287:5;6260:33;:::i;:::-;6160:139;;;;:::o;6305:117::-;6414:1;6411;6404:12;6428:117;6537:1;6534;6527:12;6564:552;6621:8;6631:6;6681:3;6674:4;6666:6;6662:17;6658:27;6648:122;;6689:79;;:::i;:::-;6648:122;6802:6;6789:20;6779:30;;6832:18;6824:6;6821:30;6818:117;;;6854:79;;:::i;:::-;6818:117;6968:4;6960:6;6956:17;6944:29;;7022:3;7014:4;7006:6;7002:17;6992:8;6988:32;6985:41;6982:128;;;7029:79;;:::i;:::-;6982:128;6564:552;;;;;:::o;7122:817::-;7210:6;7218;7226;7234;7283:2;7271:9;7262:7;7258:23;7254:32;7251:119;;;7289:79;;:::i;:::-;7251:119;7409:1;7434:53;7479:7;7470:6;7459:9;7455:22;7434:53;:::i;:::-;7424:63;;7380:117;7536:2;7562:53;7607:7;7598:6;7587:9;7583:22;7562:53;:::i;:::-;7552:63;;7507:118;7692:2;7681:9;7677:18;7664:32;7723:18;7715:6;7712:30;7709:117;;;7745:79;;:::i;:::-;7709:117;7858:64;7914:7;7905:6;7894:9;7890:22;7858:64;:::i;:::-;7840:82;;;;7635:297;7122:817;;;;;;;:::o;7945:98::-;7996:6;8030:5;8024:12;8014:22;;7945:98;;;:::o;8049:168::-;8132:11;8166:6;8161:3;8154:19;8206:4;8201:3;8197:14;8182:29;;8049:168;;;;:::o;8223:246::-;8304:1;8314:113;8328:6;8325:1;8322:13;8314:113;;;8413:1;8408:3;8404:11;8398:18;8394:1;8389:3;8385:11;8378:39;8350:2;8347:1;8343:10;8338:15;;8314:113;;;8461:1;8452:6;8447:3;8443:16;8436:27;8285:184;8223:246;;;:::o;8475:373::-;8561:3;8589:38;8621:5;8589:38;:::i;:::-;8643:70;8706:6;8701:3;8643:70;:::i;:::-;8636:77;;8722:65;8780:6;8775:3;8768:4;8761:5;8757:16;8722:65;:::i;:::-;8812:29;8834:6;8812:29;:::i;:::-;8807:3;8803:39;8796:46;;8565:283;8475:373;;;;:::o;8854:309::-;8965:4;9003:2;8992:9;8988:18;8980:26;;9052:9;9046:4;9042:20;9038:1;9027:9;9023:17;9016:47;9080:76;9151:4;9142:6;9080:76;:::i;:::-;9072:84;;8854:309;;;;:::o;9169:118::-;9256:24;9274:5;9256:24;:::i;:::-;9251:3;9244:37;9169:118;;:::o;9293:222::-;9386:4;9424:2;9413:9;9409:18;9401:26;;9437:71;9505:1;9494:9;9490:17;9481:6;9437:71;:::i;:::-;9293:222;;;;:::o;9521:442::-;9670:4;9708:2;9697:9;9693:18;9685:26;;9721:71;9789:1;9778:9;9774:17;9765:6;9721:71;:::i;:::-;9802:72;9870:2;9859:9;9855:18;9846:6;9802:72;:::i;:::-;9884;9952:2;9941:9;9937:18;9928:6;9884:72;:::i;:::-;9521:442;;;;;;:::o;9969:143::-;10026:5;10057:6;10051:13;10042:22;;10073:33;10100:5;10073:33;:::i;:::-;9969:143;;;;:::o;10118:::-;10175:5;10206:6;10200:13;10191:22;;10222:33;10249:5;10222:33;:::i;:::-;10118:143;;;;:::o;10267:663::-;10355:6;10363;10371;10420:2;10408:9;10399:7;10395:23;10391:32;10388:119;;;10426:79;;:::i;:::-;10388:119;10546:1;10571:64;10627:7;10618:6;10607:9;10603:22;10571:64;:::i;:::-;10561:74;;10517:128;10684:2;10710:64;10766:7;10757:6;10746:9;10742:22;10710:64;:::i;:::-;10700:74;;10655:129;10823:2;10849:64;10905:7;10896:6;10885:9;10881:22;10849:64;:::i;:::-;10839:74;;10794:129;10267:663;;;;;:::o;10936:351::-;11006:6;11055:2;11043:9;11034:7;11030:23;11026:32;11023:119;;;11061:79;;:::i;:::-;11023:119;11181:1;11206:64;11262:7;11253:6;11242:9;11238:22;11206:64;:::i;:::-;11196:74;;11152:128;10936:351;;;;:::o;11293:169::-;11377:11;11411:6;11406:3;11399:19;11451:4;11446:3;11442:14;11427:29;;11293:169;;;;:::o;11468:165::-;11608:17;11604:1;11596:6;11592:14;11585:41;11468:165;:::o;11639:366::-;11781:3;11802:67;11866:2;11861:3;11802:67;:::i;:::-;11795:74;;11878:93;11967:3;11878:93;:::i;:::-;11996:2;11991:3;11987:12;11980:19;;11639:366;;;:::o;12011:419::-;12177:4;12215:2;12204:9;12200:18;12192:26;;12264:9;12258:4;12254:20;12250:1;12239:9;12235:17;12228:47;12292:131;12418:4;12292:131;:::i;:::-;12284:139;;12011:419;;;:::o;12436:180::-;12484:77;12481:1;12474:88;12581:4;12578:1;12571:15;12605:4;12602:1;12595:15;12622:233;12661:3;12684:24;12702:5;12684:24;:::i;:::-;12675:33;;12730:66;12723:5;12720:77;12717:103;;12800:18;;:::i;:::-;12717:103;12847:1;12840:5;12836:13;12829:20;;12622:233;;;:::o;12883:314::-;12979:3;13000:70;13063:6;13058:3;13000:70;:::i;:::-;12993:77;;13080:56;13129:6;13124:3;13117:5;13080:56;:::i;:::-;13161:29;13183:6;13161:29;:::i;:::-;13156:3;13152:39;13145:46;;12883:314;;;;;:::o;13203:329::-;13324:4;13362:2;13351:9;13347:18;13339:26;;13411:9;13405:4;13401:20;13397:1;13386:9;13382:17;13375:47;13439:86;13520:4;13511:6;13503;13439:86;:::i;:::-;13431:94;;13203:329;;;;;:::o;13538:147::-;13639:11;13676:3;13661:18;;13538:147;;;;:::o;13713:327::-;13827:3;13848:88;13929:6;13924:3;13848:88;:::i;:::-;13841:95;;13946:56;13995:6;13990:3;13983:5;13946:56;:::i;:::-;14027:6;14022:3;14018:16;14011:23;;13713:327;;;;;:::o;14046:291::-;14186:3;14208:103;14307:3;14298:6;14290;14208:103;:::i;:::-;14201:110;;14328:3;14321:10;;14046:291;;;;;:::o;14343:180::-;14391:77;14388:1;14381:88;14488:4;14485:1;14478:15;14512:4;14509:1;14502:15;14529:104;14574:7;14603:24;14621:5;14603:24;:::i;:::-;14592:35;;14529:104;;;:::o;14639:138::-;14720:32;14746:5;14720:32;:::i;:::-;14713:5;14710:43;14700:71;;14767:1;14764;14757:12;14700:71;14639:138;:::o;14783:159::-;14848:5;14879:6;14873:13;14864:22;;14895:41;14930:5;14895:41;:::i;:::-;14783:159;;;;:::o;14948:679::-;15044:6;15052;15060;15109:2;15097:9;15088:7;15084:23;15080:32;15077:119;;;15115:79;;:::i;:::-;15077:119;15235:1;15260:64;15316:7;15307:6;15296:9;15292:22;15260:64;:::i;:::-;15250:74;;15206:128;15373:2;15399:72;15463:7;15454:6;15443:9;15439:22;15399:72;:::i;:::-;15389:82;;15344:137;15520:2;15546:64;15602:7;15593:6;15582:9;15578:22;15546:64;:::i;:::-;15536:74;;15491:129;14948:679;;;;;:::o;15633:118::-;15720:24;15738:5;15720:24;:::i;:::-;15715:3;15708:37;15633:118;;:::o;15757:419::-;15896:4;15934:2;15923:9;15919:18;15911:26;;15947:71;16015:1;16004:9;16000:17;15991:6;15947:71;:::i;:::-;16065:9;16059:4;16055:20;16050:2;16039:9;16035:18;16028:48;16093:76;16164:4;16155:6;16093:76;:::i;:::-;16085:84;;15757:419;;;;;:::o;16182:386::-;16286:3;16314:38;16346:5;16314:38;:::i;:::-;16368:88;16449:6;16444:3;16368:88;:::i;:::-;16361:95;;16465:65;16523:6;16518:3;16511:4;16504:5;16500:16;16465:65;:::i;:::-;16555:6;16550:3;16546:16;16539:23;;16290:278;16182:386;;;;:::o;16574:271::-;16704:3;16726:93;16815:3;16806:6;16726:93;:::i;:::-;16719:100;;16836:3;16829:10;;16574:271;;;;:::o;16851:143::-;16908:5;16939:6;16933:13;16924:22;;16955:33;16982:5;16955:33;:::i;:::-;16851:143;;;;:::o;17000:351::-;17070:6;17119:2;17107:9;17098:7;17094:23;17090:32;17087:119;;;17125:79;;:::i;:::-;17087:119;17245:1;17270:64;17326:7;17317:6;17306:9;17302:22;17270:64;:::i;:::-;17260:74;;17216:128;17000:351;;;;:::o;17357:86::-;17392:7;17432:4;17425:5;17421:16;17410:27;;17357:86;;;:::o;17449:112::-;17532:22;17548:5;17532:22;:::i;:::-;17527:3;17520:35;17449:112;;:::o;17567:545::-;17740:4;17778:3;17767:9;17763:19;17755:27;;17792:71;17860:1;17849:9;17845:17;17836:6;17792:71;:::i;:::-;17873:68;17937:2;17926:9;17922:18;17913:6;17873:68;:::i;:::-;17951:72;18019:2;18008:9;18004:18;17995:6;17951:72;:::i;:::-;18033;18101:2;18090:9;18086:18;18077:6;18033:72;:::i;:::-;17567:545;;;;;;;:::o"},"methodIdentifiers":{"balance()":"b69ef8a8","executeCall(address,uint256,bytes)":"9e5d4c49","isValidSignature(bytes32,bytes)":"1626ba7e","nonce()":"affed0e0","owner()":"8da5cb5b","supportsInterface(bytes4)":"01ffc9a7","token()":"fc0c546a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"TransactionExecuted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"executeCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes32,bytes)\":{\"details\":\"Should return whether the signature provided is valid for the provided data\",\"params\":{\"hash\":\"Hash of the data to be signed\",\"signature\":\"Signature byte array associated with _data\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenBoundAccount.sol\":\"TokenBoundAccount\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x85a45f3f10014a0f8be41157a32b6a5f905753ea64a4b64e29fc12b7deeecf39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3c74009ce36136b36c77c23935b8e4a7b4f253be2da2be4fb4a916b1ce43743\",\"dweb:/ipfs/QmcH36v3iN7SJJuF73AunLR2LtNxhVJ1wm63ph4dPZ4pcL\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0x2b9807d194b92f1068d868e9587d27037264a9a067c778486f86ae21c61cbd5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22d71f40aa38a20cf466d8647452a6e3f746353474f8c8af40f03aa8cae38420\",\"dweb:/ipfs/QmQ752Hz5av7YDK8pFojzb5qgeXQvfsdkdwkHVzaXoYAZR\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":{\"keccak256\":\"0x6b11eb41a228cca35d4b662b4df69fcd75192851365102690f57b2ac01e83fe6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab006a2983ed350d2af21ddcdd835dcae3b8340086cc4d088460da5abd041f69\",\"dweb:/ipfs/QmbEacDhkJZiGrgzLjB4pNtE8Z1uudjDw1DvcDUTVQFsLG\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/TokenBoundAccount.sol\":{\"keccak256\":\"0x42d7b20dedd6b7701476a38d21ebe1c075ab8ae33d23b71e094f0f30327a7719\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://655f4786446e43b0a14cecc728720723561ef30fda1ca6d53cfb6b4f3896c418\",\"dweb:/ipfs/QmfTjqBcsHrmt44WcmttYKrjRiovj4jzJzm2DDMsbY2yTj\"]},\"interfaces/IERC6551Account.sol\":{\"keccak256\":\"0x2eb26265de2a08ac7cf0cbc073c11f4d3f90c52e0b6d6d1aa6595e0fec264ecf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32da1bae7b52faddbae6521366dd34dfd0891b55a562869162c96882805dd989\",\"dweb:/ipfs/QmRLd9W4ySRQyE9WbUEwsXqrZ7WWrDPkEcSamZJzzG7k1F\"]},\"lib/ERC6551AccountLib.sol\":{\"keccak256\":\"0x6637ae9f8448698ba8024aa49641372eba436280665e9e4b01b6189fb3b975b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://977218348197e176259cb45450e75667d497a1906ae7413877606f839082bd2c\",\"dweb:/ipfs/QmNaQ8vx8X2zBXb2RWMhydzQGPoZ9E1z8Ew4PmwXGmnz74\"]}},\"version\":1}"}},"interfaces/IERC6551Account.sol":{"IERC6551Account":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":true,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"TransactionExecuted","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"executeCall","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"nonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"executeCall(address,uint256,bytes)":"9e5d4c49","nonce()":"affed0e0","owner()":"8da5cb5b","token()":"fc0c546a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"TransactionExecuted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"executeCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"the ERC-165 identifier for this interface is `0xeff4d378`\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IERC6551Account.sol\":\"IERC6551Account\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IERC6551Account.sol\":{\"keccak256\":\"0x2eb26265de2a08ac7cf0cbc073c11f4d3f90c52e0b6d6d1aa6595e0fec264ecf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32da1bae7b52faddbae6521366dd34dfd0891b55a562869162c96882805dd989\",\"dweb:/ipfs/QmRLd9W4ySRQyE9WbUEwsXqrZ7WWrDPkEcSamZJzzG7k1F\"]}},\"version\":1}"},"IERC6551AccountProxy":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IERC6551Account.sol\":\"IERC6551AccountProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IERC6551Account.sol\":{\"keccak256\":\"0x2eb26265de2a08ac7cf0cbc073c11f4d3f90c52e0b6d6d1aa6595e0fec264ecf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32da1bae7b52faddbae6521366dd34dfd0891b55a562869162c96882805dd989\",\"dweb:/ipfs/QmRLd9W4ySRQyE9WbUEwsXqrZ7WWrDPkEcSamZJzzG7k1F\"]}},\"version\":1}"}},"lib/ERC6551AccountLib.sol":{"ERC6551AccountLib":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122092a2fc44b47a9385fdc720e0b8f2255fdc635de88ef132aaef95431bcd6770c864736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 LOG2 0xFC PREVRANDAO 0xB4 PUSH27 0x9385FDC720E0B8F2255FDC635DE88EF132AAEF95431BCD6770C864 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"115:1914:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122092a2fc44b47a9385fdc720e0b8f2255fdc635de88ef132aaef95431bcd6770c864736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 LOG2 0xFC PREVRANDAO 0xB4 PUSH27 0x9385FDC720E0B8F2255FDC635DE88EF132AAEF95431BCD6770C864 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"115:1914:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/ERC6551AccountLib.sol\":\"ERC6551AccountLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0x2b9807d194b92f1068d868e9587d27037264a9a067c778486f86ae21c61cbd5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22d71f40aa38a20cf466d8647452a6e3f746353474f8c8af40f03aa8cae38420\",\"dweb:/ipfs/QmQ752Hz5av7YDK8pFojzb5qgeXQvfsdkdwkHVzaXoYAZR\"]},\"lib/ERC6551AccountLib.sol\":{\"keccak256\":\"0x6637ae9f8448698ba8024aa49641372eba436280665e9e4b01b6189fb3b975b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://977218348197e176259cb45450e75667d497a1906ae7413877606f839082bd2c\",\"dweb:/ipfs/QmNaQ8vx8X2zBXb2RWMhydzQGPoZ9E1z8Ew4PmwXGmnz74\"]}},\"version\":1}"}}}}}